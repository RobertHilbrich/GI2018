% Encoding: UTF-8

@InProceedings{Cordovilla2011,
  author    = {Mikel Cordovilla and Fr{\'e}d{\'e}ric Boniol and Julien Forget and Eric Noulard and Claire Pagetti},
  title     = {{D}eveloping critical embedded systems on multicore architectures: the {PRELUDE}-{SCHEDMCORE} toolset},
  booktitle = {RTNS},
  year      = {2011},
  pages     = {107--116},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  crossref  = {DBLP:conf/rtns/2011},
  ee        = {http://rtns2011.irccyn.ec-nantes.fr/files/rtns2011.pdf},
  file      = {Cordovilla2011.pdf:files\\Cordovilla2011.pdf:PDF},
  groups    = {(RT-) Scheduling},
  owner     = {hilrob},
  timestamp = {2013.03.05},
}

@InProceedings{Lecoutre2007,
  author    = {Christophe Lecoutre and Fred Hemery},
  title     = {A Study of Residual Supports in Arc Consistency},
  booktitle = {{IJCAI} 2007, Proceedings of the 20th International Joint Conference on Artificial Intelligence, Hyderabad, India, January 6-12, 2007},
  year      = {2007},
  pages     = {125--130},
  url       = {http://ijcai.org/Proceedings/07/Papers/018.pdf},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/ijcai/LecoutreH07},
  file      = {Lecoutre2007.pdf:files\\Lecoutre2007.pdf:PDF},
  timestamp = {Wed, 20 Jul 2016 13:58:40 +0200},
}

@InProceedings{AlvarezGutierrez2008,
  author    = {\'Alvarez Guti\'{e}rrez, Dar\'{\i}o and Soler, Francisco Ort\'{\i}n},
  title     = {{A}pplying lightweight flexible virtual machines to extensible embedded systems},
  booktitle = {Proceedings of the 1st workshop on Isolation and integration in embedded systems},
  year      = {2008},
  series    = {IIES '08},
  publisher = {ACM},
  location  = {Glasgow, Scotland},
  isbn      = {978-1-60558-126-2},
  pages     = {23--28},
  doi       = {http://doi.acm.org/10.1145/1435458.1435463},
  url       = {http://doi.acm.org/10.1145/1435458.1435463},
  acmid     = {1435463},
  address   = {New York, NY, USA},
  file      = {AlvarezGutierrez2008.pdf:files\\AlvarezGutierrez2008.pdf:PDF},
  groups    = {(Embedded) Security, Virtualisierung & Partitionierung},
  keywords  = {embedded systems, flexibility, protection, reduced instruction set, software-based isolation, virtual machines},
  numpages  = {6},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.02.20},
}

@Misc{Acatech2011,
  author       = {{ACATECH - Deutsche Akademie der Technikwissenschaften}},
  title        = {{C}yber-{P}hysical {S}ystems. {I}nnovationsmotoren für {M}obilität, {G}esundheit, {E}nergie und {P}roduktion},
  year         = {2011},
  howpublished = {Online},
  month        = nov,
  doi          = {10.1007/ 978-3-642-27567-8},
  url          = {http://www.acatech.de/fileadmin/user_upload/Baumstruktur_nach_Website/Acatech/root/de/Material_fuer_Sonderseiten/cps/acatech_POSITION_CPS_web.pdf},
  file         = {Acatech2011.pdf:files\\Acatech2011.pdf:PDF},
  owner        = {hilrob},
  read         = {read},
  timestamp    = {2012.02.20},
}

@Misc{AgendaCPS2011,
  author       = {{ACATECH - Deutsche Akademie der Technikwissenschaften}},
  title        = {{I}ntegrierte {F}orschungsagenda {C}yber-{P}hysical {S}ystems},
  year         = {2011},
  howpublished = {Online},
  url          = {http://www.acatech.de/de/projekte/laufende-projekte/integrierte-forschungsagenda-cyber-physical-systems.html},
  groups       = {Misc},
  owner        = {hilrob},
  read         = {read},
  timestamp    = {2012.02.20},
}

@Article{Acharya1999,
  author     = {Acharya, Anurag and Setia, Sanjeev},
  title      = {{A}vailability and {U}tility of {I}dle {M}emory in {W}orkstation {C}lusters},
  journal    = {SIGMETRICS Perform. Eval. Rev.},
  year       = {1999},
  volume     = {27},
  number     = {1},
  month      = may,
  pages      = {35--46},
  issn       = {0163-5999},
  doi        = {10.1145/301464.301478},
  url        = {http://doi.acm.org/10.1145/301464.301478},
  address    = {New York, NY, USA},
  file       = {Acharya1999.pdf:files\\Acharya1999.pdf:PDF},
  groups     = {Load Balancing / Clusters},
  issue_date = {June 1999},
  numpages   = {12},
  owner      = {hilrob},
  publisher  = {ACM},
  timestamp  = {2014.05.19},
}

@Article{Acquaviva2008,
  author    = {Acquaviva, Andrea and Alimonda, Andrea and Carta, Salvatore and Pittau, Michele},
  title     = {{A}ssessing {T}ask {M}igration {I}mpact on {E}mbedded {S}oft {R}eal-{T}ime {S}treaming {M}ultimedia {A}pplications},
  journal   = {EURASIP Journal on Embedded Systems},
  year      = {2008},
  volume    = {2008},
  pages     = {1--16},
  issn      = {1687-3955},
  doi       = {10.1155/2008/518904},
  url       = {http://www.hindawi.com/journals/es/2008/518904.html},
  abstract  = {{M}ultiprocessor systems on chips ({MPS}o{C}s) are envisioned as the
	future of embedded platforms such as game-engines, smart-phones and
	palmtop computers. {O}ne of the main challenge preventing the widespread
	diffusion of these systems is the efficient mapping of multitask
	multimedia applications on processing elements. {D}ynamic solutions
	based on task migration has been recently explored to perform run-time
	reallocation of task to maximize performance and optimize energy
	consumption. {E}ven if task migration can provide high flexibility,
	its overhead must be carefully evaluated when applied to soft real-time
	applications. {I}n fact, these applications impose deadlines that
	may be missed during the migration process. {I}n this paper we first
	present a middleware infrastructure supporting dynamic task allocation
	for {NUMA} architectures. {T}hen we perform an extensive characterization
	of its impact on multimedia soft real-time applications using a software
	{FM} {R}adio benchmark.},
  annote    = {Gute Motivation f\"{u}r Task Migration! Leider nur simuliert, mit shared bus und shared memory. Task migration braucht nat\"{u}rlich homogene cores, ansonsten macht es keinen Sinn! [8]: Use profiling information to decide which task should be migrated when [11]: Challenges for task migration sollen mal angeschaut werden [14]: Static Approach f\"{u}r Scheduling und Mapping (inkl. Ber\"{u}cksichtigung der Kommunikationskosten! [15,16] sollte man sich auch mal ansehen [10]: Was ist der MOSIX Algorithmus f\"{u}r Load Balancing in Clustern ohne Master-Slave Architektur?},
  file      = {Acquaviva2008.pdf:files\\Acquaviva2008.pdf:PDF},
  groups    = {Task Migration},
  keywords  = {CODE-CHECKPOINTING,FPGA,MICROBLAZES,MIDDLEWARE,MPSOC,MULTI-MEDIA-APPLICATIONS,REAL-TIME SYSTEMS,SOFT-REAL-TIME-SYSTEMS,TASK-MIGRATION,UCLINUX},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.05.27},
}

@InProceedings{Agarwal2007,
  author    = {Agarwal, Anant and Levy, Markus},
  title     = {{T}he kill rule for multicore},
  booktitle = {Proceedings of the 44th annual Design Automation Conference},
  year      = {2007},
  series    = {DAC '07},
  publisher = {ACM},
  location  = {San Diego, California},
  isbn      = {978-1-59593-627-1},
  pages     = {750--753},
  doi       = {10.1145/1278480.1278668},
  url       = {http://doi.acm.org/10.1145/1278480.1278668},
  abstract  = {Multicore has shown significant performance and power advantages over
	single cores in commercial systems with a 2-4 cores. Applying a corollary
	of Moore's Law for multicore, we expect to see 1K multicore chips
	within a decade. 1K multicore systems introduce significant architectural
	challenges. One of these is the power efficiency challenge. Today's
	cores consume 10's of watts. Even at about one watt per core, a 1K-core
	chip would need to dissipate 1K watts! This paper discusses the "Kill
	rule for multicore" for power-efficient multicore design, an
	
	approach inspired by the "Kiss rule for RISC processor design". Kill
	stands for Kill if less than linear, and represents a design approach
	in which any additional area allocated to a resource within a core,
	such as a cache, is carefully traded off against using the area for
	additional cores. The Kill Rule states that we must increase resource
	size (for example, cache size) only if for every 1% increase in core
	area there is at least a 1% increase in core performance.},
  acmid     = {1278668},
  address   = {New York, NY, USA},
  file      = {Agarwal2007.pdf:files\\Agarwal2007.pdf:PDF},
  keywords  = {CMP, computer architecture, core, kill rule, multicore, parallel computing, power efficiency, stream processing, tiled multicore},
  numpages  = {4},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2012.06.12},
}

@Book{Akhter2008a,
  author    = {Akhter, Shameem and Roberts, Jason},
  title     = {{M}ulticore {P}rogrammierung},
  year      = {2008},
  edition   = {1},
  publisher = {Intel Press},
  url       = {http://www.intel.com/intelpress/sum\_mcp.htm},
  abstract  = {{D}iscover programming techniques for {I}ntel® multi-core {T}echnology
	and {I}ntel® {H}yper-{T}hreading {T}echnology. {S}oftware developers
	can no longer rely on increasing clock speeds alone to speed up single-threaded
	applications; instead, to gain a competitive advantage, developers
	must learn how to properly design their applications to run in a
	threaded environment. {M}ulti-core architectures have a single processor
	package that contains two or more processor "execution cores," or
	computational engines, and deliver - with appropriate software -
	fully parallel execution of multiple software threads. {I}ntel {H}yper-{T}hreading
	{T}echnology enables additional threads to operate on each core.
	{M}ulti-{C}ore {P}rogramming: {I}ncreasing {P}erformance through
	{S}oftware {M}ultithreading helps software developers write high-performance
	multi-threaded code for {I}ntel's multi-core architecture while avoiding
	the common parallel programming issues associated with multi-threaded
	programs. {H}ighlights {I}nclude: {E}lements of parallel programming
	and multi-threading, {P}rogramming with threading {API}s, {O}pen{MP}:
	{T}he portable solution, {S}olutions to common parallel programming
	problems, {D}ebugging and testing multi-threaded applications, {S}oftware
	development tools for multi-threading {T}his is a practical, hands-on
	volume with immediately usable code examples that enable readers
	to quickly master the necessary programming techniques. {T}he companion
	{W}eb site contains pointers to threading and optimization tools
	and code samples from the book.},
  groups    = {Books},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.05.27},
}

@InCollection{Alders2006,
  author    = {Alders, K.},
  title     = {{K}omplexitäts- und {V}ariantenmanagement der {AUDI} {AG}},
  booktitle = {Individualisierte Produkte - Komplexität beherrschen in Entwicklung und Produktion},
  year      = {2006},
  editor    = {Lindemann, Udo and Reichwald, Ralf and Zäh, MichaelF.},
  language  = {German},
  series    = {VDI-Buch},
  publisher = {Springer Berlin Heidelberg},
  isbn      = {978-3-540-25506-2},
  pages     = {221--237},
  doi       = {10.1007/3-540-34274-5_13},
  url       = {http://dx.doi.org/10.1007/3-540-34274-5_13},
  owner     = {hilrob},
  timestamp = {2014.10.14},
}

@InProceedings{AlEnawy2005,
  author    = {AlEnawy, T. A. and Aydin, H.},
  title     = {{E}nergy-aware task allocation for rate monotonic scheduling},
  booktitle = {Proc. 11th IEEE Real Time and Embedded Technology and Applications Symp. RTAS 2005},
  year      = {2005},
  pages     = {213--223},
  doi       = {10.1109/RTAS.2005.20},
  abstract  = {{W}e consider the problem of energy minimization for periodic preemptive
	hard real-time tasks that are scheduled on an identical multiprocessor
	platform with dynamic voltage scaling capability. {W}e adopt partitioned
	scheduling and assume that the tasks are assigned rate-monotonic
	priorities. {W}e show that the problem is {NP}-hard in the strong
	sense on m >= 2 processors even when the feasibility is guaranteed
	a priori. {B}ecause of the intractability of the problem, we propose
	an integrated approach that consists of three different components:
	{RMS} admission control test, the partitioning heuristic and the
	speed assignment algorithm. {W}e discuss possible options for each
	component by considering state-of-the-art solutions. {T}hen, we experimentally
	investigate the impact of heuristics on feasibility, energy and feasibility/energy
	performance dimensions. {I}n offline settings where tasks can be
	ordered according to the utilization values, we show that worst-fit
	dominates other well-known heuristics. {F}or online settings, we
	propose an algorithm that is based on reserving a subset of processors
	for light tasks to guarantee a consistent performance.},
  file      = {AlEnawy2005.pdf:files\\AlEnawy2005.pdf:PDF},
  groups    = {Energy & Power, (RT-) Scheduling},
  keywords  = {TASK-ALLOCATION; ENERGY; DYNAMIC VOLTAGE SCALING; SCHEDULING; RMS; PREEMPTIVE SCHEDULING; HOMOGENEOUS MULTI-CORE;},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.06.09},
}

@InProceedings{AlFaruque2007,
  author    = {{Al Faruque}, M.A. and Ebi, T. and Henkel, J.},
  title     = {{R}un-{T}ime {A}daptive {O}n-{C}hip {C}ommunication {S}cheme},
  booktitle = {Proceedings of the 2007 IEEE/ACM international conference on Computer-aided design},
  year      = {2007},
  publisher = {IEEE},
  month     = nov,
  isbn      = {978-1-4244-1381-2},
  pages     = {26--31},
  url       = {http://portal.acm.org/citation.cfm?id=1326073.1326080},
  abstract  = {{D}uring run-time varying workloads and/or constraints in embedded
	systems require run-time adaptivity to provide a high degree of efficiency
	during any operation mode/scenario. {D}esign time decisions can often
	only cover certain scenarios and fail in efficiency when hard-to-predict
	system scenarios occur. {W}e are presenting the first approach of
	an adaptive on-chip communication scheme. {I}t provides an adaptive
	routing/path allocation algorithm to meet a required level of {Q}o{S}
	(guaranteed bandwidth). {I}n our architecture adaptive runtime links
	are established by re-assigning buffer blocks on-demand. {T}his adaptive
	buffer allocation scheme increases the buffer utilization and decreases
	the overall buffer use on an average of 42\% in our case study analysis
	compared to a fixed buffer assignment strategy. {T}he area overhead
	introduced by the adaptive scheme can be traded-off against the flexibility
	in order to select an available path and on-demand buffer allocation.
	{W}e demonstrate the advantage by using various real world digital
	media applications and compare our approach to the state-of-the-art
	static on-chip communication schemes.},
  file      = {AlFaruque2007.pdf:files\\AlFaruque2007.pdf:PDF},
  issn      = {1092-3152},
  keywords  = {DYNAMIC-RECONFIGURATION,MULTI-CORE,NOC,ON-CHIP-INTERCONNECT,SOC},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2010.05.28},
}

@InProceedings{Alur1990,
  author    = {Alur, R. and Courcoubetis, C. and Dill, D.},
  title     = {{M}odel-checking for real-time systems},
  booktitle = {Logic in Computer Science, 1990. LICS '90, Proceedings., Fifth Annual IEEE Symposium on e},
  year      = {1990},
  pages     = {414--425},
  doi       = {10.1109/LICS.1990.113766},
  abstract  = {This research extends CTL model-checking to the analysis of real-time
	systems, whose correctness depends on the magnitudes of the timing
	delays. For specifications, the syntax of CTL is extended to allow
	quantitative temporal operators. The formulas of the resulting logic,
	TCTL, are interpretation over continuous computation trees, trees
	in which paths are maps from the set of nonnegative reals to system
	states. To model finite-state systems the notion of timed graphs
	is introduced-state-transition graphs extended with a mechanism that
	allows the expression of constant bounds on the delays between the
	state transition. As the main result, an algorithm is developed for
	model checking, that is, for determining the truth of a TCTL formula
	with respect to a timed graph. It is argued that choosing a dense
	domain, instead of a discrete domain, to model time does not blow
	up the complexity of the model-checking problem. On the negative
	side, it is shown that the denseness of the underlying time domain
	makes TCTL II11-hard. The question of deciding whether a given TCTL
	formula is implementable by a timed graph is also undecidable},
  file      = {Alur1990.pdf:files\\Alur1990.pdf:PDF},
  keywords  = {finite automata;real-time systems;temporal logic;CTL model-checking;TCTL formula;continuous computation trees;delays;discrete domain;finite-state systems;model checking;quantitative temporal operators;real-time systems;state-transition graphs;timed computational tree logic;timed graph;timed graphs;timing delays;Computer bugs;Computer science;Contracts;Control systems;Delay;Digital systems;Logic;Real time systems;Timing;Tree graphs},
  owner     = {hilrob},
  timestamp = {2013.06.17},
}

@Article{Alur1994,
  author     = {Alur, Rajeev and Dill, David L.},
  title      = {{A} theory of timed automata},
  journal    = {Theor. Comput. Sci.},
  year       = {1994},
  volume     = {126},
  number     = {2},
  month      = apr,
  pages      = {183--235},
  issn       = {0304-3975},
  doi        = {10.1016/0304-3975(94)90010-8},
  url        = {http://dx.doi.org/10.1016/0304-3975(94)90010-8},
  acmid      = {180519},
  address    = {Essex, UK},
  file       = {Alur1994.pdf:files\\Alur1994.pdf:PDF},
  groups     = {Formale Methoden},
  issue_date = {April 25, 1994},
  numpages   = {53},
  owner      = {hilrob},
  publisher  = {Elsevier Science Publishers Ltd.},
  timestamp  = {2013.06.13},
}

@InProceedings{Amdahl1967,
  author    = {Amdahl, Gene M.},
  title     = {{V}alidity of the single processor approach to achieving large scale computing capabilities},
  booktitle = {Proceedings of the April 18-20, 1967, spring joint computer conference},
  year      = {1967},
  publisher = {ACM},
  pages     = {483--485},
  doi       = {http://doi.acm.org/10.1145/1465482.1465560},
  url       = {http://doi.acm.org/10.1145/1465482.1465560},
  abstract  = {{F}or over a decade prophets have voiced the contention that the organization
	of a single computer has reached its limits and that truly significant
	advances can be made only by interconnection of a multiplicity of
	computers in such a manner as to permit cooperative solution. {V}ariously
	the proper direction has been pointed out as general purpose computers
	with a generalized interconnection of memories, or as specialized
	computers with geometrically related memory interconnections and
	controlled by one or more instruction streams.},
  file      = {Amdahl1967.pdf:files\\Amdahl1967.pdf:PDF},
  groups    = {Multi-Core Allgemein, Parallel Programming Models},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2011.11.29},
}

@Article{Andersen2011,
  author     = {Andersen, B. Scott and Romanski, George},
  title      = {{V}erification of {S}afety-critical {S}oftware},
  journal    = {Queue},
  year       = {2011},
  volume     = {9},
  number     = {8},
  month      = aug,
  pages      = {5050--5059},
  issn       = {1542-7730},
  doi        = {10.1145/2016036.2024356},
  url        = {http://doi.acm.org/10.1145/2016036.2024356},
  acmid      = {2024356},
  address    = {New York, NY, USA},
  articleno  = {50},
  file       = {Andersen2011.pdf:files\\Andersen2011.pdf:PDF},
  groups     = {Safety-Critical Systems},
  issue_date = {August 2011},
  numpages   = {10},
  owner      = {hilrob},
  publisher  = {ACM},
  read       = {next},
  timestamp  = {2012.06.15},
}

@Misc{Anderson2008,
  author    = {Anderson, Jim and Brandenburg, Bjorn B. and Calandrino, John},
  title     = {{O}n the {S}calability of {R}eal-{T}ime {S}cheduling {A}lgorithms on {M}ulticore {P}latforms: {A} {C}ase {S}tudy},
  year      = {2008},
  month     = nov,
  abstract  = {{M}ulti-{C}ore platforms are predicted to get much larger in the future.
	{H}ow will different real-time scheduling algorithms scale?},
  annote    = {Gute Zusammenfassung der bisherigen Arbeiten von J. Anderson et. al. Insbesondere gibt er auch einen Ausblick auf die Forschungsarbeiten ... eignet sich f\"{u}r ein Deliverable (RT-Scheduling und Scalability) Ich mochte diesen \"{U}berblick sehr. Gerade in Verbindung mit seinen Papern ist das ganze gut lesbar und verst\"{a}ndlich. Hier ist auch ein guter Vergleich der verschiedenen Scheduling Ans\"{a}tze enthalten und wie sie wahrscheinlich bei 80 Cores aussehen werden. -> Deliverable!!!!!},
  file      = {Anderson2008.pdf:files\\Anderson2008.pdf:PDF},
  isbn      = {978-0-7695-3477-0},
  keywords  = {CASE-STUDY,EDF,LITMUS\^{}RT,MULTI-CORE,PERIODIC-TASK-SYSTEM,PFAIR,REAL-TIME SCHEDULING,REAL-TIME-SYSTEMS,SCHEDULING,SPORADIC-TASK-SYSTEM},
  owner     = {hilrob},
  pages     = {65},
  read      = {done},
  timestamp = {2010.05.27},
}

@InProceedings{Anderson2006a,
  author    = {Anderson, James and Calandrino, John},
  title     = {{P}arallel {R}eal-{T}ime {T}ask {S}cheduling on {M}ulticore {P}latforms},
  booktitle = {2006 27th IEEE International Real-Time Systems Symposium (RTSS'06)},
  year      = {2006},
  publisher = {IEEE},
  month     = {Dezember},
  isbn      = {0-7695-2761-2},
  pages     = {89--100},
  doi       = {10.1109/RTSS.2006.32},
  url       = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4032339},
  abstract  = {{W}e propose a scheduling method for real-time systems implemented
	on multicore platforms that encourages individual threads of multithreaded
	real-time tasks to be scheduled together. {W}hen such threads are
	cooperative and share a common working set, this method enables more
	effective use of on-chip shared caches.},
  file      = {Anderson2006a.pdf:files\\Anderson2006a.pdf:PDF},
  issn      = {1052-8725},
  keywords  = {CACHE STORAGE,MULTI-CORE,MULTI-THREADING,ON-CHIP SHARED CACHE,PARALLEL PROCESSING,REAL-TIME-SYSTEMS,REAL-TIME TASK SCHEDULING,SCHEDULING},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2010.05.28},
}

@InProceedings{Anderson2006,
  author        = {Anderson, J. H. and Calandrino, J. M. and Devi, U. C.},
  title         = {{R}eal-{T}ime {S}cheduling on {M}ulticore {P}latforms},
  booktitle     = {12th IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS'06)},
  year          = {2006},
  publisher     = {IEEE},
  isbn          = {0-7695-2516-4},
  pages         = {179--190},
  doi           = {10.1109/RTAS.2006.35},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1613334},
  abstract      = {{M}ulticore architectures, which have multiple processing units on
	a single chip, are widely viewed as a way to achieve higher processor
	performance, given that thermal and power problems impose limits
	on the performance of single-core designs. {A}ccordingly, several
	chip manufacturers have already released, or will soon release, chips
	with dual cores, and it is predicted that chips with up to 32 cores
	will be available within a decade. {T}o effectively use the available
	processing resources on multicore platforms, software designs should
	avoid co-executing applications or threads that can worsen the performance
	of shared caches, if not thrash them. {W}hile cache-aware scheduling
	techniques for such platforms have been proposed for throughput-oriented
	applications, to the best of our knowledge, no such work has targeted
	real-time applications. {I}n this paper, we propose and evaluate
	a cache-aware {P}fair-based scheduling scheme for real-time tasks
	on multicore platforms.},
  file          = {Anderson2006.pdf:files\\Anderson2006.pdf:PDF;Anderson2006a.pdf:files\\Anderson2006a.pdf:PDF},
  keywords      = {MULTI-CORE,REAL-TIME-SYSTEMS,SCHEDULING},
  mendeley-tags = {MULTI-CORE,REAL-TIME-SYSTEMS,SCHEDULING},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Misc{Anderson2010,
  author        = {Anderson, Mike},
  title         = {{S}trategies for {M}igrating {U}niprocessor {C}ode to {M}ulti-{C}ore - {E}mbracing {M}ulti-{C}ore {P}rocessors},
  year          = {2010},
  url           = {http://elinux.org/images/5/5e/MigratingToMultiCore\_Anderson.pdf},
  annote        = {Gutes Material f\"{u}r das Ganztagesseminar / Workshop bei FIRST zum Thema Multi-Core},
  booktitle     = {Embedded Linux Conference 2010},
  file          = {Anderson2010.pdf:files\\Anderson2010.pdf:PDF},
  groups        = {Misc},
  keywords      = {MULTI-CORE MIGRATION,STRATEGIES,THREAD DESIGN GUIDELINES},
  mendeley-tags = {MULTI-CORE MIGRATION,STRATEGIES,THREAD DESIGN GUIDELINES},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Book{Apt2003,
  author    = {Krzysztof R. Apt},
  title     = {{P}rinciples of constraint programming},
  year      = {2003},
  publisher = {Cambridge University Press},
  isbn      = {978-0-521-82583-2},
  pages     = {I-XII, 1-407},
  file      = {Apt2003.pdf:files\\Apt2003.pdf:PDF},
  owner     = {hilrob},
  timestamp = {2014.03.14},
}

@Misc{ARINC-653P2-1,
  author      = {ARINC},
  title       = {{ARINC} {S}pecification 653{P}2-1: {A}vionics {A}pplication {S}oftware {S}tandard {I}nterface {P}art 2 - {E}xtended {S}ervices},
  year        = {2008},
  month       = dec,
  address     = {Maryland, USA},
  file        = {ARINC-653P2-1.pdf:files\\ARINC-653P2-1.pdf:PDF},
  groups      = {Standards & Normen},
  institution = {Aeronautical Radio Inc.},
  owner       = {hilrob},
  read        = {done},
  timestamp   = {2011.01.10},
}

@Misc{ARINC-653P1-2,
  author      = {ARINC},
  title       = {{ARINC} {S}pecification 653{P}1-2: {A}vionics {A}pplication {S}oftware {S}tandard {I}nterface {P}art 1 - {R}equired {S}ervices},
  year        = {2005},
  month       = dec,
  address     = {Maryland, USA},
  file        = {ARINC-653P1-2.pdf:files\\ARINC-653P1-2.pdf:PDF},
  groups      = {Standards & Normen},
  institution = {Aeronautical Radio Inc.},
  owner       = {hilrob},
  read        = {done},
  timestamp   = {2011.01.10},
}

@Misc{Arteris2005,
  author        = {Arteris},
  title         = {{A} comparison of {N}etwork-on-{C}hip and {B}usses},
  year          = {2005},
  abstract      = {{A} number of research studies have demonstrated the feasibility and
	advantages of {N}etwork-on-{C}hip ({N}o{C}) over traditional bus-based
	architectures. {T}his whitepaper summarizes the limitations of traditional
	bus-based approaches, introduces the advantages of the generic concept
	of {N}o{C}, and provides specific data about {A}rteris' {N}o{C},
	the first commercial implementation of such architectures. {U}sing
	a generic design example we provide detailed comparisons of scalability,
	performance and area of traditional busses or crossbars vs. {A}rteris'
	{N}o{C}.},
  address       = {Guyancourt Cedex},
  file          = {Arteris2005.pdf:files\\Arteris2005.pdf:PDF},
  institution   = {Arteris},
  keywords      = {MULTI-CORE,NOC,NOCEXPLORER,ON-CHIP-INTERCONNECT},
  mendeley-tags = {MULTI-CORE,NOC,NOCEXPLORER,ON-CHIP-INTERCONNECT},
  owner         = {hilrob},
  pages         = {11},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Misc{Asanovic2006,
  author        = {Asanovic, Krste and Bodik, Ras and Catanzaro, B. C. and Gebis, J. J. and Husbands, Parry and Keutzer, Kurt and Patterson, D. A. and Plishker, W. L. and Shalf, John and Williams, S. W. and Yelick, Katherine A.},
  title         = {{T}he {L}andscape of {P}arallel {C}omputing {R}esearch: {A} view from {B}erkeley},
  year          = {2006},
  url           = {http://www.eecs.berkeley.edu/Pubs/TechRpts/2006/EECS-2006-183.html},
  abstract      = {{T}he recent switch to parallel microprocessors is a milestone in
	the history of computing. {I}ndustry has laid out a roadmap for multicore
	designs that preserves the programming paradigm of the past via binary
	compatibility and cache coherence. {C}onventional wisdom is now to
	double the number of cores on a chip with each silicon generation.
	{A} multidisciplinary group of {B}erkeley researchers met nearly
	two years to discuss this change. {O}ur view is that this evolutionary
	approach to parallel hardware and software may work from 2 or 8 processor
	systems, but is likely to face diminishing returns as 16 and 32 processor
	systems are realized, just as returns fell with greater instruction-level
	parallelism. {W}e believe that much can be learned by examining the
	success of parallelism at the extremes of the computing spectrum,
	namely embedded computing and high performance computing. {T}his
	led us to frame the parallel landscape with seven questions, and
	to recommend the following: - {T}he overarching goal should be to
	make it easy to write programs that execute efficiently on highly
	parallel computing systems - {T}he target should be 1000s of cores
	per chip, as these chips are built from processing elements that
	are the most efficient in {MIPS} ({M}illion {I}nstructions per {S}econd)
	per watt, {MIPS} per area of silicon, and {MIPS} per development
	dollar. - {I}nstead of traditional benchmarks, use 13 "{D}warfs"
	to design and evaluate parallel programming models and architectures.
	({A} dwarf is an algorithmic method that captures a pattern of computation
	and communication.) - "{A}utotuners" should play a larger role than
	conventional compilers in translating parallel programs. - {T}o maximize
	programmer productivity, future programming models must be more human-centric
	than the conventional focus on hardware or applications. - {T}o be
	successful, programming models should be independent of the number
	of processors. - {T}o maximize application efficiency, programming
	models should support a wide range of data types and successful models
	of parallelism: task-level parallelism, word-level parallelism, and
	bit-level parallelism. - {A}rchitects should not include features
	that significantly affect performance or energy if programmers cannot
	accurately measure their impact via performance counters and energy
	counters. - {T}raditional operating systems will be deconstructed
	and operating system functionality will be orchestrated using libraries
	and virtual machines. - {T}o explore the design space rapidly, use
	system emulators based on {F}ield {P}rogrammable {G}ate {A}rrays
	({FPGA}s) that are highly scalable and low cost. {S}ince real world
	applications are naturally parallel and hardware is naturally parallel,
	what we need is a programming model, system software, and a supporting
	architecture that are naturally parallel. {R}esearchers have the
	rare opportunity to re-invent these cornerstones of computing, provided
	they simplify the efficient programming of highly parallel systems.},
  address       = {Berkeley},
  annote        = {1. Introduction ========== - S. 6: guter Einblick in die unterschiedlichen Perspektiven von Embedded Systems vs. Server Computing in Multi-Core (in der Vergangenheit unterschiedlich, aber ziemlich \"{a}hnlich in den Anforderungen der Zukunft) 2. Motivation ========= - S. 7: "Nevertheless, we argue general-purpose computing is taking an irreversible step toward parallel architectures." ... "this plunge into parallelism is actually a retreat from even greater challenges that thwart efficient silicon implementation of traditional uniprocessor architectures." - S. 7/8: "Power-Wall" - cannot pump more power into chips (highest frequencies reached), - S. 7/8: "ILP Wall" - diminishing returns on more instruction level parallelism - S. 7/8: "Memory Wall" - load and store to memory is really slow, connection to memory is slow compared to processing capabilities - S. 8: "Power Wall + Memory Wall + ILP Wall = Brick Wall" - S. 9: "the open source software movement means that the software stack can evolve much more quickly than in the past" 3. Applications and Dwarfs =================== - S. 9: "The hypothesis is not that traditional scientific computing is the future of parallel computing; it is that the body of knowledge created in building programs that run well on massively parallel computers may prove useful in parallelizing future applications." --> man sollte die klassichen Dinge des parallelen Computings kennen, um die Parallelisierung zu vereinfachen - S. 10-12: Einf\"{u}hrung der "13 Dwarfs" - abstraktes, algorithmisches Verhalten,L\"{o}sungsverfahren und Kommunikationsprofil, das sich in vielen (zuk\"{u}nftig) parallelen Anwendungen findet -> diese Dwarfs sollen die Grundlage f\"{u}r die verschiedenen Multi-Core Optimierungen und Benchmarks werden. - S. 16: "The point is to identify the kernels that are the core computation and communication for important applications in the upcoming decade, independent of the amount of parallelism. - S. 16: "Perhaps FSMs will prove to be embarrassingly sequential just as MapReduce is embarrassingly parallel." - S. 17: "Can we write a library such that it encodes knowledge about its ideal mapping when composed with others in a complete parallel application? What if the ideal mapping is heavily dependent on input data that cannot be known at compile time?" - S. 17: "[Dubey 2005] Intel classifies the computation into three categories: Recognition, Mining, and Synthesis, abbreviated as RMS" 4. Hardware ========= - S. 22: "Even representatives from Intel, a company generally associated with the 'higher clock-speed is better' position, warned that traditional approaches to maximizing performance through maximizing clock speed have been pushed to their limit [Borkar 1999] [Gelsinger 2001]" - S. 22/23: Umfangreiche Beschreibung der Vorteile von vielen, kleineren Cores - S. 23: "It is important to distinguish between energy (Joules) and power (Joules/second or Watts), which is the rate of consuming energy. Energy per task is usually a metric to be minimized in a design, whereas peak power consumption is usually treated as a design constraint." - S. 23: "Reasonable upper limits for peak power consumption may be 150W for air-cooled server and desktop chips, 40W for a laptop, and 2W for low cost/low power embedded applications." - S. 24: "we believe the efficient building blocks of future architectures are likely to be simple, modestly pipelined (5-9 stages) processors, floating point units, vector, and SIMD processing elements. Note that these constraints fly in the face of the conventional wisdom of simplifying parallel programming by using the largest processors available." - S. 26: "the memory wall is the major obstacle to good performance for almost half dwarfs ... Thomas Sterling expressed this concern in his provocative question to panelists at the SC06 conference: 'will multicore ultimately be asphyxiated [erstickt] by the memory wall?' [Sterling 2006]" - S. 27: "The old Amdahl rule of thumb was that a balanced computer system needs about 1 MB of main memory capacity per MIPS of processor performance [Hennessy and Patterson 2007]. [...] MIPS explosion suggests a much larger fraction of total system silicon in the future will be dedicated to memory." - S. 28: "The inverse approach to this problem relies on software to manage task mapping and task migration to adapt to lower degree static interconnect topologies. The circuit switched approach offers a faster way to reconfigure the interconnect topology, which may prove important for applications that have rapidly changing/adaptive communication requirements. In both cases, runtime performance monitoring systems (see Section 4.6), compile-time instrumentation of codes to infer communication topology requirements, or auto-tuners (see Section 6.1) will play an important role inferring an optimal interconnect topology and communication schedule." - S. 29: Differences between MPSoC and SMPs are fundamental. Inter-Core communication bandwidth cease to be a bottleneck, far less latencies and MPSoC may offer new and leightwieght synchronization primitives - S. 29: "If we simply treat multicore chips as traditional SMPs - or worse yet, by porting MPI applications (see Figure 7 in Section 5) - then we may miss some very interesting opportunities for new architectures and algorithm designs that can exploit these new features." - S. 30: "Reducing the overhead of producer-consumer synchronization would allow finer-grained parallelization, thereby increasing the exploitable parallelism in an application. Earlier proposals have included full-empty bits on memory words, and these techniques could be worth revisiting in the manycore era [Alverson et al 1990] [Alverson et al 1999]." - S. 31: "For example, we expect a common design framework for manycore will be globally asynchronous but locally synchronous per module, with unidirectional links and queues connecting together these larger function blocks. It would be relatively easy to include a parity checking and limited retransmission scheme into such framework." 5. Programming Models ================= - S. 33: A "programming model is a bridge between a system developer's natural model of an application and an implementation of that application on available hardware" - S. 33: We need "Opactity" (Deckkraft) und "Visibility" in a programming model to let a programmer "harvest" multi-core performance - S. 35: "In our view programming model development in the past has been hardware-centric, application-centric, or formalism-centric" - S. 36. Forcing coders to be aware of the mapping from applications to processors / cores will break down in the near future, because programmers have to keep thousands of objects in mind => research in programming models where the number of processors is not exposed ([Deitz 2005] [Allen et al 2006] [Callahan et al 2004] [Charles et al 2005]). But they do not deliver performance! 6. Systems Software =============== IDEE: Evolution\"{a}re Algorithmen nutzen, um damit ein "Auto-Tuning" zu erreichen? Suche nach der besten Performance ... EvoTest explorieren? - S. 39: Embed search for synthesizing efficient programs on many architectures (notable success: [Massalin 1987] [Granlund et al 2006] [Warren 2006]) - S. 39: "Autotuners optimize a set of library kernels by generating many variants of a given kernel and benchmarking each variant by running on the target platform. The search process effectively tries many or all optimization switches and hence may take hours to complete on the target platform. Search needs to be performed only once, however, when the library is installed. The resulting code is often several times faster than naive implementations, and a single autotuner can be used to generate high-quality code for a wide variety of machines. In many cases, the autotuned code is faster than vendor libraries that were specifically hand-tuned for the target machine!" - S. 40: compared to a sequential autotuning approach, the parallel space is significantly larger... - S. 41: "The network and memory performance may be characterized relatively quickly using test patterns, and then plugged into performance models for the network to derive suitable code loops for the search over compute kernels [Vadhiyar et al 2000]." 6.2 Deconstructing Operating System Support ------------------------------------------------------------------- - S. 41: "Just as hardware is moving away from a single monolithic processor, operating systems may be moving away from a single monolithic program." - S. 41: Worlds of embedded systems and servers will probably merge and embedded systems will benefit from mechanisms such as protection and virtualization - S. 42: "The resurgence of interest in virtual machines (VMs) is evidence that operating systems have reached their own technology inflexion point. (Knickpunkt)". - S. 42: "Rosenblum argues that the future of server operating system could essentially be libraries where only the functions needed are linked into the application, on top of a thin VMM layer providing protection and sharing of hardware resources. [Rosenblum 2006]" 7.0 Metrics for Success ================== - S. 44: "we believe that the processors of manycore systems will look more like embedded processors than current desktop processors"},
  booktitle     = {EECS Department, University of California, Berkeley, Tech. Rep. UCB/EECS-2006-183},
  file          = {Asanovic2006.pdf:files\\Asanovic2006.pdf:PDF},
  groups        = {Multi-Core Allgemein},
  institution   = {University of California},
  keywords      = {AUTOTUNING,BENCHMARKS,DWARFS,FPGA,MULTI-CORE,OPERATING SYSTEMS,OVERVIEW,PARALLEL PROCESSING,PARALLEL PROGRAMMING,VISION},
  mendeley-tags = {AUTOTUNING,BENCHMARKS,DWARFS,FPGA,MULTI-CORE,OPERATING SYSTEMS,OVERVIEW,PARALLEL PROCESSING,PARALLEL PROGRAMMING,VISION},
  owner         = {hilrob},
  pages         = {56},
  publisher     = {Citeseer},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Article{Asanovic2009,
  author        = {Asanovic, Krste and Wawrzynek, John and Wessel, David and Yelick, Katherine and Bodik, Rastislav and Demmel, James and Keaveny, Tony and Keutzer, Kurt and Kubiatowicz, John and Morgan, Nelson and Patterson, David and Sen, Koushik},
  title         = {{A} view of the parallel computing landscape},
  journal       = {Communications of the ACM},
  year          = {2009},
  volume        = {52},
  number        = {10},
  pages         = {56},
  issn          = {00010782},
  doi           = {10.1145/1562764.1562783},
  url           = {http://portal.acm.org/citation.cfm?doid=1562764.1562783},
  abstract      = {{W}riting programs that scale with increasing numbers of cores should
	be as easy as writing programs for sequential computers.},
  annote        = {Es beleuchtet die Dramatik des Paradigmenwechsels und schl\"{a}gt folgende Aspekte vor: - parallel patterns in einer pattern language definieren -> application programmers nehmen dann eine Koordinierungssprache, um diese Patterns miteinander zu verkn\"{u}pfen - ein portability layer f\"{u}r alle multicore prozessoren, der verschiedene primitive bereitstellt -> ein efficiency programmer kann dann diese Primitive nutzen, um damit effiziente parallele Algorithmen zu schreiben - search-basiertes Autotuning: f\"{u}r eine Targetplattform werden verschiedene Programmversionen erzeugt und dann verglichen (EvoTest?) -> Tuning to Architecture und Problem-size},
  file          = {Asanovic2009.pdf:files\\Asanovic2009.pdf:PDF},
  groups        = {Multi-Core Allgemein},
  keywords      = {AUTOTUNING,DESIGN PATTERNS,INTRODUCTION,MPSOC,MULTI-CORE,OVERVIEW,PARALLEL DESIGN PATTERNS,PARALLEL PROGRAMMING,PARALLELIZATION,PARTITIONING},
  mendeley-tags = {AUTOTUNING,DESIGN PATTERNS,INTRODUCTION,MPSOC,MULTI-CORE,OVERVIEW,PARALLEL DESIGN PATTERNS,PARALLEL PROGRAMMING,PARALLELIZATION,PARTITIONING},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Article{Atzori2010,
  author    = {Luigi Atzori and Antonio Iera and Giacomo Morabito},
  title     = {{T}he {I}nternet of {T}hings: {A} survey},
  journal   = {Computer Networks},
  year      = {2010},
  volume    = {54},
  number    = {15},
  pages     = {2787--2805},
  issn      = {1389-1286},
  doi       = {10.1016/j.comnet.2010.05.010},
  url       = {http://www.sciencedirect.com/science/article/pii/S1389128610001568},
  abstract  = {This paper addresses the Internet of Things. Main enabling factor
	of this promising paradigm is the integration of several technologies
	and communications solutions. Identification and tracking technologies,
	wired and wireless sensor and actuator networks, enhanced communication
	protocols (shared with the Next Generation Internet), and distributed
	intelligence for smart objects are just the most relevant. As one
	can easily imagine, any serious contribution to the advance of the
	Internet of Things must necessarily be the result of synergetic activities
	conducted in different fields of knowledge, such as telecommunications,
	informatics, electronics and social science. In such a complex scenario,
	this survey is directed to those who want to approach this complex
	discipline and contribute to its development. Different visions of
	this Internet of Things paradigm are reported and enabling technologies
	reviewed. What emerges is that still major issues shall be faced
	by the research community. The most relevant among them are addressed
	in details.},
  file      = {Atzori2010.pdf:files\\Atzori2010.pdf:PDF},
  groups    = {Cyber-Physical Systems},
  keywords  = {Internet of Things},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.02.22},
}

@Misc{AUTOSAR_RS_ProjectObjectives,
  author       = {AUTOSAR},
  title        = {{P}roject {O}bjectives},
  year         = {2013},
  howpublished = {online},
  month        = oct,
  url          = {http://www.autosar.org/fileadmin/files/releases/4-1/main/auxiliary/AUTOSAR_RS_ProjectObjectives.pdf},
  groups       = {Standards & Normen},
  owner        = {hilrob},
  timestamp    = {2014.08.28},
}

@Misc{AUTOSAR2010,
  author       = {{AUTOSAR}},
  title        = {{L}ayered {S}oftware {A}rchitecture},
  year         = {2010},
  howpublished = {online},
  month        = nov,
  url          = {http://autosar.org/download/R4.0/AUTOSAR_EXP_LayeredSoftwareArchitecture.pdf},
  file         = {AUTOSAR2010.pdf:files\\AUTOSAR2010.pdf:PDF},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2011.12.08},
}

@Misc{AUTOSAR2006,
  author       = {{AUTOSAR Development Partnership}},
  title        = {{AUTOSAR} - {C}urrent {R}esults and {P}reparations for {E}xploitation},
  year         = {2006},
  howpublished = {7th EUROFORUM Conference "Software in the vehicle"},
  month        = may,
  url          = {http://www.autosar.org/download/papersandpresentations/AUTOSAR%20-%20Current%20results%20and%20preparations%20for%20exploitation.pdf},
  file         = {AUTOSAR2006.pdf:files\\AUTOSAR2006.pdf:PDF},
  groups       = {Domänen-spezifisch},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2012.07.18},
}

@Book{Baier2008,
  author        = {Baier, Christel and Katoen, J.P.},
  title         = {{P}rinciples of model checking},
  year          = {2008},
  edition       = {1},
  publisher     = {The MIT Press},
  isbn          = {026202649X},
  url           = {http://mitpress.mit.edu/catalog/item/default.asp?ttype=2\&amp;tid=11481},
  abstract      = {{O}ur growing dependence on increasingly complex computer and software
	systems necessitates the development of formalisms, techniques, and
	tools for assessing functional properties of these systems. {O}ne
	such technique that has emerged in the last twenty years is model
	checking, which systematically (and automatically) checks whether
	a model of a given system satisfies a desired property such as deadlock
	freedom, invariants, or request-response properties. {T}his automated
	technique for verification and debugging has developed into a mature
	and widely used approach with many applications. {P}rinciples of
	{M}odel {C}hecking offers a comprehensive introduction to model checking
	that is not only a text suitable for classroom use but also a valuable
	reference for researchers and practitioners in the field. {T}he book
	begins with the basic principles for modeling concurrent and communicating
	systems, introduces different classes of properties (including safety
	and liveness), presents the notion of fairness, and provides automata-based
	algorithms for these properties. {I}t introduces the temporal logics
	{LTL} and {CTL}, compares them, and covers algorithms for verifying
	these logics, discussing real-time systems as well as systems subject
	to random phenomena. {S}eparate chapters treat such efficiency-improving
	techniques as abstraction and symbolic manipulation. {T}he book includes
	an extensive set of examples (most of which run through several chapters)
	and a complete set of basic results accompanied by detailed proofs.
	{E}ach chapter concludes with a summary, bibliographic notes, and
	an extensive list of exercises of both practical and theoretical
	nature.},
  annote        = {Das Grundlagenbuch zum Thema Model-Checking.},
  file          = {Baier2008.pdf:files\\Baier2008.pdf:PDF},
  groups        = {Books},
  keywords      = {BASICS,INTRODUCTION,MODEL CHECKING,OVERVIEW},
  mendeley-tags = {BASICS,INTRODUCTION,MODEL CHECKING,OVERVIEW},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@TechReport{Baker2010,
  author      = {Baker, Theodore P.},
  title       = {{W}hat to {M}ake of {M}ulticore {P}rocessors for {R}eliable {R}eal-{T}ime {S}ystems?},
  institution = {Florida State University, Dept. of Computer Science},
  year        = {2010},
  number      = {TR-100401},
  month       = apr,
  url         = {http://www.cs.fsu.edu/research/reports/TR-100401.pdf},
  abstract    = {{N}ow that multicore microprocessors have become a commodity, it is
	natural to think about employing them in all kinds of computing,
	including high-reliability embedded real-time systems. {A}ppealing
	aspects of this development include the ability to process more instructions
	per second and more instructions per watt. {H}owever, not all problems
	are amenable to parallel decomposition, and for those that are, designing
	a correct scalable solution can be difficult. {I}f there are deadlines
	or other hard timing constraints the difficulty becomes much greater.
	{T}his paper reviews some of what is known about multiprocessor scheduling
	of task systems with deadlines, including recent advances in the
	analysis of arbitrary sporadic task systems under fixed-priority
	and earliest-deadline first scheduling polices. {I}t also examines
	critically the foundations of these theoretical results, including
	assumptions about task independence and worst-case execution time
	estimates, with a view toward their practical applicability.},
  address     = {Tallahassee FL 32306-4530, USA},
  file        = {Baker2010.pdf:files\\Baker2010.pdf:PDF},
  groups      = {(RT-) Scheduling},
  keywords    = {MULTI-CORE, REAL-TIME SYSTEMS, RELIABILITY, SCHEDULING, EDF, FPS, REAL-TIME SCHEDULING, EMBEDDED SYSTEMS, INTRODUCTION, OVERVIEW, VISION,},
  owner       = {hilrob},
  read        = {done},
  timestamp   = {2010.06.14},
}

@InProceedings{Ballabriga2010,
  author    = {Ballabriga, Clément and Cassé, Hugues and Rochange, Christine and Sainrat, Pascal},
  title     = {{OTAWA}: {A}n {O}pen {T}oolbox for {A}daptive {WCET} {A}nalysis.},
  booktitle = {SEUS},
  year      = {2010},
  editor    = {Min, Sang Lyul and IV, Robert G. Pettit and Puschner, Peter P. and Ungerer, Theo},
  volume    = {6399},
  series    = {Lecture Notes in Computer Science},
  publisher = {Springer},
  isbn      = {978-3-642-16255-8},
  pages     = {35--46},
  url       = {http://dblp.uni-trier.de/db/conf/seus/seus2010.html#BallabrigaCRS10},
  added-at  = {2010-10-27T00:00:00.000+0200},
  file      = {Ballabriga2010.pdf:files\\Ballabriga2010.pdf:PDF},
  groups    = {WCET},
  owner     = {hilrob},
  read      = {unread},
}

@InProceedings{Barcelos2007,
  author    = {Barcelos, Daniel and Brião, Eduardo Wenzel and Wagner, Flávio Rech},
  title     = {{A} {H}ybrid {M}emory {O}rganization to {E}nhance {T}ask {M}igration and {D}ynamic {T}ask {A}llocation in {N}o{C}-based {MPS}o{C}s},
  booktitle = {Proceedings of the 20th annual conference on Integrated circuits and systems design},
  year      = {2007},
  publisher = {ACM},
  pages     = {282--287},
  doi       = {10.1145/1284480.1284557},
  url       = {http://portal.acm.org/citation.cfm?id=1284557},
  abstract  = {{R}egarding {MPS}o{C}s, dynamic task allocation and task migration
	are still open research areas and, for both of them, there is no
	clear memory organization winner. {W}hile bus-connected systems commonly
	use a shared memory paradigm, {N}o{C}-based ones easily allow the
	exploration of distributed memory alternatives. {T}his paper proposes
	a hybrid memory organization for {N}o{C}-based systems as the way
	to minimize the energy spent during the code transfer when task migration
	or dynamic task allocation needs to be performed. {I}n our hybrid
	approach, the code can be transferred from the node where the task
	was originally running or from a memory positioned at the center
	of the system. {T}he choice between the two options is done at runtime
	in a very intuitive way, based on the distance between the nodes
	involved on the transfer. {R}esults are very encouraging and indicate
	that the proposed hybrid organization reduces the code transfer energy
	by 24\% and 10\% on average, as compared to global- and distributed-only
	memory organizations, respectively.},
  address   = {New York, New York, USA},
  file      = {Barcelos2007.pdf:files\\Barcelos2007.pdf:PDF},
  groups    = {Task Migration},
  keywords  = {MULTI-CORE,TASK-MIGRATION,ENERGY,MPSOC,NOC},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.05.28},
}

@Book{Barnes2003,
  author    = {John Barnes},
  title     = {{H}igh {I}ntegrity {S}oftware: {T}he {SPARK} {A}pproach to {S}afety and {S}ecurity},
  year      = {2003},
  publisher = {Addison-Wesley},
  isbn      = {0321136160},
  groups    = {Books, Correctness by Construction},
  owner     = {hilrob},
  timestamp = {2014.02.04},
}

@InProceedings{Baro2012,
  author    = {Baro, Julie and Boniol, Fr{\'e}d{\'e}ric and Cordovilla, Mikel and Noulard, Eric and Pagetti, Claire},
  title     = {{O}ff-line ({O}ptimal) multiprocessor scheduling of dependent periodic tasks},
  booktitle = {Proceedings of the 27th Annual ACM Symposium on Applied Computing},
  year      = {2012},
  series    = {SAC '12},
  publisher = {ACM},
  location  = {Trento, Italy},
  isbn      = {978-1-4503-0857-1},
  pages     = {1815--1820},
  doi       = {10.1145/2231936.2232071},
  url       = {http://doi.acm.org/10.1145/2231936.2232071},
  acmid     = {2232071},
  address   = {New York, NY, USA},
  file      = {Baro2012.pdf:files\\Baro2012.pdf:PDF},
  groups    = {Konstruktive Synthese, (RT-) Scheduling},
  keywords  = {multiprocessor scheduling, off-line computation},
  numpages  = {6},
  owner     = {rhi},
  timestamp = {2013.03.05},
}

@InProceedings{Baruah2011,
  author    = {Baruah, S.},
  title     = {{T}he {P}artitioned {EDF} {S}cheduling of {S}poradic {T}ask {S}ystems},
  booktitle = {Real-Time Systems Symposium (RTSS), 2011 IEEE 32nd},
  year      = {2011},
  pages     = {116--125},
  doi       = {10.1109/RTSS.2011.18},
  abstract  = {The partitioned scheduling of sporadic task systems on identical multiprocessors
	is considered. This is known to be intractable (NP-hard in the strong
	sense). A polynomial-time approximation scheme (PTAS) is proposed
	for sporadic task systems satisfying the additional constraint that
	for each of the three parameters -- worst-case execution time, relative
	deadline, and period -- that characterize sporadic tasks, the ratio
	of the largest value to the smallest value is bounded from above
	by a constant.},
  file      = {Baruah2011.pdf:files\\Baruah2011.pdf:PDF},
  groups    = {(RT-) Scheduling},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.03.12},
}

@Book{Bass1998,
  author    = {Bass, Len and Clements, Paul and Kazman, Rick},
  title     = {{S}oftware architecture in practice},
  year      = {1998},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  isbn      = {0-201-19930-0},
  address   = {Boston, MA, USA},
  groups    = {Books},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2011.12.02},
}

@TechReport{Baumgart2011,
  author       = {Baumgart, Andreas and B{\"~}ode, Eckard and B{\"~}uker, Matthias and Damm, Werner and Ehmen, G{\"~}unter and Gezgin, Tayfun and Henkler, Stefan and Hungar, Hardi and Josko, Bernhard and Oertel, Markus and Peikenkamp, Thomas and Reinkemeier, Philipp and Stierand, Ingo and Weber, Raphael},
  title        = {{A}rchitecture {M}odeling},
  institution  = {OFFIS},
  year         = {2011},
  month        = mar,
  url          = {http://www.offis.de/index.php?eID=tx_nawsecuredl&u=0&file=uploads/tx_useroffis/20120203115622_SPESArchitectureModeling.pdf&t=1355907458&hash=34f9f56d09099d8e4a33dca07a541d413f65f958},
  abstract     = {This document proposes a meta--model for architectures of embedded
	systems. The overall scope taken is deliberately broad, aiming at
	covering multiple perspectives of embeddedsystems based product development.
	As e. g. pointed out in [49], risk mitigation strategies in product
	development require a holistic approach encompassing all sub processes
	and their interfaces, hence requiring to cover the full range of
	what we call perspectives, from a geometric/ physical view of the
	product, to a view focusing on its technical architecture, to a view
	elaborating its logical architecture, grouping functionality according
	to (sub--) system organisation, to a purely functional perspective
	(getting the functional specifications right), and starting with
	an operational perspective, focusing on interface requirements e.
	g. based on operational scenarios. This separation of concerns by
	perspectives is complemented by offering abstraction levels, as a
	well known principle to cope with complexity in system design. Hence
	design artifacts can be placed in a two--dimensional design space,
	organized by perspective and level of abstraction.},
  file         = {Baumgart2011.pdf:files\\Baumgart2011.pdf:PDF},
  groups       = {Software Modellierung, Systems Engineering, (Embedded) Model-driven Architecture},
  keywords     = {Architecture; Modelling; Modellierung; Meta-Model; Functional; Logical; Physical; SPES2020; CESAR;},
  organization = {OFFIS},
  owner        = {hilrob},
  read         = {read},
  timestamp    = {2012.12.18},
}

@InProceedings{Behr2012,
  author    = {Behr, Peter and Haulsen, Ivo and van Kampenhout, J. Reinier and Pletner, Samuel},
  title     = {{M}ulti-{C}ore {T}echnology for {F}ault {T}olerant {H}igh-{P}erformance {S}pacecraft {C}omputer {S}ystems},
  booktitle = {Proceedings of DASIA 2012},
  year      = {2012},
  pages     = {1--8},
  file      = {Behr2012.pdf:files\\Behr2012.pdf:PDF},
  groups    = {Domänen-spezifisch, Embedded Multi-Core, Reliability & Dependability, Systems Engineering, Zuverlässigkeit},
  owner     = {hilrob},
  timestamp = {2013.04.11},
}

@TechReport{GCCAT2014,
  author       = {Beldiceanu, Nicolas and Carlsson, Mats and Rampo, Jean-Xavier},
  title        = {{Global Constraint Catalog}},
  institution  = {SICS},
  year         = {2014},
  type         = {Technical Report},
  number       = {T2012:03},
  note         = {ISSN: 1100-3154},
  month        = feb,
  url          = {http://www.emn.fr/z-info/sdemasse/gccat/},
  file         = {GCCAT2014.pdf:files\\GCCAT2014.pdf:PDF},
  groups       = {Misc},
  howpublished = {online},
  issn         = {1100-3154},
  owner        = {hilrob},
  timestamp    = {2014.03.14},
}

@Misc{SPIN,
  author       = {{Bell Labs}},
  title        = {{V}erifying {M}ulti-threaded {S}oftware with {S}pin},
  year         = {2013},
  howpublished = {http://spinroot.com/spin/whatispin.html},
  month        = jun,
  url          = {http://spinroot.com/spin/whatispin.html},
  abstract     = {Spin is a popular open-source software verification tool, used by
	thousands of people worldwide. The tool can be used for the formal
	verification of multi-threaded software applications. The tool was
	developed at Bell Labs in the Unix group of the Computing Sciences
	Research Center, starting in 1980. The software has been available
	freely since 1991, and continues to evolve to keep pace with new
	developments. In April 2002 the tool was awarded the ACM System Software
	Award.},
  groups       = {Tools},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2011.01.18},
}

@InProceedings{Bender1996,
  author    = {Bender, A.},
  title     = {{D}esign of an optimal loosely coupled heterogeneous multiprocessor system},
  booktitle = {European Design and Test Conference, 1996. ED TC 96. Proceedings},
  year      = {1996},
  pages     = {275--281},
  doi       = {10.1109/EDTC.1996.494313},
  abstract  = {This paper presents an approach for mapping tasks optimal to hardware
	and software components in order to design a real-time system. The
	tasks are derived from an algorithm and are represented by a task-graph.
	The performance of the algorithm on the resulting real-time system
	will meet the specified timing constraints. Some of the hardware
	components are programmable and others are application specific hardware
	processors. We propose a powerful MILP (Mixed Integer Linear Program)
	model with and without functional pipelining. The efficiency of the
	method is demonstrated with practical examples},
  file      = {Bender1996.pdf:files\\Bender1996.pdf:PDF},
  groups    = {Software Deployment},
  issn      = {1066-1409},
  keywords  = {application specific integrated circuits;graph theory;integer programming;linear programming;multiprocessing systems;pipeline processing;real-time systems;timing;MILP;application specific hardware processors;functional pipelining;loosely coupled heterogeneous multiprocessor system;mixed integer linear program;real-time system;task-graph;timing constraints;Application software;Computer science;Cost function;Hardware;Mathematics;Multiprocessing systems;Pipeline processing;Real time systems;Software algorithms;Timing},
  owner     = {hilrob},
  timestamp = {2014.01.14},
}

@InProceedings{Benini2002,
  author        = {Benini, L. and {De Micheli}, G.},
  title         = {{N}etworks on {C}hip: {A} {N}ew {P}aradigm for {S}ystems on {C}hip {D}esign},
  booktitle     = {Proceedings 2002 Design, Automation and Test in Europe Conference and Exhibition},
  year          = {2002},
  publisher     = {IEEE Comput. Soc},
  isbn          = {0-7695-1471-5},
  pages         = {418--419},
  doi           = {10.1109/DATE.2002.998307},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=998307},
  abstract      = {{T}his paper is meant to be a short introduction to a new paradigm
	for systems on chip ({S}o{C}) design. {T}he premises are that a component-based
	design methodology will prevail in the future, to support component
	re-use in a plug-and-play fashion. {A}t the same time, {S}o{C}s will
	have to provide a functionally-correct, reliable operation of the
	interacting components. {T}he physical interconnections on chip will
	be a limiting factor for performance and energy consumption},
  annote        = {In systems on chip the interconnections are becoming a limiting factor which leads to communication-centric design. To provide quality of service it is proposed to use networks on a chip. Those have unique characteristics that distinct them from off-chip networks, namely energy constraints and design-time specialization.},
  file          = {Benini2002.pdf:files\\Benini2002.pdf:PDF},
  keywords      = {MULTI-CORE,NOC,ON-CHIP-INTERCONNECT},
  mendeley-tags = {MULTI-CORE,NOC,ON-CHIP-INTERCONNECT},
  owner         = {hilrob},
  read          = {next},
  timestamp     = {2010.05.28},
}

@PhdThesis{Bennett2003,
  author        = {Bennett, Michael David},
  title         = {{A} {K}ernel for {IMA} {S}ystems},
  year          = {2003},
  type          = {Dissertation},
  pages         = {1--329},
  url           = {http://www.cs.york.ac.uk/ftpdir/reports/2004/YCST/05/YCST-2004-05.pdf},
  file          = {Bennett2003.pdf:files\\Bennett2003.pdf:PDF},
  keywords      = {IMA,KERNEL,OPERATING SYSTEMS,PARTITIONING},
  mendeley-tags = {IMA,KERNEL,OPERATING SYSTEMS,PARTITIONING},
  owner         = {hilrob},
  read          = {unread},
  school        = {University of York},
  timestamp     = {2010.05.28},
}

@InProceedings{Berezecki2011,
  author    = {Berezecki, Mateusz and Frachtenberg, Eitan and Paleczny, Mike and Steele, Kenneth},
  title     = {{M}any-{C}ore {K}ey-{V}alue {S}tore},
  booktitle = {Proceedings of the Second International Green Computing Conference IGCC'11},
  year      = {2011},
  month     = jul,
  url       = {http://regmedia.co.uk/2011/07/25/facebook-tilera-whitepaper.pdf},
  file      = {Berezecki2011.pdf:files\\Berezecki2011.pdf:PDF},
  groups    = {Energy & Power, Many-Core},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2011.08.26},
}

@Article{Bertozzi2004,
  author        = {Bertozzi, Davide and Benini, Luca},
  title         = {{F}eature - {X}pipes : a network-on-chip architecture for gigascale systems-on-chip},
  journal       = {IEEE Circuits and Systems Magazine},
  year          = {2004},
  volume        = {4},
  number        = {2},
  pages         = {18--31},
  issn          = {1531-636X},
  doi           = {10.1109/MCAS.2004.1330747},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1330747},
  abstract      = {{T}he growing complexity of embedded multiprocessor architectures
	for digital media processing will soon require highly scalable communication
	infrastructures. {P}acket switched networks-on-chip ({N}o{C}) have
	been proposed to support the trend for systems-on-chip integration.
	{I}n this paper, an advanced {N}o{C} architecture, called {X}pipes,
	targeting high performance and reliable communication for on-chip
	multi-processors is introduced. {I}t consists of a library of soft
	macros (switches, network interfaces and links) that are design-time
	composable and tunable so that domain-specific heterogeneous architectures
	can be instantiated and synthesized. {L}inks can be pipelined with
	a flexible number of stages to decouple link throughput from its
	length and to get arbitrary topologies. {M}oreover, a tool called
	{X}pipes{C}ompiler, which automatically instantiates a customized
	{N}o{C} from the library of soft network components, is used in this
	paper to test the {X}pipes-based synthesis flow for domain-specific
	communication architectures.},
  annote        = {MPSoC designs are increasingly complex obtain more computational power at manageable power levels and affordable costs. The performance of such SoCs is limited by the infrastructure that interconnects the IP blocks and thus the designs become communication-centric. Networks on Chip provide a scalable and modular interconnection architecture to cope with this.},
  file          = {Bertozzi2004.pdf:files\\Bertozzi2004.pdf:PDF},
  keywords      = {MPSOC,MULTI-CORE,NOC,ON-CHIP COMMUNICATION ARCHITECTURES,ON-CHIP-INTERCONNECT,SOC},
  mendeley-tags = {MPSOC,MULTI-CORE,NOC,ON-CHIP COMMUNICATION ARCHITECTURES,ON-CHIP-INTERCONNECT,SOC},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.28},
}

@InProceedings{Bertozzi2006,
  author        = {Bertozzi, S. and Acquaviva, A. and Bertozzi, D. and Poggiali, A.},
  title         = {{S}upporting {T}ask {M}igration in {M}ulti-{P}rocessor {S}ystems-on-{C}hip: {A} {F}easibility {S}tudy},
  booktitle     = {Proceedings of the Design Automation \& Test in Europe Conference},
  year          = {2006},
  publisher     = {IEEE},
  isbn          = {3-9810801-1-4},
  pages         = {1--6},
  doi           = {10.1109/DATE.2006.243952},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1656838},
  abstract      = {{W}ith the advent of multi-processor systems-on-chip, the interest
	in process migration is again on the rise both in research and in
	product development. {N}ew challenges associated with the new scenario
	include increased sensitivity to implementation complexity, tight
	power budgets, requirements on execution predictability, and the
	lack of virtual memory support in many low-end {MPS}o{C}s. {A}s a
	consequence, effectiveness and applicability of traditional transparent
	migration mechanisms are put in discussion in this context. {O}ur
	paper proposes a task management software infrastructure that is
	well suited for the constraints of single chip multiprocessors with
	distributed operating systems. {L}oad balancing in the system is
	maintained by means of intelligent initial placement and task migration.
	{W}e propose a user-managed migration scheme based on code check
	pointing and user-level middleware support as an effective solution
	for many {MPS}o{C} application domains. {I}n order to prove the practical
	viability of this scheme, we also propose a characterization methodology
	for task migration overhead. {W}e derive the minimum execution time
	following a task migration event during which the system configuration
	should be frozen to make up for the migration cost},
  annote        = {- verwendet einen zentralisierten Scheduling Ansatz (Master und Slave Nodes) To support task migration in MPSoCs a user-managed migration scheme based on code checkpointing is proposed. It is shown that there is a break-even point after which the migration cost is compensated for because the load is balanced.},
  file          = {Bertozzi2006.pdf:files\\Bertozzi2006.pdf:PDF},
  groups        = {Task Migration},
  keywords      = {CHECKPOINTING,DYNAMIC-RECONFIGURATION,MIDDLEWARE,MPSOC,MULTI-CORE,NOC,ON-CHIP INTERCONNECT,SCHEDULING,SOC,TASK-MIGRATION,TRANSPARENT MIGRATION},
  mendeley-tags = {CHECKPOINTING,DYNAMIC-RECONFIGURATION,MIDDLEWARE,MPSOC,MULTI-CORE,NOC,ON-CHIP INTERCONNECT,SCHEDULING,SOC,TASK-MIGRATION,TRANSPARENT MIGRATION},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Book{Beucher2008,
  author    = {Beucher, O.},
  title     = {{MATLAB} und {S}imulink: {G}rundlegende {E}inf{\"u}hrung f{\"u}r {S}tudenten und {I}ngenieure in der {P}raxis},
  year      = {2008},
  series    = {MATLAB und Simulink: Grundlegende Einf{\"u}hrung f{\"u}r Studenten und Ingenieure in der Praxis},
  number    = {Bd. 10},
  publisher = {Pearson Studium},
  isbn      = {9783827373403},
  groups    = {Books},
  owner     = {hilrob},
  timestamp = {2014.04.25},
}

@Misc{BICCnetInnovationszirkelEmbeddedSystems2011,
  author    = {BICCnet Innovationszirkel Embedded Systems, Arbeitskreis Multicore},
  title     = {{R}elevanz eines {M}ulticore-{Ö}kosystems für künftige {E}mbedded {S}ystems - {P}ositionspapier zur {B}edeutung, {B}estandsaufnahme und {P}otentialermittlung der {M}ulticore-{T}echnologie für den {I}ndustrie- und {F}orschungsstandort {D}eutschland},
  year      = {2011},
  month     = dec,
  url       = {www.bicc-net.de/multicore-oekosystem},
  file      = {BICCnetInnovationszirkelEmbeddedSystems2011.pdf:files\\BICCnetInnovationszirkelEmbeddedSystems2011.pdf:PDF},
  groups    = {Multi-Core Allgemein, Embedded Multi-Core},
  keywords  = {MULTICORE; GENERAL;},
  owner     = {hilrob},
  quality   = {1},
  read      = {done},
  timestamp = {2013.02.11},
}

@Misc{BITKOM2010,
  author       = {BITKOM},
  title        = {{E}ingebettete {S}ysteme - {E}in strategisches {W}achstumsfeld für {D}eutschland},
  year         = {2010},
  howpublished = {online},
  month        = feb,
  url          = {http://www.safetrans-de.org/documents/BITKOM_ES_web.pdf},
  file         = {BITKOM2010.pdf:files\\BITKOM2010.pdf:PDF},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2011.09.20},
}

@InProceedings{Bjerregaard2005,
  author    = {Bjerregaard, T. and Sparso, J.},
  title     = {{S}cheduling discipline for latency and bandwidth guarantees in asynchronous network-on-chip},
  booktitle = {Asynchronous Circuits and Systems, 2005. ASYNC 2005. Proceedings. 11th IEEE International Symposium on},
  year      = {2005},
  month     = mar,
  pages     = {34--43},
  doi       = {10.1109/ASYNC.2005.7},
  abstract  = {{G}uaranteed services ({GS}) are important in that they provide predictability
	in the complex dynamics of shared communication structures. {T}his
	paper discusses the implementation of {GS} in an asynchronous network-on-chip.
	{W}e present a novel scheduling discipline called asynchronous latency
	guarantee ({ALG}) scheduling, which provides latency and bandwidth
	guarantees in accessing a shared media, e.g. a physical link shared
	between a number of virtual channels. {ALG} overcomes the drawbacks
	of existing scheduling disciplines, in particular, the coupling between
	latency and bandwidth guarantees. {A} 0.12 mu;m {CMOS} standard cell
	implementation of an {ALG} link has been simulated. {T}he operation
	speed of the design was 702 {MDI}/s.},
  groups    = {On-Chip Interconnect / NoC, (RT-) Scheduling},
  issn      = {1522-8681},
  keywords  = { 0.12 micron; ALG link; CMOS implementation; SoC; admission control; asynchronous latency guarantee scheduling; asynchronous network-on-chip; bandwidth guarantees; guaranteed services; latency guarantees; multicomputer network routing; shared media access; shared segmented interconnection networks; CMOS logic circuits; asynchronous circuits; multiprocessor interconnection networks; system-on-chip; telecommunication congestion control; telecommunication network routing;},
  owner     = {kamjac},
  read      = {unread},
  timestamp = {2011.01.13},
}

@InProceedings{Block2007,
  author        = {Block, Aaron and Leontyev, Hennadiy and Brandenburg, Bjorn B. and Anderson, James H.},
  title         = {{A} {F}lexible {R}eal-{T}ime {L}ocking {P}rotocol for {M}ultiprocessors},
  booktitle     = {13th IEEE International Conference on Embedded and Real-Time Computing Systems and Applications (RTCSA 2007)},
  year          = {2007},
  publisher     = {IEEE},
  month         = aug,
  isbn          = {0-7695-2975-5},
  pages         = {47--56},
  doi           = {10.1109/RTCSA.2007.8},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4296835},
  abstract      = {{R}eal-time scheduling algorithms for multiprocessor systems have
	been the subject of considerable recent interest. {F}or such an algorithm
	to be truly useful in practice, support for semaphore-based locking
	must be provided. {H}owever, for many global scheduling algorithms,
	no such mechanisms have been proposed. {F}urthermore, in the partitioned
	case, most prior semaphore schemes are either inefficient or restrict
	critical sections considerably. {I}n this paper, a new flexible multiprocessor
	locking scheme is presented that can be applied under both partitioning
	and global scheduling. {T}his scheme allows unrestricted critical-section
	nesting, but has been designed to deal with the common case of short
	non-nested accesses efficiently.},
  annote        = {lesen sobald es Richtung Locking gehen soll},
  file          = {Block2007.pdf:files\\Block2007.pdf:PDF},
  issn          = {1533-2306},
  keywords      = {FLEXIBLE MULTI-PROCESSOR LOCKING SCHEME,GLOBAL SCHEDULING,LOCKING,MULTI-CORE,MULTI-PROCESSOR,REAL-TIME SYSTEMS,SCHEDULING,SEMAPHORE},
  mendeley-tags = {FLEXIBLE MULTI-PROCESSOR LOCKING SCHEME,GLOBAL SCHEDULING,LOCKING,MULTI-CORE,MULTI-PROCESSOR,REAL-TIME SYSTEMS,SCHEDULING,SEMAPHORE},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.28},
}

@InProceedings{Blumofe1995,
  author    = {Blumofe, Robert D. and Joerg, Christopher F. and Kuszmaul, Bradley C. and Leiserson, Charles E. and Randall, Keith H. and Zhou, Yuli},
  title     = {{C}ilk: {A}n {E}fficient {M}ultithreaded {R}untime {S}ystem},
  booktitle = {Proceedings of the Fifth ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming},
  year      = {1995},
  series    = {PPOPP '95},
  publisher = {ACM},
  location  = {Santa Barbara, California, USA},
  isbn      = {0-89791-700-6},
  pages     = {207--216},
  doi       = {10.1145/209936.209958},
  url       = {http://doi.acm.org/10.1145/209936.209958},
  acmid     = {209958},
  address   = {New York, NY, USA},
  file      = {Blumofe1995.pdf:files\\Blumofe1995.pdf:PDF},
  groups    = {Tools},
  numpages  = {10},
  owner     = {hilrob},
  timestamp = {2014.01.14},
}

@Article{Blumofe1999,
  author        = {Blumofe, Robert D. and Leiserson, Charles E.},
  title         = {{S}cheduling {M}ultithreaded {C}omputations by {W}ork {S}tealing},
  journal       = {Journal of the ACM},
  year          = {1999},
  volume        = {46},
  number        = {5},
  month         = sep,
  pages         = {720--748},
  issn          = {00045411},
  doi           = {10.1145/324133.324234},
  url           = {http://portal.acm.org/citation.cfm?doid=324133.324234},
  abstract      = { {T}his paper studies the problem of efficiently schedulling fully
	strict (i.e., well-structured) multithreaded computations on parallel
	computers. {A} popular and practical method of scheduling this kind
	of dynamic {MIMD}-style computation is "work stealing," in which
	processors needing work steal computational threads from other processors.
	{I}n this paper, we give the first provably good work-stealing scheduler
	for multithreaded computations with dependencies.{S}pecifically,
	our analysis shows that the expected time to execute a fully strict
	computation on {P} processors using our work-stealing scheduler is
	{T}1/{P} + {O}({T} infinity , where {T}1 is the minimum serial execution
	time of the multithreaded computation and ({T} infinity is the minimum
	execution time with an infinite number of processors. {M}oreover,
	the space required by the execution is at most {S}1{P}, where {S}1
	is the minimum serial space requirement. {W}e also show that the
	expected total communication of the algorithm is at most {O}({PT}
	infinity ( 1 + nd){S}max), where {S}max is the size of the largest
	activation record of any thread and nd is the maximum number of times
	that any thread synchronizes with its parent. {T}his communication
	bound justifies the folk wisdom that work-stealing schedulers are
	more communication efficient than their work-sharing counterparts.
	{A}ll three of these bounds are existentially optimal to within a
	constant factor. },
  file          = {Blumofe1999.pdf:files\\Blumofe1999.pdf:PDF},
  keywords      = {MULTI-THREADING,SCHEDULING,WORK STEALING},
  mendeley-tags = {MULTI-THREADING,SCHEDULING,WORK STEALING},
  owner         = {hilrob},
  publisher     = {ACM},
  read          = {unread},
  timestamp     = {2010.05.28},
}

@InProceedings{Bohn2011,
  author      = {Michael Bohn and J\"orn Schneider and Christian Eltges and Robert R\"o\ss{}ger},
  title       = {{M}igration von {AUTOSAR}-basierten {E}chtzeitanwendungen auf {M}ulticore-{S}ysteme},
  booktitle   = {4. Workshop Entwicklung zuverl\"assiger Software-Systeme},
  year        = {2011},
  url         = {http://www.fh-trier.de/index.php?id=11803},
  abstract    = {{S}elbst sicherheitskritische {E}chtzeitanwendungen im {A}utomobilbereich
	werden in naher {Z}ukunft auf {M}ulticore-{S}ysteme migriert werden,
	um den steigenden {I}nnovationshunger nach neuen {P}roduktmerkmalen
	decken zu können. {E}ine manuelle {M}igration der über {J}ahre gewachsenen
	{S}oftwarebasis ist, schon aufgrund des {U}mfangs der zu migrierenden
	{S}oftware, kaum zu leisten. {H}inzu kommen die kaum zu durchschauenden
	{A}bhängigkeiten der {S}oftwarebestandteile untereinander, die mühevoll
	analysiert und bewertet werden müssen, um eine korrekte {M}igration
	durchzuführen. {D}ieser {B}eitrag stellt einen neuartigen {A}nsatz
	für das automatische {A}uffinden und {B}ewerten von {A}bhängigkeiten
	mit {H}ilfe statischer {P}rogrammanalysen vor. {D}ie ebenfalls vorgestellten
	ersten {E}rgebnisse stützen die {T}hese, dass das {K}onzept zur teilautomatisierten
	{M}igration von {E}chtzeitsoftware auf {M}ulticore-{S}ysteme einsetzbar
	ist.},
  affiliation = {Dept. of Computer Science, Trier University of Applied Sciences, Trier, Germany},
  file        = {Bohn2011.pdf:files\\Bohn2011.pdf:PDF},
  groups      = {Domänen-spezifisch, Konsolidierung & Integration},
  numpages    = {6},
  owner       = {hilrob},
  read        = {reading},
  timestamp   = {2011.08.31},
}

@InProceedings{Bonakdarpour2011,
  author    = {Bonakdarpour, Borzoo and Lin, Yiyan and Kulkarni, Sandeep},
  title     = {{A}utomated addition of fault recovery to cyber-physical component-based models},
  booktitle = {Proceedings of the ninth ACM international conference on Embedded software},
  year      = {2011},
  series    = {EMSOFT '11},
  publisher = {ACM},
  location  = {Taipei, Taiwan},
  isbn      = {978-1-4503-0714-7},
  pages     = {127--136},
  doi       = {10.1145/2038642.2038663},
  url       = {http://doi.acm.org/10.1145/2038642.2038663},
  acmid     = {2038663},
  address   = {New York, NY, USA},
  file      = {Bonakdarpour2011.pdf:files\\Bonakdarpour2011.pdf:PDF},
  groups    = {Correctness by Construction},
  keywords  = {component-based modeling, correctness-by-construction, cyber-physical systems, fault-tolerance, recovery, synthesis, transformation},
  numpages  = {10},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.11.28},
}

@InProceedings{Bordin2007,
  author    = {Bordin, Matteo and Vardanega, Tullio},
  title     = {{C}orrectness by construction for high-integrity real-time systems: a metamodel-driven approach},
  booktitle = {Proceedings of the 12th international conference on Reliable software technologies},
  year      = {2007},
  series    = {Ada-Europe'07},
  publisher = {Springer-Verlag},
  location  = {Geneva, Switzerland},
  isbn      = {978-3-540-73229-7},
  pages     = {114--127},
  url       = {http://dl.acm.org/citation.cfm?id=1769168.1769177},
  acmid     = {1769177},
  address   = {Berlin, Heidelberg},
  groups    = {Correctness by Construction},
  keywords  = {Ravenscar Profile, correctness by construction, metamodelling, model-driven architecture},
  numpages  = {14},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.11.28},
}

@InProceedings{Borkar2007,
  author    = {Borkar, S.},
  title     = {{T}housand {C}ore {C}hips - {A} {T}echnology {P}erspective},
  booktitle = {Design Automation Conference, 2007. DAC '07. 44th ACM/IEEE},
  year      = {2007},
  month     = jun,
  pages     = {746--749},
  abstract  = {{T}his paper presents the many-core architecture, with hundreds to
	thousands of small cores, to deliver unprecedented compute performance
	in an affordable power envelope. {W}e discuss fine grain power management,
	memory bandwidth, on die networks, and system resiliency for the
	many-core system.},
  file      = {Borkar2007.pdf:files\\Borkar2007.pdf:PDF},
  groups    = {Many-Core, Multi-Core Allgemein},
  issn      = {0738-100X},
  journal   = {Design Automation Conference, 2007. DAC '07. 44th ACM/IEEE},
  keywords  = {DIE NETWORKS;FINE GRAIN POWER MANAGEMENT;MANY-CORE ARCHITECTURE;MEMORY BANDWIDTH;SYSTEM RESILIENCY;TRANSISTOR;TRANSISTORS;},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.08.25},
}

@Article{Borkar2005,
  author    = {Borkar, S.},
  title     = {{D}esigning reliable systems from unreliable components: the challenges of transistor variability and degradation},
  journal   = {Micro, IEEE},
  year      = {2005},
  volume    = {25},
  number    = {6},
  month     = nov,
  pages     = {10--16},
  issn      = {0272-1732},
  doi       = {10.1109/MM.2005.110},
  abstract  = {{A}s technology scales, variability in transistor performance continues
	to increase, making transistors less and less reliable. {T}his creates
	several challenges in building reliable systems, from the unpredictability
	of delay to increasing leakage current. {F}inding solutions to these
	challenges require a concerted effort on the part of all the players
	in a system design. {T}his article discusses these effects and proposes
	microarchitecture, circuit, and testing research that focuses on
	designing with many unreliable components (transistors) to yield
	reliable system designs.},
  file      = {Borkar2005.pdf:files\\Borkar2005.pdf:PDF},
  groups    = {Multi-Core Allgemein, Reliability & Dependability},
  keywords  = {DELAY; LEAKAGE CURRENT; MICROARCHITECTURE; RELIABLE SYSTEM DESIGN; TESTING; TRANSISTOR DEGRADATION; TRANSISTOR VARIABILITY; UNRELIABLE COMPONENTS; VLSI; INTEGRATED CIRCUIT DESIGN; INTEGRATED CIRCUIT RELIABILITY; INTEGRATED CIRCUIT TESTING; LOGIC DESIGN; MICROPROCESSOR CHIPS; TRANSISTORS; RESILIENT MICROARCHITECTURE;},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.08.25},
}

@Article{Borkar2011,
  author     = {Borkar, Shekhar and Chien, Andrew A.},
  title      = {{T}he future of microprocessors},
  journal    = {Commun. ACM},
  year       = {2011},
  volume     = {54},
  number     = {5},
  month      = may,
  pages      = {67--77},
  issn       = {0001-0782},
  doi        = {10.1145/1941487.1941507},
  url        = {http://doi.acm.org/10.1145/1941487.1941507},
  abstract   = {Microprocessors - single-chip computers - are the building blocks
	of the information world. Their performance has grown 1,000-fold
	over the past 20 years, driven by transistor speed and energy scaling,
	as well as by microarchitecture advances that exploited the transistor
	density gains from Moore's Law. ...},
  acmid      = {1941507},
  address    = {New York, NY, USA},
  file       = {Borkar2011.pdf:files\\Borkar2011.pdf:PDF},
  groups     = {Energy & Power, Many-Core, Multi-Core Allgemein, On-Chip Interconnect / NoC, Software Deployment},
  issue_date = {May 2011},
  numpages   = {11},
  owner      = {hilrob},
  publisher  = {ACM},
  read       = {done},
  timestamp  = {2012.06.12},
}

@Article{Borkar2003,
  author    = {Shekhar Borkar and Tanay Karnik and Siva Narendra and Jim Tschanz and Ali Keshavarzi and Vivek De},
  title     = {{P}arameter {V}ariations and {I}mpact on {C}ircuits and {M}icroarchitecture},
  journal   = {Design Automation Conference},
  year      = {2003},
  volume    = {0},
  pages     = {338},
  doi       = {http://doi.ieeecomputersociety.org/10.1109/DAC.2003.1219020},
  abstract  = {{P}arameter variation in scaled technologies beyond 90nm will pose
	a major challenge for design of future high performance microprocessors.
	{I}n this paper, we discuss process, voltage and temperature variations;
	and their impact on circuit and microarchitecture. {P}ossible solutions
	to reduce the impact of parameter variations and to achieve higher
	frequency bins are also presented.},
  address   = {Los Alamitos, CA, USA},
  file      = {Borkar2003.pdf:files\\Borkar2003.pdf:PDF},
  groups    = {Reliability & Dependability},
  isbn      = {1-58113-688-9},
  owner     = {hilrob},
  publisher = {IEEE Computer Society},
  read      = {next},
  timestamp = {2010.09.01},
}

@Misc{Bost2013,
  author       = {Bost, Eric},
  title        = {{H}ardware {S}upport for {R}obust {P}artitioning in {F}reescale {Q}or{IQ} {M}ulticore {S}o{C}s ({P}4080 and derivatives)},
  year         = {2013},
  howpublished = {White Paper},
  month        = may,
  url          = {http://cache.freescale.com/files/32bit/doc/white_paper/QORIQHSRPWP.pdf},
  abstract     = {This document describes the hardware-level features that have been
	integrated into the P4080 to manage partitioned systems. This document
	is intended for embedded systems architects and designers who require
	robust partitioning capabilities and full control of hardware resources
	to achieve real-time goals through their further integration of hardware
	and software functionalities.},
  file         = {Bost2013.pdf:files\\Bost2013.pdf:PDF},
  groups       = {Konsolidierung & Integration, On-Chip Interconnect / NoC, Virtualisierung & Partitionierung, Zuverlässigkeit},
  owner        = {hilrob},
  timestamp    = {2014.01.15},
}

@InBook{Bosworth2011,
  author    = {Bosworth, Edward L.},
  title     = {{D}esign and {A}rchitecture of {D}igital {C}omputers: {A}n {I}ntroduction},
  year      = {2011},
  publisher = {Columbus State University, 4225 University Avenue, Columbus, GA 31907},
  chapter   = {Chapter 2: The Power Wall and Multicore Computers},
  pages     = {69--77},
  url       = {http://www.edwardbosworth.com/My5155Textbook/MyText5155_AFrontMatter.htm},
  file      = {Bosworth2011.pdf:files\\Bosworth2011.pdf:PDF},
  groups    = {Energy & Power, Multi-Core Allgemein},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2012.04.12},
}

@BOOK{Bovet2005,
  title = {{U}nderstanding the {L}inux {K}ernel, {T}hird {E}dition},
  publisher = {O'Reilly Media},
  year = {2005},
  author = {Daniel P. Bovet and Marco Cesati Ph.D.},
  isbn = {0596005652},
  owner = {hilrob},
  timestamp = {2013.10.10}
}

@Article{Bowen2000,
  author     = {Bowen, Jonathan},
  title      = {{T}he ethics of safety-critical systems},
  journal    = {Commun. ACM},
  year       = {2000},
  volume     = {43},
  number     = {4},
  month      = apr,
  pages      = {91--97},
  issn       = {0001-0782},
  doi        = {10.1145/332051.332078},
  url        = {http://doi.acm.org/10.1145/332051.332078},
  acmid      = {332078},
  address    = {New York, NY, USA},
  file       = {Bowen2000.pdf:files\\Bowen2000.pdf:PDF},
  groups     = {(RT-) Embedded Systems},
  issue_date = {April 2000},
  numpages   = {7},
  owner      = {hilrob},
  publisher  = {ACM},
  read       = {next},
  timestamp  = {2012.06.15},
}

@InProceedings{Brakensiek2008,
  author    = {Brakensiek, J\"{o}rg and Dr\"{o}ge, Axel and Botteck, Martin and H\"{a}rtig, Hermann and Lackorzynski, Adam},
  title     = {{V}irtualization as an enabler for security in mobile devices},
  booktitle = {Proceedings of the 1st workshop on Isolation and integration in embedded systems},
  year      = {2008},
  series    = {IIES '08},
  publisher = {ACM},
  location  = {Glasgow, Scotland},
  isbn      = {978-1-60558-126-2},
  pages     = {17--22},
  doi       = {http://doi.acm.org/10.1145/1435458.1435462},
  url       = {http://doi.acm.org/10.1145/1435458.1435462},
  acmid     = {1435462},
  address   = {New York, NY, USA},
  file      = {Brakensiek2008.pdf:files\\Brakensiek2008.pdf:PDF},
  groups    = {(Embedded) Security, Virtualisierung & Partitionierung},
  keywords  = {hypervisor, mobile device, virtual machine monitor, virtualization},
  numpages  = {6},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.02.20},
}

@InProceedings{Brandenburg2008,
  author        = {Brandenburg, Bjorn B. and Calandrino, John M. and Block, Aaron and Leontyev, Hennadiy and Anderson, James H.},
  title         = {{R}eal-{T}ime {S}ynchronization on {M}ultiprocessors: {T}o {B}lock or {N}ot to {B}lock, to {S}uspend or {S}pin?},
  booktitle     = {2008 IEEE Real-Time and Embedded Technology and Applications Symposium},
  year          = {2008},
  publisher     = {IEEE},
  isbn          = {978-0-7695-3146-5},
  pages         = {342--353},
  doi           = {10.1109/RTAS.2008.27},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4550805},
  abstract      = {{I}n the domain of multiprocessor real-time systems, there has been
	a wealth of recent work on scheduling, but relatively little work
	on the equally-important topic of synchronization. {W}hen synchronizing
	accesses to shared resources, four basic options exist: lock-free
	execution, wait-free execution, spin- based locking, and suspension-based
	locking. {T}o our knowledge, no empirical multiprocessor-based evaluation
	of these basic techniques that focuses on real-time systems has ever
	been conducted before. {I}n this paper, we present such an evaluation
	and report on our efforts to incorporate synchronization support
	in the testbed used in this effort.},
  annote        = {Sehr gutes Paper, indem die Synchronization auf Multiprocessor-Plattformen im Zentrum steht. Eigentlich haben sie verschiedene Synchronizationsmechanismen zusammen mit EDF-Scheduling auf LITMUS\^{}RT implementiert und den Overhead sowie die Schedulability gemessen. Sehr guter \"{U}berblick \"{u}ber Scheduling-Verfahren und Locking-Mechanismen. Auch Task-Modell und deren Schedulability wird umfangreich erkl\"{a}rt. Schlie\ss lich nutzen sie ein Flexibles Multiprocessor Locking Protocol. Es gibt interessante Hinweise zur Nutzung von RT-Linux .},
  file          = {Brandenburg2008.pdf:files\\Brandenburg2008.pdf:PDF},
  keywords      = {EDF,FEATHER TRACE,LOCK-FREE EXECUTION,MULTI-CORE,REAL-TIME-SYSTEMS,SCHEDULING,SPIN-BASED LOCKING,SUSPENSION-BASED LOCKING,SYNCHRONIZATION,WAIT-FREE EXECUTION},
  mendeley-tags = {EDF,FEATHER TRACE,LOCK-FREE EXECUTION,MULTI-CORE,REAL-TIME-SYSTEMS,SCHEDULING,SPIN-BASED LOCKING,SUSPENSION-BASED LOCKING,SYNCHRONIZATION,WAIT-FREE EXECUTION},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Book{Breshears2009,
  author        = {Breshears, Clay},
  title         = {{T}he {A}rt of {C}oncurrency: {A} {T}hread {M}onkey's {G}uide to {W}riting {P}arallel {A}pplications},
  year          = {2009},
  editor        = {Loukides, Mike},
  edition       = {1},
  publisher     = {O'Reilly Media, Inc.},
  isbn          = {0596521537},
  pages         = {285},
  abstract      = {{I}f you're looking to take full advantage of multi-core processors
	with concurrent programming, this practical book provides the knowledge
	and hands-on experience you need. "{T}he {A}rt of {C}oncurrency"
	is one of the few resources to focus on implementing algorithms in
	the shared-memory model of multi-core processors, rather than just
	theoretical models or distributed-memory architectures. {T}he book
	provides detailed explanations and usable samples to help you transform
	algorithms from serial to parallel code, along with advice and analysis
	for avoiding mistakes that programmers typically make when first
	attempting these computations. {W}ritten by an {I}ntel engineer with
	over two decades of parallel and concurrent programming experience,
	this book will help you: {U}nderstand parallelism and concurrency
	{E}xplore differences between programming for shared-memory and distributed-memory
	{L}earn guidelines for designing multithreaded applications, including
	testing and tuning {D}iscover how to make best use of different threading
	libraries, including {W}indows threads, {POSIX} threads, {O}pen{MP},
	and {I}ntel {T}hreading {B}uilding {B}locks {E}xplore how to implement
	concurrent algorithms that involve sorting, searching, graphs, and
	other practical computations "{T}he {A}rt of {C}oncurrency" shows
	you how to keep algorithms scalable to take advantage of new processors
	with even more cores. {F}or developing parallel code algorithms for
	concurrent programming, this book is a must.},
  annote        = {angefangen zu lesen ...},
  file          = {Breshears2009.pdf:files\\Breshears2009.pdf:PDF},
  groups        = {Books},
  keywords      = {BASICS,CONCURRENCY,INTEL TBB,INTRODUCTION,MULTI-CORE,OPENMP,OVERVIEW,PARALLELIZATION,PTHREADS,SHARED-MEMORY,THREADS},
  mendeley-tags = {BASICS,CONCURRENCY,INTEL TBB,INTRODUCTION,MULTI-CORE,OPENMP,OVERVIEW,PARALLELIZATION,PTHREADS,SHARED-MEMORY,THREADS},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@InProceedings{Briao2007,
  author        = {Briao, Eduardo Wenzel and Barcelos, Daniel and Wronski, Fabio and Wagner, Flavio Rech},
  title         = {{I}mpact of task migration in {N}o{C}-based {MPS}o{C}s for soft real-time applications},
  booktitle     = {2007 IFIP International Conference on Very Large Scale Integration},
  year          = {2007},
  publisher     = {IEEE},
  isbn          = {978-1-4244-1709-4},
  pages         = {296--299},
  doi           = {10.1109/VLSISOC.2007.4402516},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4402516},
  abstract      = {{T}his work analyzes the impact of task migration in the context of
	multiprocessor systems-on-chip, where processors are interconnected
	by a network-on-chip ({N}o{C}) and the system must adapt itself to
	a dynamic workload, such that performance and real-time constraints
	are met and energy consumption is minimized. {T}he task migration
	model assumes that the whole code and data of the tasks are transferred
	from an origin node to the chosen destination node. {E}xperimental
	results show that, even with a higher overhead than other possible
	approaches, task migration may be applied in {N}o{C}-based architectures,
	since it pays off the costs involved in the transfer in terms of
	overall system performance and energy consumption and may help to
	improve the fulfillment of task deadlines in soft real-time systems.},
  annote        = {In this work the impact of task migration in MPSoCs is analyzed. It is demonstrated that task migration helps meeting soft real-time deadlines without performance degradation or increased energy consumption.},
  file          = {Briao2007.pdf:files\\Briao2007.pdf:PDF},
  groups        = {Task Migration},
  keywords      = {DYNAMIC-RECONFIGURATION,MPSOC,MULTI-CORE,NOC,ON-CHIP-INTERCONNECT,REAL-TIME SYSTEMS,SOC,TASK-MIGRATION},
  mendeley-tags = {DYNAMIC-RECONFIGURATION,MPSOC,MULTI-CORE,NOC,ON-CHIP-INTERCONNECT,REAL-TIME SYSTEMS,SOC,TASK-MIGRATION},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.28},
}

@InProceedings{Brocal2010,
  author    = {Brocal, Vicent and Masmano, Miguel and Ripoll, Ismael and Crespo, Alfons and Balbastre, Patricia and Metge, Jean-Jacques},
  title     = {{X}oncrete: a scheduling tool for partitioned real-time systems},
  booktitle = {{Proceedings of the Embedded Real Time Software and Systems Conference (ERTS$^2$ 2010)}},
  year      = {2010},
  month     = may,
  pages     = {1--8},
  url       = {http://www.erts2010.org/Site/0ANDGY78/Fichier/PAPIERS%20ERTS%202010%202/ERTS2010_0128_final.pdf},
  groups    = {(RT-) Embedded Systems, (RT-) Scheduling, Virtualisierung & Partitionierung, WCET},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2011.07.07},
}

@Book{Brooks1995,
  author    = {Brooks,Jr., Frederick P.},
  title     = {{T}he mythical man-month (anniversary ed.)},
  year      = {1995},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  isbn      = {0-201-83595-9},
  abstract  = {{F}ew books on software project management have been as influential
	and timeless as {T}he {M}ythical {M}an-{M}onth. {W}ith a blend of
	software engineering facts and thought-provoking opinions, {F}red
	{B}rooks offers insight for anyone managing complex projects. {T}hese
	essays draw from his experience as project manager for the {IBM}
	{S}ystem/360 computer family and then for {OS}/360, its massive software
	system. {N}ow, 20 years after the initial publication of his book,
	{B}rooks has revisited his original ideas and added new thoughts
	and advice, both for readers already familiar with his work and for
	readers discovering it for the first time.{T}he added chapters contain
	(1) a crisp condensation of all the propositions asserted in the
	original book, including {B}rooks' central argument in {T}he {M}ythical
	{M}an-{M}onth: that large programming projects suffer management
	problems different from small ones due to the division of labor;
	that the conceptual integrity of the product is therefore critical;
	and that it is difficult but possible to achieve this unity; (2)
	{B}rooks' view of these propositions a generation later; (3) a reprint
	of his classic 1986 paper "{N}o {S}ilver {B}ullet"; and (4) today's
	thoughts on the 1986 assertion, "{T}here will be no silver bullet
	within ten years." 0201835959{B}04262002},
  address   = {Boston, MA, USA},
  groups    = {Books},
  owner     = {hilrob},
  read      = {done, reading},
  timestamp = {2011.11.29},
}

@InCollection{Broy2010,
  author      = {Broy, Manfred},
  title       = {{C}yber-{P}hysical {S}ystems - {W}issenschaftliche {H}erausforderungen {B}ei {D}er {E}ntwicklung},
  booktitle   = {Cyber-Physical Systems},
  year        = {2010},
  editor      = {Broy, Manfred},
  volume      = {0},
  series      = {acatech DISKUSSION},
  publisher   = {Springer Berlin Heidelberg},
  isbn        = {978-3-642-14901-6},
  pages       = {17--31},
  url         = {http://dx.doi.org/10.1007/978-3-642-14901-6_2},
  abstract    = {Cyber-Physical Systems adressieren die enge Verbindung eingebetteter
	Systeme zur Überwachung und Steuerung physikalischer Vorgänge mittels
	Sensoren und Aktuatoren über Kommunikationseinrichtungen mit den
	globalen digitalen Netzen (dem "Cyberspace"). Dieser Typus von Systemen
	ermöglicht über Wirkketten eine Verbindung zwischen Vorgängen der
	physischen Realität und den heute verfügbaren digitalen Netzinfrastrukturen.
	Dies erlaubt vielfältige Applikationen mit hohem wirtschaftlichen
	Potential, und mit starker Innovationskraft. Die vollständige Ausschöpfung
	des Potentials erfordert aber gezielte wissenschaftliche Anstrengungen
	bei der Entwicklung solcher Systeme im Hinblick auf Methodik, Technologie,
	Kostenbeherrschung und funktionale Angemessenheit.},
  affiliation = {Institut für Informatik, Technischen Universität München, München},
  file        = {Broy2010.pdf:files\\Broy2010.pdf:PDF},
  groups      = {Cyber-Physical Systems},
  keyword     = {Computer Science},
  owner       = {hilrob},
  read        = {unread},
  timestamp   = {2012.02.20},
}

@Article{Broy2011,
  author    = {Broy, Manfred and Reichart, Günter and Rothhardt, Lutz},
  title     = {{A}rchitekturen softwarebasierter {F}unktionen im {F}ahrzeug: von den {A}nforderungen zur {U}msetzung},
  journal   = {Informatik-Spektrum},
  year      = {2011},
  language  = {German},
  volume    = {34},
  number    = {1},
  pages     = {42--59},
  issn      = {0170-6012},
  doi       = {10.1007/s00287-010-0507-6},
  url       = {http://dx.doi.org/10.1007/s00287-010-0507-6},
  owner     = {hilrob},
  publisher = {Springer-Verlag},
  timestamp = {2014.10.14},
}

@Book{Buttazzo2004,
  author    = {Buttazzo, Giorgio C},
  title     = {{H}ard {R}eal-time {C}omputing {S}ystems: {P}redictable {S}cheduling {A}lgorithms {A}nd {A}pplications},
  year      = {2004},
  series    = {Real-Time Systems},
  publisher = {Springer-Verlag TELOS},
  url       = {http://www.amazon.com/Hard-Real-Time-Computing-Systems-Applications/dp/0387231374},
  abstract  = {{H}ard {R}eal-{T}ime {C}omputing {S}ystems: {P}redictable {S}cheduling
	{A}lgorithms and {A}pplications is a basic treatise on real-time
	computing, with particular emphasis on predictable scheduling algorithms.
	{I}t introduces the fundamental concepts of real-time computing,
	illustrates the most significant results in the field, and provides
	the essential methodologies for designing predictable computing systems
	which can be used to support critical control applications.{T}his
	volume serves as a textbook for advanced level courses on the topic.
	{E}ach chapter provides basic concepts, which are followed by algorithms
	that are illustrated with concrete examples, figures and tables.
	{E}xercises are included with each chapter and solutions are given
	at the end of the book. {T}he book also provides an excellent reference
	for those interested in real-time computing for designing and/or
	developing predictable control applications.},
  address   = {Santa Clara, CA, USA},
  groups    = {Books, Optimierung, (RT-) Scheduling},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.05.27},
}

@Misc{Butz2008,
  author      = {Butz, Henning},
  title       = {{O}pen {I}ntegrated {M}odular {A}vionic ({IMA}): {S}tate of the {A}rt and future {D}evelopment {R}oad {M}ap at {A}irbus {D}eutschland},
  year        = {2008},
  url         = {http://www.aviation-conferences.com/architecture/pdf/ima-henning-butz.pdf},
  abstract    = {{E}lectronic sets operated on aircraft generally are summarized as
	"avionic = aviation electronic equipment". {T}he first avionic devices
	that had been applied on aircraft were radios for communication and
	navigation some 70 years ago. {F}orty years later analog and digital
	electronic controllers began to re-place mechanical aircraft functions
	and equipment. {S}ince those years the airline demand for more and
	smarter functionality on modern aircraft systems pushed an exponential
	request for avionic performance. {F}inally the classical concept:
	one function = one computer could not longer be maintained. {I}n
	the early nineties air framers and system suppliers developed concepts
	where multiple software ({SW}) functions of different criticality
	level were integrated on single avionic computing devices in order
	to keep the volume, weight, power consumption and cost of avionic
	within reasonable limits. {H}owever, multi function integration on
	a single processor leads to in-transparent fault propagation, which
	significantly turns the reliability of the controllers down and maintenance
	cost up. {M}odifications and upgrades became a nightmare. {A} new
	concept - labeled "{I}ntegrated {M}odular {A}vionic ({IMA})", first
	presented by {H}oneywell for cock-pit functions on the {B}oeing 777
	aircraft in 1995 - brought the solution. {I}t featured a modularized
	cabinet packaging with time triggered back plane data communication
	and an {A}pplication {P}rogram {I}nterface ({API}) middleware with
	specific services for strong {SW}/{SW} partitioning, for {HW}/{SW}
	segregation, precise fault monitoring, on board {SW} loading etc.
	{T}he {IMA} concept proved to meet the performance, reliability and
	flexibility requirements for highly integrated avionic systems as
	desired. {T}oday {IMA} cabinets can be provided from different avionic
	suppliers. {IMA} is standard on many new aircraft and helicopter
	programs. {I}n {E}urope {A}irbus together with {THALES}-{DIEHL} took
	a further step in order to develop an "{O}pen {IMA}" technology concept
	for the {A}380 program: {W}hile maintaining the a. m. {IMA} segregation
	fea-tures and {API} services the proprietary cabinet and back plane
	solutions were abandoned. {O}n the {A}380 {ARINC} 600 {S}tandard
	avionic boxes were chosen to host the generalpurpose controllers,
	labeled {CPIOM} ({C}ore {P}rocessing & {IO} {M}odule). {F}urther
	an "{A}ircraft {F}ull {D}uple{X} ({AFDX})" 100{M}bit switched {E}thernet
	data communication network was provided to connect all {CPIOM} and
	other com-puting devices on the aircraft. {E}thernet switches and
	{CPIOM} are designed according to the common aeronautic {ARINC} standards
	and thus, are open to all potential avionic manufacturers. {O}n the
	{A}380 the standard {CPIOM} are applied to both, cockpit and utility
	functions, i.e. quite across all aircraft system domains. {D}ue to
	the concept of {O}pen {IMA} the development responsibility for systems
	and functions remains at the system manufacturers. {A}irbus acts
	as the {I}ntegrator, putting together the {CPIOM} with all the application
	{SW} that is provided by different system suppliers. {T}his is a
	new and complex industrial process, which demands for new methods
	and tools. {T}he paper gives a survey on the state of the art of
	the {A}380 {O}pen {IMA} concept in terms of technical aspects and
	with a strong focus on the means and process features of this technology
	(configuration, incremental qualification, tools, industrial roles
	& responsibilities, liabilities etc.). {F}inally - derived from the
	{L}essons learnt - a roadmap towards further needs and targets will
	be given.},
  file        = {Butz2008.pdf:files\\Butz2008.pdf:PDF},
  groups      = {Domänen-spezifisch},
  institution = {Department of Avionic Systems at Airbus Deutschland GmbH},
  owner       = {hilrob},
  read        = {reading},
  timestamp   = {2011.01.24},
}

@InProceedings{Calandrino2008,
  author        = {Calandrino, John M. and Anderson, James H.},
  title         = {{C}ache-{A}ware {R}eal-{T}ime {S}cheduling on {M}ulticore {P}latforms: {H}euristics and a {C}ase {S}tudy},
  booktitle     = {2008 Euromicro Conference on Real-Time Systems},
  year          = {2008},
  publisher     = {IEEE},
  month         = jul,
  isbn          = {978-0-7695-3298-1},
  pages         = {299--308},
  doi           = {10.1109/ECRTS.2008.10},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4573125},
  abstract      = {{M}ulticore architectures, which have multiple processing units on
	a single chip, have been adopted by most chip manufacturers. {M}ost
	such chips contain on-chip caches that are shared by some or all
	of the cores on the chip. {T}o effectively use the available processing
	resources on such platforms,scheduling methods must be aware of these
	caches. {I}n this paper, we explore various heuristics that attempt
	to improve cache performance when scheduling real-time workloads.
	{S}uch heuristics are applicable when multiple multithreaded applications
	exist with large working sets. {I}n addition, we present a case study
	that shows how our best-performing heuristics can improve the end-user
	performance of video encoding applications.},
  annote        = {Problem: - efficient cache-usage on multicore platforms - ensuring RT-guarantees Assumptions: - generic MC-Architecture - symmetric, single threaded cores - shared L2-Cache Approach: - based on cache impact of multithreaded tasks encourage or discourage co-scheduling - tick-based, global scheduler (G-EDF) - Manipulate Job-Priorities while preserving RT-guarantees! - What is symbiotic scheduling? -> lacks RT-constraint guarantees - When to promote a job / Which jobs should be promoted - Die besten Heuristiken werden pr\"{a}sentiert},
  file          = {Calandrino2008.pdf:files\\Calandrino2008.pdf:PDF},
  keywords      = {CACHE-AWARE REAL-TIME-SCHEDULING,EDF,LITMUS,MULTI-CORE,PERIODIC TASK SYSTEM,REAL-TIME-SYSTEMS,SCHEDULING},
  mendeley-tags = {CACHE-AWARE REAL-TIME-SCHEDULING,EDF,LITMUS,MULTI-CORE,PERIODIC TASK SYSTEM,REAL-TIME-SYSTEMS,SCHEDULING},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@InProceedings{Carpenter2004,
  author        = {Carpenter, John and Funk, Shelby and Holman, Philip and Srinivasan, Anand and Anderson, James and Baruah, Sanjoy},
  title         = {{A} {C}ategorization of {R}eal-time {M}ultiprocessor {S}cheduling {P}roblems and {A}lgorithms},
  booktitle     = {Handbook on Scheduling Algorithms, Methods, and Models},
  year          = {2004},
  publisher     = {Chapman Hall/CRC, Boca},
  pages         = {30--1},
  url           = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.6.5744\&amp;rep=rep1\&amp;type=pdf},
  abstract      = {{I}ntroduction {R}eal-time multiprocessor systems are now commonplace.
	{D}esigns range from single-chip architectures, with a modest number
	of processors, to large-scale signal-processing systems, such as
	synthetic-aperture radar systems. {F}or uniprocessor systems, the
	problem of ensuring that deadline constraints are met has been widely
	studied: effective scheduling algorithms that take into account the
	many complexities that arise in real systems (e.g., synchronization
	costs, system overheads, etc.) are well understood. {I}n contrast,
	researchers are just beginning to understand the trade-offs that
	exist in multiprocessor systems. {I}n this chapter, we analyze the
	trade-offs involved in scheduling independent, periodic real-time
	tasks on a multiprocessor.},
  file          = {Carpenter2004.pdf:files\\Carpenter2004.pdf:PDF},
  keywords      = {INTRODUCTION,MULTI-CORE,REAL-TIME-SYSTEMS,SCHEDULING},
  mendeley-tags = {INTRODUCTION,MULTI-CORE,REAL-TIME-SYSTEMS,SCHEDULING},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@TechReport{Carzaniga1998,
  author      = {Carzaniga, Antonio and Fuggetta, Alfonso and Hall, Richard S. and Heimbigner, Dennis and van der Hoek, Andre and Wolf, Alexander L.},
  title       = {{A} {C}haracterization {F}ramework for {S}oftware {D}eployment {T}echnologies},
  institution = {COLORADO STATE UNIV FORT COLLINS DEPT OF COMPUTER SCIENCE},
  year        = {1998},
  file        = {Carzaniga1998.pdf:files\\Carzaniga1998.pdf:PDF},
  groups      = {Software Deployment},
  owner       = {hilrob},
  read        = {unread},
  timestamp   = {2012.06.06},
}

@InProceedings{Chapman2007,
  author    = {Chapman, Rod},
  title     = {{C}orrectness by construction: putting engineering (back) into software},
  booktitle = {Proceedings of the 2007 ACM international conference on SIGAda annual international conference},
  year      = {2007},
  series    = {SIGAda '07},
  publisher = {ACM},
  location  = {Fairfax, Virginia, USA},
  isbn      = {978-1-59593-876-3},
  pages     = {100--100},
  doi       = {10.1145/1315580.1315605},
  url       = {http://doi.acm.org/10.1145/1315580.1315605},
  acmid     = {1315605},
  address   = {New York, NY, USA},
  groups    = {Correctness by Construction},
  numpages  = {1},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.11.28},
}

@InProceedings{Chapman2006,
  author    = {Chapman, Roderick},
  title     = {{C}orrectness by construction: a manifesto for high integrity software},
  booktitle = {Proceedings of the 10th Australian workshop on Safety critical systems and software - Volume 55},
  year      = {2006},
  series    = {SCS '05},
  publisher = {Australian Computer Society, Inc.},
  location  = {Sydney, Australia},
  isbn      = {1-920-68237-6},
  pages     = {43--46},
  url       = {http://dl.acm.org/citation.cfm?id=1151816.1151820},
  abstract  = {{H}igh integrity software systems are often so large that conventional
	development processes cannot get anywhere near achieving tolerable
	defect rates. {T}his paper presents {C}orrectness by {C}onstruction
	({C}by{C}) -- an approach that has delivered very low defect rate
	software cost-effectively. {W}e describe the main principles of {C}by{C}
	and the results achieved to date. {W}e also touch on some of the
	barriers that we have encountered in trying to field {C}by{C} within
	our own and other organisations.},
  acmid     = {1151820},
  address   = {Darlinghurst, Australia, Australia},
  file      = {Chapman2006.pdf:files\\Chapman2006.pdf:PDF},
  groups    = {Methodik, Correctness by Construction, Formale Methoden, Reliability & Dependability, (Embedded) Security, Software Modellierung},
  keywords  = {SPARK, correctness-by-construction, safety-critical, security-critical, software engineering},
  numpages  = {4},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2011.09.26},
}

@Book{Chassell2009,
  author    = {Chassell, Robert J.},
  title     = {{I}ntroduction to {P}rogramming in {E}macs {L}isp},
  year      = {2009},
  edition   = {3},
  publisher = {GNU Press, a division of the Free Software Foundation, Inc.},
  isbn      = {1-882114-43-4},
  pages     = {270},
  url       = {http://www.gnu.org/software/emacs/emacs-lisp-intro/emacs-lisp-intro.pdf},
  address   = {51 Franklin Street, Fifth Floor Boston, MA 02110-1301 USA},
  file      = {Chassell2009 (EDGARs in Konflikt stehende Kopie 2013-06-25).pdf:files\\Chassell2009 (EDGARs in Konflikt stehende Kopie 2013-06-25).pdf:PDF;Chassell2009.pdf:files\\Chassell2009.pdf:PDF},
  groups    = {Books},
  keywords  = {LISP; EMACS; ELISP; INTRODUCTION;},
  month     = oct,
  owner     = {hilrob},
  timestamp = {2013.03.18},
}

@InProceedings{Chi2010,
  author        = {Chi, Chi Ching and Juurlink, Ben and Meenderinck, Cor},
  title         = {{E}valuation of {P}arallel {H}.264 {D}ecoding {S}trategies for the {C}ell {B}roadband {E}ngine {C}ategories and {S}ubject {D}escriptors},
  booktitle     = {ICS 2010},
  year          = {2010},
  abstract      = {{H}ow to develop efficient and scalable parallel applications is the
	key challenge for emerging many-core architectures. {W}e investigate
	this question by implementing and compar- ing two parallel {H}.264
	decoders on the {C}ell architecture. {I}t is expected that future
	many-cores will use a {C}ell-like local store memory hierarchy, rather
	than a non-scalable shared memory. {T}he two implemented parallel
	algorithms, the {T}ask {P}ool ({TP}) and the novel {R}ing-{L}ine
	({RL}) approach, both ex- ploit macroblock-level parallelism. {T}he
	{TP} implementation follows the master-slave paradigm and is very
	dynamic so that in theory perfect load balancing can be achieved.
	{T}he {RL} approach is distributed and more predictable in the sense
	that the mapping of macroblocks to processing elements is fixed.
	{T}his allows to better exploit data locality, to overlap communication
	with computation, and to reduce communication and synchronization
	overhead. {W}hile {TP} is more scalable in theory, the actual scalability
	favors {RL}. {U}sing 16 {SPE}s, {RL} obtains a scalability of 12x,
	while {TP} achieves only 10.3x. {M}ore importantly, the absolute
	performance of {RL} is much higher. {U}sing 16 {SPE}s, {RL} achieves
	a through- put of 139.6 frames per second (fps) while {TP} achieves
	only 76.6 fps. {A} large part of the additional performance advan-
	tage is due to hiding the memory latency. {F}rom the results we conclude
	that in order to fully leverage the performance of future many-cores,
	a centralized master should be avoided and the mapping of tasks to
	cores should be predictable in order to be able to hide the memory
	latency.},
  file          = {Chi2010.pdf:files\\Chi2010.pdf:PDF},
  keywords      = {CELL,H.264,HETEROGENEOUS MULTI-CORE,MASTER-SLAVE,MULTI-CORE,MULTI-MEDIA APPLICATIONS,PARALLEL PROGRAMMING,PARALLELIZATION,TASK POOL},
  mendeley-tags = {CELL,H.264,HETEROGENEOUS MULTI-CORE,MASTER-SLAVE,MULTI-CORE,MULTI-MEDIA APPLICATIONS,PARALLEL PROGRAMMING,PARALLELIZATION,TASK POOL},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@InProceedings{Chou2008,
  author        = {Chou, Chen-Ling and Marculescu, Radu},
  title         = {{U}ser-{A}ware {D}ynamic {T}ask {A}llocation in {N}etworks-on-{C}hip},
  booktitle     = {2008 Design, Automation and Test in Europe},
  year          = {2008},
  publisher     = {IEEE},
  month         = {M\"{a}rz},
  isbn          = {978-3-9810801-3-1},
  pages         = {1232--1237},
  doi           = {10.1109/DATE.2008.4484847},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4484847},
  abstract      = {{I}n this paper, we propose a run-time strategy for allocating the
	application tasks to platform resources in homogeneous networks-on-chip
	({N}o{C}s). {A}s novel contribution, we incorporate the user behavior
	information in the resource allocation process; this allows system
	to better respond to real-time changes and adapt dynamically to user
	needs. {S}everal algorithms are then proposed for solving the task
	allocation problem, while minimizing the communication energy consumption
	and network contention. {I}f user behavior is taken into consideration,
	we observe about 60\% communication energy savings (with negligible
	and energy runtime overhead) compared to an arbitrary task allocation
	strategy.},
  annote        = {Homogeneous MPSoCs have complex and dynamic system configurations which may require online task allocation. It is then shown that online allocation algorithms can reduce NoC contention and thus improve QoS.},
  file          = {Chou2008.pdf:files\\Chou2008.pdf:PDF},
  groups        = {Task Migration},
  keywords      = {DYNAMIC-RECONFIGURATION,DYNAMIC TASK-ALLOCATION,MULTI-CORE,NOC,ON-CHIP INTERCONNECT,RESOURCE ALLOCATION,TASK-ALLOCATION STRATEGY,TASK-MIGRATION},
  mendeley-tags = {DYNAMIC-RECONFIGURATION,DYNAMIC TASK-ALLOCATION,MULTI-CORE,NOC,ON-CHIP INTERCONNECT,RESOURCE ALLOCATION,TASK-ALLOCATION STRATEGY,TASK-MIGRATION},
  owner         = {hilrob},
  read          = {next},
  timestamp     = {2010.05.28},
}

@InProceedings{Clarke1982,
  author    = {Clarke, Edmund M. and Emerson, E. Allen},
  title     = {{D}esign and {S}ynthesis of {S}ynchronization {S}keletons {U}sing {B}ranching-{T}ime {T}emporal {L}ogic},
  booktitle = {Logic of Programs, Workshop},
  year      = {1982},
  publisher = {Springer-Verlag},
  isbn      = {3-540-11212-X},
  pages     = {52--71},
  url       = {http://dl.acm.org/citation.cfm?id=648063.747438},
  acmid     = {747438},
  address   = {London, UK, UK},
  file      = {Clarke1982.pdf:files\\Clarke1982.pdf:PDF},
  numpages  = {20},
  owner     = {hilrob},
  timestamp = {2013.06.17},
}

@TechReport{CMMIProductTeam2010,
  author      = {{CMMI Product Team}},
  title       = {{CMMI} for {D}evelopment, {V}ersion 1.3},
  institution = {Software Engineering Institute, Carnegie Mellon University, Pittsburgh, Pennsylvania},
  year        = {2010},
  type        = {Technical Report},
  number      = {CMU/SEI-2010-TR-033},
  note        = {The information has been transitioned to the CMMI Institute, a wholly-owned subsidiary of Carnegie Mellon University.},
  url         = {http://www.sei.cmu.edu/library/abstracts/reports/10tr033.cfm},
  abstract    = {CMMI® (Capability Maturity Model® Integration) models are collections
	of best practices that help organizations to improve their processes.
	These models are developed by product teams with members from industry,
	government, and the Carnegie Mellon® Software Engineering Institute
	(SEI). This model, called CMMI for Development (CMMI-DEV), provides
	a comprehensive integrated set of guidelines for developing products
	and services.},
  file        = {CMMIProductTeam2010.pdf:files\\CMMIProductTeam2010.pdf:PDF},
  owner       = {hilrob},
  timestamp   = {2013.11.24},
}

@InCollection{Coenen1993,
  author    = {Coenen, Jos and Hooman, Jozef},
  title     = {{P}arameterized {S}emantics for {F}ault {T}olerant {R}eal-{T}ime {S}ystems},
  booktitle = {Formal Techniques in Real-Time and Fault-Tolerant Systems},
  year      = {1993},
  editor    = {Vytopil, Jan},
  language  = {English},
  volume    = {221},
  series    = {The Springer International Series in Engineering and Computer Science},
  publisher = {Springer US},
  isbn      = {978-1-4613-6414-6},
  pages     = {51--78},
  doi       = {10.1007/978-1-4615-3220-0},
  url       = {http://dx.doi.org/10.1007/978-1-4615-3220-0_3},
  groups    = {Formale Methoden},
  owner     = {hilrob},
  timestamp = {2014.05.05},
}

@InProceedings{Cordes2010,
  author    = {Cordes, D. and Marwedel, P. and Mallik, A.},
  title     = {{A}utomatic parallelization of embedded software using hierarchical task graphs and integer linear programming},
  booktitle = {Hardware/Software Codesign and System Synthesis (CODES+ISSS), 2010 IEEE/ACM/IFIP International Conference on},
  year      = {2010},
  month     = oct,
  pages     = {267--276},
  abstract  = {The last years have shown that there is no way to disregard the advantages
	provided by multiprocessor System-on-Chip (MPSoC) architectures in
	the embedded systems domain. Using multiple cores in a single system
	enables to close the gap between energy consumption, problems concerning
	heat dissipation, and computational power. Nevertheless, these benefits
	do not come for free. New challenges arise, if existing applications
	have to be ported to these multiprocessor platforms. One of the most
	ambitious tasks is to extract efficient parallelism from these existing
	sequential applications. Hence, many parallelization tools have been
	developed, most of them are extracting as much parallelism as possible,
	which is in general not the best choice for embedded systems with
	their limitations in hardware and software support. In contrast to
	previous approaches, we present a new automatic parallelization tool,
	tailored to the particular requirements of the resource constrained
	embedded systems. Therefore, this paper presents an algorithm which
	automatically steers the granularity of the generated tasks, with
	respect to architectural requirements and the overall execution time
	reduction. For this purpose, we exploit hierarchical task graphs
	to simplify a new integer linear programming based approach in order
	to split up sequential programs in an efficient way. Results on real-life
	benchmarks have shown that the presented approach is able to speed
	sequential applications up by a factor of up to 3.7 on a four core
	MPSoC architecture.},
  file      = {Cordes2010.pdf:files\\Cordes2010.pdf:PDF},
  groups    = {Parallel Programming Models},
  keywords  = {embedded systems;integer programming;linear programming;microprocessor chips;multiprocessing systems;parallel architectures;power aware computing;system-on-chip;automatic parallelization tool;computational power;embedded software;energy consumption;heat dissipation;hierarchical task graphs;integer linear programming;multiple cores;multiprocessor system-on-chip architectures;sequential programs;Computer architecture;Embedded systems;Equations;Hardware;Integer linear programming;Mathematical model;Parallel processing;Automatic Parallelization;Embedded Software;Hierarchical Task Graph;Integer Linear Programming},
  owner     = {hilrob},
  timestamp = {2014.04.28},
}

@Article{Cristian1985,
  author    = {Cristian, F.},
  title     = {{A} {R}igorous {A}pproach to {F}ault-{T}olerant {P}rogramming},
  journal   = {Software Engineering, IEEE Transactions on},
  year      = {1985},
  volume    = {SE-11},
  number    = {1},
  month     = jan,
  pages     = {23--31},
  issn      = {0098-5589},
  doi       = {10.1109/TSE.1985.231534},
  abstract  = {The design of programs that are tolerant of hardware fault occurrences
	and processor crashes is investigated. Using a stable storage management
	system as a running example, a new approach is suggested for specifying,
	understanding, and verifying the correctness of fault-tolerant software.
	The approach extends previously developed axiomatic reasoning methods
	to the design of fault-tolerant systems by modeling faults as being
	operations that are performed at random time intervals on any computing
	system by the system's adverse environment.},
  file      = {Cristian1985.pdf:files\\Cristian1985.pdf:PDF},
  groups    = {Formale Methoden},
  keywords  = {Availability;correctness;fault-tolerance;programming logic;reliability;stochastic modeling;Availability;Computer crashes;Design methodology;Fault tolerance;Fault tolerant systems;Hardware;Logic programming;Software systems;Stochastic processes;Stochastic systems;Availability;correctness;fault-tolerance;programming logic;reliability;stochastic modeling},
  owner     = {hilrob},
  timestamp = {2014.05.05},
}

@InProceedings{Cullmann2010,
  author    = {Christoph Cullmann and Christian Ferdinand and Gernot Gebhard and Daniel Grund and Claire Maiza (Burguière) and Jan Reineke and Benoît Triquet and Reinhard Wilhelm},
  title     = {{P}redictability {C}onsiderations in the {D}esign of {M}ulti-{C}ore {E}mbedded {S}ystems},
  booktitle = {Proceedings of ERTSS 2010},
  year      = {2010},
  file      = {Cullmann2010.pdf:files\\Cullmann2010.pdf:PDF},
  groups    = {WCET},
  owner     = {hilrob},
  timestamp = {2014.01.14},
}

@InProceedings{Dally2001,
  author        = {Dally, William J. and Towles, Brian},
  title         = {{R}oute {P}ackets, {N}ot {W}ires: {O}n-{C}hip {I}nterconnection {N}etworks},
  booktitle     = {Proceedings of the 38th conference on Design automation - DAC '01},
  year          = {2001},
  publisher     = {ACM Press},
  isbn          = {1581132972},
  pages         = {684--689},
  doi           = {10.1145/378239.379048},
  url           = {http://portal.acm.org/citation.cfm?doid=378239.379048},
  abstract      = {{U}sing on-chip interconnection networks in place of ad-hoc glo-bal
	wiring structures the top level wires on a chip and facilitates modular
	design. {W}ith this approach, system modules (processors, memories,
	peripherals, etc...) communicate by sending packets to one another
	over the network. {T}he structured network wiring gives well-controlled
	electrical parameters that eliminate timing iterations and enable
	the use of high-performance circuits to reduce latency and increase
	bandwidth. {T}he area overhead required to implement an on-chip network
	is modest, we estimate 6.6\%. {T}his paper introduces the concept
	of on-chip networks, sketches a simple network, and discusses some
	challenges in the architecture and design of these networks.},
  address       = {New York, New York, USA},
  file          = {Dally2001.pdf:files\\Dally2001.pdf:PDF},
  keywords      = {MULTI-CORE,NOC,ON-CHIP-INTERCONNECT},
  mendeley-tags = {MULTI-CORE,NOC,ON-CHIP-INTERCONNECT},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.28},
}

@InProceedings{Damm2006,
  author    = {Damm, W. and Metzner, A. and Eisenbrand, F. and Shmonin, G. and Wilhelm, R. and Winkel, S.},
  title     = {{M}apping {T}ask-{G}raphs on {D}istributed {ECU} {N}etworks: {E}fficient {A}lgorithms for {F}easibility and {O}ptimality},
  booktitle = {Embedded and Real-Time Computing Systems and Applications, 2006. Proceedings. 12th IEEE International Conference on},
  year      = {2006},
  pages     = {87--90},
  doi       = {10.1109/RTCSA.2006.42},
  abstract  = {This mapping problem has to be solved in many application scenarios.
	In the automotive industry, for example, the implementation of car
	functions involves distributed task sets running on multiple electronic
	control units (ECU) with bus-based inter-task communication, a problem
	we consider in this paper. Our approach is based on mixed integer
	linear programming (MILP). MILP is concerned with optimizing a linear
	function subject to a set of linear constraints where some variables
	are required to be integer. The current state-of-the art method to
	solve integer programs is the branch-and-cut (B&C) algorithm and
	several industrial strength solvers are available. We describe a
	MILP-model for the mapping problem. Handling this model over to a
	general MILP-solver does not yield satisfactory results in terms
	of running time. To make the model more efficient we use the above
	ingredients: we incorporate a primal heuristic, strengthen the model
	with further inequalities and generate on-demand cutting planes,
	which violate the current fractional solution. These routines drastically
	speed up the solution time},
  file      = {Damm2006.pdf:files\\Damm2006.pdf:PDF},
  groups    = {Software Deployment},
  issn      = {1533-2306},
  keywords  = {distributed algorithms;graph theory;integer programming;linear programming;processor scheduling;MILP;branch-and-cut algorithm;bus-based inter-task communication;distributed ECU networks;linear constraints;mapping problem;mixed integer linear programming;multiple electronic control units;Art;Automotive engineering;Communication industry;Communication system control;Constraint optimization;Electric variables control;Electronics industry;Industrial control;Industrial electronics;Mixed integer linear programming},
  owner     = {hilrob},
  timestamp = {2014.01.13},
}

@InBook{David2010,
  author        = {David, Alexandre and Illum, Jacob and Larsen, Kim G. and Skou, Arne},
  title         = {{M}odel-{B}ased {F}ramework for {S}chedulability {A}nalysis {U}sing {UPPAAL} 4.1},
  booktitle     = {Model-Based Design for Embedded Systems},
  year          = {2010},
  publisher     = {CRC Press},
  pages         = {93--119},
  url           = {http://www.cs.ru.nl/\~{}fvaan/PC/chapter.pdf},
  file          = {David2010.pdf:files\\David2010.pdf:PDF},
  keywords      = {ANALYSIS,FORMAL METHODS,MODEL CHECKING,MODEL-BASED,MODEL-BASED DESIGN,SCHEDULABILITY ANALYSIS,SCHEDULING,THEORY,UPPAAL},
  mendeley-tags = {ANALYSIS,FORMAL METHODS,MODEL CHECKING,MODEL-BASED,MODEL-BASED DESIGN,SCHEDULABILITY ANALYSIS,SCHEDULING,THEORY,UPPAAL},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@InProceedings{Deng2006,
  author    = {Deng, Gan and Schmidt, Douglas C. and Gokhale, Aniruddha},
  title     = {{A}ddressing crosscutting deployment and configuration concerns of distributed real-time and embedded systems via aspect-oriented \& model-driven software development},
  booktitle = {Proceedings of the 28th international conference on Software engineering},
  year      = {2006},
  series    = {ICSE '06},
  publisher = {ACM},
  location  = {Shanghai, China},
  isbn      = {1-59593-375-1},
  pages     = {811--814},
  doi       = {10.1145/1134285.1134421},
  url       = {http://doi.acm.org/10.1145/1134285.1134421},
  acmid     = {1134421},
  address   = {New York, NY, USA},
  file      = {Deng2006.pdf:files\\Deng2006.pdf:PDF},
  groups    = {Systems Engineering, Software Deployment},
  keywords  = {component middleware, deployment and donfiguration, model-driven development, quality-of-service},
  numpages  = {4},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2012.11.09},
}

@Article{Denninger2013,
  author    = {Denninger, Oliver and Padberg, Frank},
  title     = {{M}ulticore-{S}oftwarefehler im {V}isier: {A}utomatische {F}ehlererkennung in {E}ntwürfen parelleler {P}rogramme},
  journal   = {OBJEKTspektrum - OOP 2013 Special},
  year      = {2013},
  volume    = {1},
  month     = jan,
  pages     = {72--77},
  url       = {http://www.sigs-datacom.de/fileadmin/user_upload/zeitschriften/os/2013/01/padberg_denninger_OS_01_13_ry45.pdf},
  abstract  = {Wie scheibt man parallele Programme, ohne dabei Wettlauf-Situationen
	einzubauen? Solche Fehler sind beim Testen schwer zu finden und treiben
	die Entwicklungskosten hoch. Dieser Artikel beschreibt ein neues
	Verfahren aus der Forschung, um Nebenläufigkeitsfehler möglichst
	frühzeitig und automatisch zu erkennen. Das Verfahren erzeugt aus
	UML-Entwurfsdiagrammen eine formale Spezifikation der parallelen
	Struktur der Software und erkennt darin typische Fehlermuster. Der
	Ansatz hilft dem Entwickler in der Praxis, Nebenläufigkeitsfehler
	zu vermeiden, noch bevor sie zu Code werden.},
  file      = {Denninger2013.pdf:files\\Denninger2013.pdf:PDF},
  groups    = {Formale Methoden, Parallel Programming Models, Software Modellierung},
  keywords  = {MULTICORE, PARALLEL PROGRAM,},
  owner     = {hilrob},
  quality   = {1},
  read      = {next},
  timestamp = {2013.01.08},
}

@Misc{MIL-STD-499B,
  author    = {{Department of Defense}},
  title     = {{MIL}-{STD} 499{B} ({D}raft)},
  year      = {1994},
  month     = may,
  groups    = {Standards & Normen},
  owner     = {hilrob},
  timestamp = {2014.04.16},
}

@Misc{UPPAAL,
  author       = {{Department of Information Technology at Uppsala University} and {Department of Computer Science at Aalborg University}},
  title        = {{UPPAAL} is an integrated tool environment for modeling, validation and verification of real-time systems modeled as networks of timed automata, extended with data types.},
  year         = {2013},
  howpublished = {http://www.uppaal.org/},
  month        = jun,
  url          = {http://www.uppaal.org/},
  groups       = {Tools},
  owner        = {hilrob},
  timestamp    = {2013.06.20},
}

@Article{Derler2012,
  author    = {Derler, P. and Lee, E.A. and Vincentelli, A.S.},
  title     = {{M}odeling {C}yber-{P}hysical {S}ystems},
  journal   = {Proceedings of the IEEE},
  year      = {2012},
  volume    = {100},
  number    = {1},
  month     = jan,
  pages     = {13--28},
  issn      = {0018-9219},
  doi       = {10.1109/JPROC.2011.2160929},
  url       = {http://chess.eecs.berkeley.edu/pubs/843.html},
  abstract  = {This paper focuses on the challenges of modeling cyber-physical systems
	(CPSs) that arise from the intrinsic heterogeneity, concurrency,
	and sensitivity to timing of such systems. It uses a portion of an
	aircraft vehicle management system (VMS), specifically the fuel management
	subsystem, to illustrate the challenges, and then discusses technologies
	that at least partially address the challenges. Specific technologies
	described include hybrid system modeling and simulation, concurrent
	and heterogeneous models of computation, the use of domain-specific
	ontologies to enhance modularity, and the joint modeling of functionality
	and implementation architectures.},
  groups    = {Cyber-Physical Systems, (RT-) Embedded Systems, Methodik, Formale Methoden, Parallel Programming Models},
  keywords  = {CPS model;aircraft vehicle management system;concurrent model;cyber-physical system model;domain specific ontologies;fuel management subsystem;heterogeneous model;hybrid system modeling;hybrid system simulation;intrinsic heterogeneity;aerospace computing;aircraft;fuel systems;ontologies (artificial intelligence);},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2011.10.23},
}

@PhdThesis{Devi2006,
  author    = {Devi, Umamaheswari C.},
  title     = {{S}oft real-time scheduling on multiprocessors},
  year      = {2006},
  type      = {Dissertation},
  pages     = {396},
  url       = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.66.8200\&amp;rep=rep1\&amp;type=pdf},
  booktitle = {Analysis},
  file      = {Devi2006.pdf:files\\Devi2006.pdf:PDF},
  owner     = {hilrob},
  publisher = {Citeseer},
  read      = {done},
  school    = {University of North Carolina at Chapel Hill},
  timestamp = {2010.05.27},
}

@InProceedings{Dick1998,
  author    = {Dick, R.P. and Rhodes, D.L. and Wolf, W.},
  title     = {{TGFF}: task graphs for free},
  booktitle = {Hardware/Software Codesign, 1998. (CODES/CASHE '98) Proceedings of the Sixth International Workshop on},
  year      = {1998},
  month     = {15-18},
  pages     = {97--101},
  doi       = {10.1109/HSC.1998.666245},
  url       = {http://ieeexplore.ieee.org/search/srchabstract.jsp?tp=&arnumber=666245},
  abstract  = {{W}e present a user-controllable, general-purpose, pseudorandom task
	graph generator called {T}ask {G}raphs {F}or {F}ree ({TGFF}). {TGFF}
	creates problem instances for use in allocation and scheduling research.
	{I}t has the ability to generate independent tasks as well as task
	sets which are composed of partially ordered task graphs. {A} complete
	description of a scheduling problem instance is created, including
	attributes for processors, communication resources, tasks, and inter-task
	communication. {T}he user may parametrically control the correlations
	between attributes. {S}haring {TGFF}'s parameter settings allows
	researchers to easily reproduce the examples used by others, regardless
	of the platform on which {TGFF} is run.},
  file      = {Dick1998.pdf:files\\Dick1998.pdf:PDF},
  groups    = {(RT-) Scheduling, Software Modellierung},
  issn      = {1092-6100},
  keywords  = {TGFF;TASK GRAPHS FOR FREE;ALLOCATION;COMMUNICATION RESOURCES;PSEUDORANDOM TASK GRAPH GENERATOR;SCHEDULING;GRAPHS;PROCESSOR SCHEDULING;},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.07.19},
}

@InProceedings{DiVito1999,
  author    = {Di Vito, B.L.},
  title     = {{A} model of cooperative noninterference for integrated modular avionics},
  booktitle = {Dependable Computing for Critical Applications 7, 1999},
  year      = {1999},
  month     = nov,
  pages     = {269--286},
  doi       = {10.1109/DCFTS.1999.814300},
  abstract  = {{T}he aviation industry is gradually moving toward the use of integrated
	modular avionics ({IMA}) for civilian transport aircraft, potentially
	leading to multiple avionics functions hosted on each hardware platform.
	{A}n important concern for {IMA} is ensuring that applications are
	safely partitioned so they cannot interfere with one another. {O}n
	the other hand, such applications routinely cooperate, so strict
	separation cannot be enforced. {W}e present a formal model for demonstrating
	the absence of unintentional interference in the presence of controlled
	information sharing among cooperating applications. {T}he formalization
	draws on the techniques developed for computer security models based
	on noninterference concepts. {E}xcerpts from the model formalization
	expressed in the language of {SRI}'s {P}rototype {V}erification {S}ystem
	({PVS}) are included},
  file      = {DiVito1999.pdf:files\\DiVito1999.pdf:PDF},
  groups    = {Domänen-spezifisch, Konsolidierung & Integration, Formale Methoden, Software Modellierung, Virtualisierung & Partitionierung},
  keywords  = {IMA;PVS;Prototype Verification System;aviation industry;civilian transport aircraft;computer security models;controlled information sharing;cooperating applications;cooperative noninterference;formal model;integrated modular avionics;model formalization;multiple avionics functions;noninterference concepts;strict separation;unintentional interference;aircraft computers;formal verification;groupware;security of data;},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.07.29},
}

@TechReport{DiVito1998,
  author      = {Ben L. {Di Vito}},
  title       = {{A} {F}ormal {M}odel of {P}artitioning for {I}ntegrated {M}odular {A}vionics},
  institution = {NASA Langley Research Center},
  year        = {1998},
  type        = {NASA Contractor Report},
  number      = {CR-1998-208703},
  month       = aug,
  file        = {DiVito1998.pdf:files\\DiVito1998.pdf:PDF},
  groups      = {Domänen-spezifisch, Formale Methoden, Software Modellierung, Virtualisierung & Partitionierung},
  owner       = {hilrob},
  read        = {next},
  timestamp   = {2010.07.28},
}

@Book{Domeika2008,
  author        = {Domeika, Max and Roumeliotis, Rachel},
  title         = {{S}oftware {D}evelopment for {E}mbedded {M}ulti-{C}ore {S}ystems},
  year          = {2008},
  publisher     = {Elsevier (Newnes)},
  isbn          = {9780750685399},
  pages         = {440},
  abstract      = {{T}he multicore revolution has reached the deployment stage in embedded
	systems ranging from small ultramobile devices to large telecommunication
	servers. {T}he transition from single to multicore processors, motivated
	by the need to increase performance while conserving power, has placed
	great responsibility on the shoulders of software engineers. {I}n
	this new embedded multicore era, the toughest task is the development
	of code to support more sophisticated systems. {T}his book provides
	embedded engineers with solid grounding in the skills required to
	develop software targeting multicore processors. {W}ithin the text,
	the author undertakes an in-depth exploration of performance analysis,
	and a close-up look at the tools of the trade. {B}oth general multicore
	design principles and processor-specific optimization techniques
	are revealed. {D}etailed coverage of critical issues for multicore
	employment within embedded systems is provided, including the {T}hreading
	{D}evelopment {C}ycle, with discussions of analysis, design, development,
	debugging, and performance tuning of threaded applications. {S}oftware
	development techniques engendering optimal mobility and energy efficiency
	are highlighted through multiple case studies, which provide practical
	how-to advice on implementing the latest multicore processors. {F}inally,
	future trends are discussed, including terascale, speculative multithreading,
	transactional memory, interconnects, and the software-specific implications
	of these looming architectural developments. {T}able of {C}ontents
	{C}hapter 1 - {I}ntroduction {C}hapter 2 - {B}asic {S}ystem and {P}rocessor
	{A}rchitecture {C}hapter 3 - {M}ulti-core {P}rocessors \& {E}mbedded
	{C}hapter 4 {M}oving {T}o {M}ulti-core {I}ntel {A}rchitecture {C}hapter
	5 - {S}calar {O}ptimization \& {U}sability {C}hapter 6 - {P}arallel
	{O}ptimization {U}sing {T}hreads {C}hapter 7 - {C}ase {S}tudy: {D}ata
	{D}ecomposition {C}hapter 8 - {C}ase {S}tudy: {F}unctional {D}ecomposition
	{C}hapter 9 - {V}irtualization \& {P}artitioning {C}hapter 10 - {G}etting
	{R}eady {F}or {L}ow {P}ower {I}ntel {A}rchitecture {C}hapter 11 -
	{S}ummary, {T}rends, and {C}onclusions {A}ppendix {I} {G}lossary
	{R}eferences },
  file          = {Domeika2008.pdf:files\\Domeika2008.pdf:PDF},
  groups        = {Books},
  keywords      = {BASICS,CASE-STUDY,EMBEDDED SYSTEMS,INTEL,INTRODUCTION,MULTI-CORE,OPTIMIZATION,OVERVIEW,PARALLELIZATION,PERFORMANCE ANALYSIS,SOFTWARE DESIGN,SOFTWARE DEVELOPMENT,TERRASCALE},
  mendeley-tags = {BASICS,CASE-STUDY,EMBEDDED SYSTEMS,INTEL,INTRODUCTION,MULTI-CORE,OPTIMIZATION,OVERVIEW,PARALLELIZATION,PERFORMANCE ANALYSIS,SOFTWARE DESIGN,SOFTWARE DEVELOPMENT,TERRASCALE},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Article{Duncan1990,
  author    = {Duncan, R.},
  title     = {{A} survey of parallel computer architectures},
  journal   = {Computer},
  year      = {1990},
  volume    = {23},
  number    = {2},
  month     = feb,
  pages     = {5--16},
  issn      = {0018-9162},
  doi       = {10.1109/2.44900},
  abstract  = {An attempt is made to place recent architectural innovations in the
	broader context of parallel architecture development by surveying
	the fundamentals of both newer and more established parallel computer
	architectures and by placing these architectural alternatives in
	a coherent framework. The primary emphasis is on architectural constructs
	rather than specific parallel machines. Three categories of architecture
	are defined and discussed: synchronous architectures, comprising
	vector, SIMD (single-instruction-stream, multiple-data-stream) and
	systolic machines; MIMD (multiple-instruction-stream, multiple-data-stream)
	with either distributed or shared memory; and MIMD-based paradigms,
	comprising MIMD/SIMD hybrid, dataflow, reduction, and wavefront types.<>},
  file      = {Duncan1990.pdf:files\\Duncan1990.pdf:PDF},
  groups    = {Multi-Core Allgemein, Parallel Programming Models},
  keywords  = {cellular arrays;parallel architectures;parallel machines;pipeline processing;MIMD-based paradigms;MIMD/SIMD hybrid;SIMD;architectural alternatives;architectural constructs;architectural innovations;coherent framework;dataflow;multiple-data-stream;multiple-instruction-stream;parallel architecture development;parallel computer architectures;reduction;shared memory;single-instruction-stream;synchronous architectures;systolic machines;vector;wavefront types;Central Processing Unit;Computer architecture;Concurrent computing;Hardware;Hypercubes;Parallel architectures;Parallel processing;Parallel programming;Taxonomy;Vector processors},
  owner     = {hilrob},
  timestamp = {2014.02.23},
}

@InProceedings{Dutertre1999,
  author    = {Dutertre, B. and Stavridou, V.},
  title     = {{A} model of noninterference for integrating mixed-criticality software components},
  booktitle = {Dependable Computing for Critical Applications 7, 1999},
  year      = {1999},
  month     = nov,
  pages     = {301--316},
  doi       = {10.1109/DCFTS.1999.814302},
  abstract  = {{T}he paper examines the problem of safely integrating independent
	software components of different criticality levels in a single system.
	{W}e examine the risks of interference between independent components
	which share common hardware resources. {W}e propose a definition
	of safe integration in which only a limited form of interference
	is tolerated, namely a bounded performance degradation. {W}e show
	how the definition can be applied to systems modeled as input-output
	automata, and we compare our model to other notions of noninterference
	and related concepts},
  file      = {Dutertre1999.pdf:files\\Dutertre1999.pdf:PDF},
  groups    = {Domänen-spezifisch, Konsolidierung & Integration, Formale Methoden, Software Modellierung, Virtualisierung & Partitionierung},
  keywords  = {bounded performance degradation;common hardware resources;criticality levels;independent components;independent software components;input-output automata;mixed-criticality software components;noninterference model;safe integration;computer architecture;data integrity;finite state machines;safety-critical software;software quality;},
  owner     = {hilrob},
  read      = {, done},
  review    = {Sehr gutes Papier - sinnvoll zu lesen!},
  timestamp = {2010.07.29},
}

@MastersThesis{Dziedzic2008,
  author        = {Dziedzic, Peter},
  title         = {{U}mstellungskonzept für bestehenden {C}ode von 32-{B}it {S}inglecore auf 64-{B}it und {M}ulticore {CPU} {A}rchitekturen},
  year          = {2008},
  type          = {Diploma thesis},
  pages         = {112},
  abstract      = {{E}very up-to-date processor consists of more than one cpu-core and
	supports the 64-bit mode. {N}ormal standard software only uses one
	cpu-core even when more cpu-cores are available. {I}t also doesn't
	use the 64-bit mode. {T}he multicore-architecture has the advantage
	that it is possible to execute calculations faster, because it's
	possible to calculate parallel on all available cpu-cores. {T}he
	64-bit-architecture has the advantage that it is possible to address
	more than 4{GB} memory. {T}he 64-bit-architecture has also the advantage
	that it uses 64-bit registers. {T}herefore it is possible to calculate
	with very big integer values or to calculate faster with the floating
	point arithmetic. {B}ecause {C}arl {Z}eiss {IMT}s measurement software,
	which is named "{C}alypso - {V}isual {M}etrology", also runs only
	in the 32-bit mode and only uses one core, even where more cores
	are available, it is the aim of this thesis to develop a migration
	concept for the measurement software. {A} migration is reasonable
	for {C}arl {Z}eiss {IMT} because after the migration it will be possible
	to calculate calculations faster than now. {I}t will also be possible
	to address a bigger address space. {T}herefore it will be possible
	to load bigger and more exact {CAD}-models into the {C}alypso measurement
	software. {T}he migration concept has to concern the programming
	languages which are used for the development of {C}alypso. {T}hese
	programming languages are {S}malltalk, {C}/{C}++ and {C}\#.},
  annote        = {Eine ganz nette Diplomarbeit, sie gibt zun\"{a}chst einen \"{U}berblick \"{u}ber MultiCore Architekturen und 64-Bit (meist aus Rauber2008 genommen) und widmet sich dann dem konkreten Thema: -> Migration einer Anwendung von Smalltalk auf 64Bit Multicore Gemacht wird das ganze, in dem die relevanten Code-Teile in C/C++ neu implementiert werden und dann gegen OpenMP verlinkt werden. -> Parallelit\"{a}t der FOR Schleife etc. Die Ergebnisse sind nicht bahnbrechend, aber eine kleine \"{U}bersicht als Vergleich zu den parallelen Programmierkonzepten ist enthalten (Intel TBB, OpenMP, MPI, PThreads, QTConcurrencyFramework).},
  file          = {Dziedzic2008.pdf:files\\Dziedzic2008.pdf:PDF},
  keywords      = {64BIT,C,C\#,C++,CASE-STUDY,CONCEPT,MIGRATION,MULTI-CORE,OPENMP,PARALLELIZATION,SMALLTALK},
  mendeley-tags = {64BIT,C,C\#,C++,CASE-STUDY,CONCEPT,MIGRATION,MULTI-CORE,OPENMP,PARALLELIZATION,SMALLTALK},
  owner         = {hilrob},
  read          = {done},
  school        = {Hochschule Aalen},
  timestamp     = {2010.05.27},
}

@TechReport{Easwaran2009,
  author      = {Easwaran, Arvind and Lee, Insup and Sokolsky, Oleg and Vestal, Steve},
  title       = {{A} {C}ompositional {F}ramework for {A}vionics ({ARINC}-653) {S}ystems},
  institution = {University of Pennsylvania Department of Computer and Information Science},
  year        = {2009},
  type        = {Technical Report},
  number      = {MS-CIS-09-04},
  url         = {http://repository.upenn.edu/cis_reports/898/},
  abstract    = {{C}yber-physical systems ({CPS}s) are becoming all-pervasive, and
	due to increasing complexity they are designed using component-based
	approaches. {T}emporal constraints of such complex {CPS}s can then
	be modeled using hierarchical scheduling frameworks. {I}n this paper,
	we consider one such avionics {CPS} described by {ARINC} specification
	653-2. {T}he real-time workload in this system comprises of partitions,
	where each partition consists of one or more processes. {P}rocesses
	incur blocking and preemption overheads, and can communicate with
	other processes in the system. {I}n this work, we develop techniques
	for automated scheduling of such partitions. {A}t present, system
	designers manually schedule partitions based on interactions they
	have with application vendors. {T}his approach is not only time consuming,
	but can also result in under utilization of resources. {H}ence, in
	this work we propose compositional analysis based scheduling techniques
	for partitions.},
  file        = {Easwaran2009.pdf:files\\Easwaran2009.pdf:PDF},
  groups      = {Domänen-spezifisch, (RT-) Scheduling, Virtualisierung & Partitionierung},
  owner       = {hilrob},
  read        = {unread},
  timestamp   = {2011.05.13},
}

@Article{Ebert2009,
  author    = {Ebert, Christof and Jones, Capers},
  title     = {{E}mbedded {S}oftware: {F}acts, {F}igures, and {F}uture},
  journal   = {Computer},
  year      = {2009},
  volume    = {42},
  issue     = {4},
  month     = apr,
  pages     = {42--52},
  issn      = {0018-9162},
  doi       = {10.1109/MC.2009.118},
  url       = {http://dl.acm.org/citation.cfm?id=1550393.1550433},
  acmid     = {1550433},
  address   = {Los Alamitos, CA, USA},
  groups    = {Domänen-spezifisch},
  keywords  = {Embedded software, Software measurement, Software process, Function points, Estimation, Quality control, CMMI},
  numpages  = {11},
  owner     = {hilrob},
  publisher = {IEEE Computer Society Press},
  read      = {unread},
  timestamp = {2011.12.08},
}

@Misc{Ebert2011,
  author       = {Ebert, Ralf},
  title        = {{E}clipse {RCP} -- {E}ntwicklung von {D}esktop-{A}nwendungen mit der {E}clipse {R}ich {C}lient {P}latform 3.7},
  year         = {2011},
  howpublished = {online},
  month        = aug,
  url          = {http://www.ralfebert.de/eclipse_rcp/EclipseRCP.pdf},
  file         = {Ebert2011.pdf:files\\Ebert2011.pdf:PDF},
  groups       = {Books},
  keywords     = {ECLIPSE;RCP;JAVA;PLUGIN;},
  owner        = {hilrob},
  timestamp    = {2013.04.06},
}

@InProceedings{Edwards2007,
  author    = {Edwards, Stephen A. and Lee, Edward A.},
  title     = {{T}he case for the precision timed ({PRET}) machine},
  booktitle = {DAC '07: Proceedings of the 44th annual Design Automation Conference},
  year      = {2007},
  publisher = {ACM},
  location  = {San Diego, California},
  isbn      = {978-1-59593-627-1},
  pages     = {264--265},
  doi       = {http://doi.acm.org/10.1145/1278480.1278545},
  abstract  = {{P}atterson and {D}itzel [12] did not invent reduced instruction set
	computers ({RISC}) in 1980. {E}arlier computers all had reduced instruction
	sets. {I}nstead, they argued that trends in computer architecture
	had gotten off the sweet spot, and that by dropping back a few years
	and forking a new version of architectures, leveraging what had been
	learned, they could get better computers by employing simpler instruction
	sets.},
  address   = {New York, NY, USA},
  file      = {Edwards2007.pdf:files\\Edwards2007.pdf:PDF},
  groups    = {Domänen-spezifisch, (RT-) Embedded Systems, (RT-) Scheduling, WCET},
  keywords  = {REAL-TIME; REAL-TIME OPERATING SYSTEM; AVIONICS; EMBEDDED SYSTEM; OVERVIEW;},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.08.25},
}

@Article{Efftinge2012,
  author     = {Efftinge, Sven and Eysholdt, Moritz and K\"{o}hnlein, Jan and Zarnekow, Sebastian and von Massow, Robert and Hasselbring, Wilhelm and Hanus, Michael},
  title      = {{X}base: {I}mplementing {D}omain-specific {L}anguages for {J}ava},
  journal    = {SIGPLAN Not.},
  year       = {2012},
  volume     = {48},
  number     = {3},
  month      = sep,
  pages      = {112--121},
  issn       = {0362-1340},
  doi        = {10.1145/2480361.2371419},
  url        = {http://doi.acm.org/10.1145/2480361.2371419},
  acmid      = {2371419},
  address    = {New York, NY, USA},
  groups     = {Tools},
  issue_date = {March 2013},
  keywords   = {domain-specific languages, language inheritance, object-oriented programming},
  numpages   = {10},
  owner      = {hilrob},
  publisher  = {ACM},
  timestamp  = {2014.10.06},
}

@InProceedings{Efftinge2006,
  author    = {Efftinge, Sven and Völter, Markus},
  title     = {o{AW} x{T}ext: {A} framework for textual {DSL}s},
  booktitle = {Eclipsecon Summit Europe 2006},
  year      = {2006},
  url       = {http://www.eclipse.org/Xtext},
  urldate   = {01.01.2012},
  added-at  = {2012-11-30T15:53:14.000+0100},
  biburl    = {http://www.bibsonomy.org/bibtex/20b331ecefde609ce8a99a5f893dc6f46/ideeq},
  groups    = {Tools},
  interhash = {3f0e00b3801abe8b29afd8886bdea1b2},
  intrahash = {0b331ecefde609ce8a99a5f893dc6f46},
  keywords  = {transformation},
  owner     = {hilrob},
  timestamp = {2012-11-30T15:53:14.000+0100},
}

@Misc{EIA-632,
  author       = {{Electronic Industries Alliance (EIA)}},
  title        = {{ANSI}/{EIA}-632 {S}tandard, {P}rocesses for {E}ngineering a {S}ystem},
  year         = {1998},
  organization = {EIA},
  groups       = {Standards & Normen},
  owner        = {hilrob},
  timestamp    = {2014.04.22},
}

@PhdThesis{Ermedahl2003,
  author    = {Andreas Ermedahl},
  title     = {{A} {M}odular {T}ool {A}rchitecture for {W}orst-{C}ase {E}xecution {T}ime {A}nalysis},
  year      = {2003},
  month     = jun,
  url       = {http://www.mrtc.mdh.se/index.php?choice=publications&id=0570},
  file      = {Ermedahl2003.pdf:files\\Ermedahl2003.pdf:PDF},
  groups    = {WCET},
  owner     = {hilrob},
  read      = {next},
  school    = {Uppsala University: Acta Universitatis Upsaliensis},
  timestamp = {2010.08.26},
}

@Misc{EsterelScadeSuite,
  author       = {{ESTEREL Technologies}},
  title        = {{SCADE} {S}uite\textregistered{}},
  howpublished = {online},
  url          = {http://www.esterel-technologies.com/products/scade-suite/},
  groups       = {Tools},
  owner        = {hilrob},
  timestamp    = {2014.04.25},
}

@Misc{EsterelScadeSystem,
  author       = {{ESTEREL Technologies}},
  title        = {{SCADE} {S}ystem 2.0},
  howpublished = {online},
  url          = {http://www.esterel-technologies.com/products/scade-system/},
  groups       = {Tools},
  owner        = {hilrob},
  timestamp    = {2014.04.25},
}

@Misc{EASA-CS-25,
  author    = {{European Aviation Safety Agency (EASA)}},
  title     = {{C}ertification {S}pecifications for {L}arge {A}eroplanes ({CS}-25)},
  year      = {2009},
  month     = jun,
  url       = {https://www.easa.europa.eu/agency-measures/docs/certification-specifications/CS-25/CS-25%20Amendment%206.pdf},
  file      = {EASA-CS-25.pdf:files\\EASA-CS-25.pdf:PDF},
  groups    = {Standards & Normen},
  owner     = {hilrob},
  timestamp = {2013.03.07},
}

@Misc{FAA1988,
  author       = {{Federal Aviation Administration}},
  title        = {{A}dvisory {C}ircular {AC} 25.1309-1{A}: {S}ystem {D}esign and {A}nalysis},
  year         = {1988},
  type         = {Advisory Circular},
  organization = {Federal Aviation Administration},
  month        = jun,
  url          = {http://www.faa.gov/regulations_policies/advisory_circulars/index.cfm/go/document.information/documentID/22680},
  abstract     = {Describes various acceptable means for showing compliance with the
	requirements of section 25.1309(b), (c), and (d) of the Federal Aviation
	Regulations (FAR). These means are intended to provide guidance for
	the experience engineering and operational judgment that must form
	the basis for compliance findings.},
  file         = {FAA1988.pdf:files\\FAA1988.pdf:PDF},
  groups       = {Domänen-spezifisch, Standards & Normen},
  institution  = {Federal Aviation Administration},
  number       = {25.1309-1A},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2013.02.14},
}

@Article{Fedorova2010,
  author     = {Fedorova, Alexandra and Blagodurov, Sergey and Zhuravlev, Sergey},
  title      = {{M}anaging contention for shared resources on multicore processors},
  journal    = {Commun. ACM},
  year       = {2010},
  volume     = {53},
  number     = {2},
  month      = feb,
  pages      = {49--57},
  issn       = {0001-0782},
  doi        = {10.1145/1646353.1646371},
  url        = {http://doi.acm.org/10.1145/1646353.1646371},
  acmid      = {1646371},
  address    = {New York, NY, USA},
  file       = {Fedorova2010.pdf:files\\Fedorova2010.pdf:PDF},
  groups     = {WCET},
  issue_date = {February 2010},
  numpages   = {9},
  owner      = {hilrob},
  publisher  = {ACM},
  read       = {unread},
  timestamp  = {2013.02.04},
}

@Article{Flynn1972,
  author    = {Flynn, M.},
  title     = {{S}ome {C}omputer {O}rganizations and {T}heir {E}ffectiveness},
  journal   = {Computers, IEEE Transactions on},
  year      = {1972},
  volume    = {C-21},
  number    = {9},
  month     = sep,
  pages     = {948--960},
  issn      = {0018-9340},
  doi       = {10.1109/TC.1972.5009071},
  abstract  = {A hierarchical model of computer organizations is developed, based
	on a tree model using request/service type resources as nodes. Two
	aspects of the model are distinguished: logical and physical. General
	parallel- or multiple-stream organizations are examined as to type
	and effectivenessÂ¿especially regarding intrinsic logical difficulties.
	The overlapped simplex processor (SISD) is limited by data dependencies.
	Branching has a particularly degenerative effect. The parallel processors
	[single-instruction stream-multiple-data stream (SIMD)] are analyzed.
	In particular, a nesting type explanation is offered for Minsky's
	conjectureÂ¿the performance of a parallel processor increases as
	log M instead of M (the number of data stream processors). Multiprocessors
	(MIMD) are subjected to a saturation syndrome based on general communications
	lockout. Simplified queuing models indicate that saturation develops
	when the fraction of task time spent locked out (L/E) approaches
	1/n, where n is the number of processors. Resources sharing in multiprocessors
	can be used to avoid several other classic organizational problems.},
  file      = {Flynn1972.pdf:files\\Flynn1972.pdf:PDF},
  groups    = {Multi-Core Allgemein, Parallel Programming Models},
  keywords  = {Automata;Computer aided instruction;Concurrent computing;Parallel processing;Performance evaluation;Time sharing computer systems;Transmission electron microscopy;Computer organization;instruction stream;overlapped;parallel processors;resource hierarchy},
  owner     = {hilrob},
  timestamp = {2014.02.23},
}

@InProceedings{Fohler1999,
  author    = {Gerhard Fohler},
  title     = {{F}lexible {R}eliable {T}iming - {R}eal-{T}ime vs. {R}eliability},
  booktitle = {Keynot Address, 10th European Workshop on Dependable Computing},
  year      = {1999},
  month     = may,
  url       = {http://www.mrtc.mdh.se/index.php?choice=publications&id=0098},
  abstract  = {{T}he design of safety-critical real-time systems has to provide for
	demands on predictability, flexibility, and reliability. {A} number
	of systems have been developed, whose paradigms focus on one of these
	requirements: {T}ime triggered real-time systems provide verifiable
	timing behavior and allow distribution, complex application structures,
	and general requirements. {T}heir benefits are, however, limited
	in changing environments and for applications with not completely
	known characteristics. {I}n these scenarios, event triggered systems
	provide appropriate mechanisms and better efficiency. {F}ault tolerance
	methods provide for reliability requirements, but are often in conflict
	with temporal constraints. {M}any standard practices confront designers
	with an exclusive choice of one paradigm over the other, and consequently
	between temporal determinism or flexibility and reliability, instead
	of allowing a customized selection. {I}n this talk, we will discuss
	relations between determinism, flexibility, and reliability and identify
	tradeoffs. {W}e will show how event triggered methods can be combined
	with time triggered systems to enhance flexibility and enable adaptive
	fault tolerance. {W}ith the discussion of a number of issues for
	interaction between fault tolerance and real-time methods, we will
	demonstrate the combination of seemingly adverse methods, to lay
	a basis for flexible, reliable real-time systems.},
  groups    = {(RT-) Scheduling},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2011.05.13},
}

@PhdThesis{Fohler1994,
  author    = {Gerhard Fohler},
  title     = {{F}lexibility in {S}tatically {S}cheduled {R}eal-{T}ime {S}ystems},
  year      = {1994},
  month     = apr,
  url       = {http://www.mrtc.mdh.se/index.php?choice=publications&id=0286},
  abstract  = {{S}tatic scheduling has been shown to be appropriate for a variety
	of hard real-time systems, mainly due to the verifiable timing behavior
	of the system and the complex task models supported. {I}ts application
	is, however, impeded in systems with changing operational modes and
	critical activities, that arrive infrequently with unknown occurrence
	times. {T}his thesis presents an approach to overcome these shortcomings.
	{I}t addresses static scheduling, illustrated by an algorithm serving
	as case study, and provides concepts to extend the scope of statically
	scheduled systems to deal with mode changes properly and to provide
	for efficient handling of dynamic activities. {M}ode changes are
	performed by switching from one periodically executing static schedule
	to another via a special schedule to prepare for the change. {A}s
	all involved schedules are constructed statically, all actions executing
	the mode change do so deterministically: {G}iven the current mode,
	time, and mode change request, the exact executions during the mode
	change and their completion time are known before run-time. {D}ynamic
	activities are incorporated into static schedules by making use of
	the unused resources and leeways in the schedule. {W}e present mechanisms
	to effectively maintain information about the amount of dynamic activity
	that can be accommodated without impairing the feasible execution
	of statically scheduled tasks. {O}ntop of this service, aperiodic
	tasks can be handled in a very simple way. {W}e furthermore present
	an on-line guarantee algorithm. {A} combined approach integrates
	both methods.},
  file      = {Fohler1994.pdf:files\\Fohler1994.pdf:PDF},
  groups    = {(RT-) Scheduling},
  owner     = {hilrob},
  read      = {unread},
  school    = {Technisch-Naturwissenschaftliche Fakultaet, Technische Universitaet Wien, Austria},
  timestamp = {2011.05.13},
}

@MISC{MUSEPROJECT2013,
  author = {{Fraunhofer FOKUS - System Quality Center}},
  title = {{M}ulticore-{A}rchitektur zur {S}ensor-basierten {P}ositionsverfolgung
	im {W}eltraum},
  howpublished = {online},
  month = jun,
  year = {2013},
  abstract = {Das Projekt MUSE (Multicore-Architektur zur Sensor-basierten Positionsverfolgung
	im Weltraum) will die Positionierung von Raumfahrzeugen verbessern.
	Im Rahmen des Projekts untersucht QUEST, inwieweit modernste Multicore-Prozessoren
	für die Auswertung von Sensordaten im Weltraum geeignet sind und
	wie eine entsprechende Rechnerarchitektur aussehen müsste.
	
	
	Um den Satelliten zielsicher ausrichten zu können, muss der Rechner
	enorme Datenmengen auswerten. Denn bildgebende Sensoren (z. B. Video,
	Infrarot, Radar) nehmen eine Flut von Daten auf, die in Echtzeit
	analysiert werden müssen. Die Herausforderung für die Rechnerarchitektur
	besteht darin, eine hohe Rechenleistung bei gleichzeitiger Fehlertoleranz
	bereitzustellen und dies bei minimalen Anforderungen an Stromversorgung,
	Kühlung, Gewicht und Platz. Die in der Architektur realisierten Fehlertoleranzmechanismen
	müssen sicherstellen, dass sporadische Datenverfälschungen, wie sie
	durch die Weltraumstrahlung entstehen, zuverlässig erkannt und behandelt
	werden. Es muss in jedem Fall ausgeschlossen werden, dass unerkannte
	Fehler zu falschen Steuerbefehlen führen und so eine unkontrollierte
	Bewegung des Raumfahrzeugs hervorrufen. Als Grundlage für die Entwicklung
	der Hochleistungshardware entschieden sich die QUEST-Forscher für
	den neuen Multicore Prozessor P4080 von Freescale. Der P4080 wird
	in der besonders verlustleistungsarmen SOI (Silizium On Insulator)-Technologie
	gefertigt. Diese ist für Raumfahrtanwendungen jedoch nicht nur wegen
	der hohen Energieeffizienz interessant, sondern auch wegen der geringen
	Empfindlichkeit gegenüber Weltraumstrahlung. Darüber hinaus bietet
	der P4080 zusätzlich die Vorteile eines hoch integrierten Embedded-Prozessors.
	Alle wichtigen Funktionen sind bereits on-chip integriert. Um die
	benötigte Robustheit und Sicherheit zu gewährleisten, wollen die
	Softwarespezialisten die acht Prozessorkerne des P4080 nicht nur
	zur Maximierung der Rechenleistung, sondern auch zur Realisierung
	leistungsfähiger Fehlertoleranzmechanismen nutzen. Besonders kritische
	Berechnungen führen die Forscher parallel auf verschiedenen Prozessorkernen
	aus, um die Ergebnisse durch einen sicheren Vergleich überprüfen
	zu können. Hierfür realisieren die Hardwarespezialisten eine Synchronisierungs-
	und Voting-Einheit in einem strahlungstoleranten FPGA-Baustein, die
	redundante Berechnungsergebnisse on-the-fly vergleichen kann.
	
	
	Das Projekt wird von der Raumfahrt-Agentur des Deutschen Zentrums
	für Luft- und Raumfahrt e. V. mit Mitteln des Bundesministeriums
	für Wirtschaft und Technologie gefördert.},
  owner = {hilrob},
  timestamp = {2013.12.18},
  url = {http://www.fokus.fraunhofer.de/go/muse/index.html}
}

@Book{Friedenthal2008,
  author    = {Friedenthal, Sanford and Moore, Alan and Steiner, Rick},
  title     = {{A} {P}ractical {G}uide to {S}ys{ML}: {T}he {S}ystems {M}odeling {L}anguage},
  year      = {2008},
  publisher = {Morgan Kaufmann Publishers Inc.},
  isbn      = {9780123743794},
  pages     = {1--576},
  url       = {http://portal.acm.org/citation.cfm?id=1477660\&coll=Portal\&dl=GUIDE\&CFID=88885906\&CFTOKEN=90355098\#abstract},
  abstract  = {{S}ystems engineers and architects must understand how all the parts
	of a system work together to satisfy its requirements. {S}ys{ML}
	is a general purpose graphical modeling language used to specify,
	analyze, and design systems that may include hardware, software,
	and personnel. {I}t allows engineers to describe how a system interacts
	with its environment, and how its parts must interact to achieve
	the desired system behavior and performance. {T}he {S}ys{ML} model
	provides a shared view of the system, enabling a design team to surface
	issues early and prevent problems that would otherwise delay development
	and degrade design quality. {S}ince {S}ys{ML} is based on {UML},
	it also facilitates integration between systems and software development.
	{S}ys{ML} is now being adopted by companies across a broad range
	of industry, including {A}erospace and {D}efense, {A}utomotive, and
	{IT} {S}ystem {D}evelopers.{T}his book provides a comprehensive and
	practical guide for modeling systems with {S}ys{ML}. {I}t includes
	a full description of the language along with a quick reference guide,
	and shows how the language can be applied to specify, analyze, and
	design systems. {I}t contains examples to help readers understand
	how {S}ys{ML} can be used in practice. {T}he book also includes guidance
	on how an organization or project can transition to model based systems
	engineering using {S}ys{ML}, with considerations for processes, methods,
	tools, and training. - {T}he authoritative guide for understanding
	and applying {S}ys{ML} - {A}uthored by the foremost experts on the
	language - {L}anguage description, examples, and quick reference
	guide included },
  address   = {San Francisco},
  groups    = {Books},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.05.27},
}

@InProceedings{Fuchsen2010,
  author    = {Fuchsen, R.},
  title     = {{H}ow to address certification for multi-core based {IMA} platforms: {C}urrent status and potential solutions},
  booktitle = {Digital Avionics Systems Conference (DASC), 2010 IEEE/AIAA 29th},
  year      = {2010},
  month     = oct,
  pages     = {5.E.3-1 -5.E.3-11},
  doi       = {10.1109/DASC.2010.5655461},
  abstract  = {{I}n modern aircrafts, more and more functions traditionally implemented
	as {L}ine {R}eplaceable {U}nits ({LRU}s) will be hosted by {I}ntegrated
	{M}odular {A}vionics ({IMA}) modules. {A}t the same time new aircraft
	programs will require new safety functions, information services
	and comfort features which will also increase the demand for processing
	performance of {IMA} modules. {T}he traditional approach to provide
	more processing bandwidth was to increase the {CPU} clock frequency,
	increase pseudo-parallel processing on instruction level through
	instruction pipelines and speculative program executions and to increase
	the cache size and number of cache levels. {W}ith today's technology,
	this approach has reached its limit. {I}ncreasing {CPU} frequency
	causes disproportionate power consumption and thermal dissipation
	loss and raises more and more problems due to chip internal and external
	crosstalk, signal delays and reflection. {E}xisting parallelism and
	dependencies on code level prevent further performance improvement
	through parallel execution on instruction level. {T}o further increase
	processor performance, the chip industry has switched to a multi-core
	design for the high performance processors. {T}he development of
	multi-core based high performance {IMA} platforms will be a necessary
	step to reach a larger scale integration on function level. {T}he
	question is, "{C}an a multi-core based platform reach the same level
	of determinism as a single core platform and can this be demonstrated?"
	{T}his paper addresses certification aspects of multi-core based
	{IMA} platforms with the focus on today's technologies and processes.
	{T}he paper provides an analysis of potential hardware and software
	related interference channels between partitions running on a multi-core
	based platform. {D}ifferent core software concepts found in existing
	implementations like asymmetric multi processing ({AMP}) and symmetric
	multi processing ({SMP}) concepts are evaluated with respect to partitioning
	aspects.},
  file      = {Fuchsen2010.pdf:files\\Fuchsen2010.pdf:PDF},
  groups    = {Mikrokernel, Domänen-spezifisch, (RT-) Embedded Systems, Konsolidierung & Integration, Embedded Multi-Core, On-Chip Interconnect / NoC, Reliability & Dependability, (RT-) Scheduling, Virtualisierung & Partitionierung, WCET},
  issn      = {2155-7195},
  keywords  = {CPU clock frequency;aircraft program;asymmetric multiprocessing concept;cache size;chip industry;crosstalk;function level;information services;instruction level;instruction pipeline;integrated modular avionics modules;larger scale integration;line replaceable unit;multicore based high performance IMA platform design;potential hardware;power consumption;pseudoparallel processing;safety function;single core platform;software related interference channel;speculative program execution;symmetric multiprocessing concept;thermal dissipation loss;aerospace computing;air safety;avionics;crosstalk;information services;multiprocessing systems;parallel processing;pipeline processing;cache mechanisms;},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2011.07.05},
}

@Misc{Fuerst2010,
  author       = {Fürst, Simon},
  title        = {{I}nnovationstreiber {A}utosar und {GENIVI}},
  year         = {2010},
  howpublished = {Automobil Elektronik},
  month        = feb,
  url          = {www.all-electronics.de/media/file/8656},
  abstract     = {{I}n der {A}utomobilelektronik wird die {E}ntwicklung derzeit von
	zwei wesentlichen {T}rends dominiert. {A}uf der einen {S}eite steht
	die {E}tablierung von {A}utosar als weltweiter {S}tandard, um die
	komplexe {F}unktionalität sicher zu beherrschen. {A}uf der anderen
	{S}eite gewinnen {I}nfotainment-{A}nwendungen zunehmenden {E}influss
	im {F}ahrzeug. {W}ährend {A}utosar die {S}oftwarearchitektur, {A}nwenderschnittstellen,
	{B}asissoftware und die {M}ethodik für die klassischen {F}ahrzeugdomänen
	spezifiziert, konzentriert sich {G}enivi ausschließlich auf die {E}ntwicklung
	und {E}inführung einer {O}pen-{S}ource-{E}ntwicklungsplattform im
	{B}ereich {I}nfotainment.},
  file         = {Fuerst2010.pdf:files\\Fuerst2010.pdf:PDF},
  groups       = {Domänen-spezifisch, Konsolidierung & Integration, (Embedded) Security},
  journal      = {AUTOMOBIL-ELEKTRONIK},
  keywords     = {AUTOSAR; AUTOMOTIVE; GENIVI; EMBEDDED SYSTEMS; STANDARDIZATION; INFOTAINMENT;},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2011.03.21},
}

@Book{Gamma1995,
  author        = {Gamma, Erich and Helm, Richard and Johnson, Ralph E. and Vlissides, John},
  title         = {{D}esign {P}atterns: {E}lements of {R}eusable {O}bject-{O}riented {S}oftware},
  year          = {1995},
  publisher     = {Addison-Wesley},
  isbn          = {978-0-201-63361-0},
  abstract      = {{C}apturing a wealth of experience about the design of object-oriented
	software, four top-notch designers present a catalog of simple and
	succinct solutions to commonly occurring design problems. {P}reviously
	undocumented, these 23 patterns allow designers to create more flexible,
	elegant, and ultimately reusable designs without having to rediscover
	the design solutions themselves. {T}he authors begin by describing
	what patterns are and how they can help you design object-oriented
	software. {T}hey then go on to systematically name, explain, evaluate,
	and catalog recurring designs in object-oriented systems. {W}ith
	{D}esign {P}atterns as your guide, you will learn how these important
	patterns fit into the software development process, and how you can
	leverage them to solve your own design problems most efficiently.
	{E}ach pattern describes the circumstances in which it is applicable,
	when it can be applied in view of other design constraints, and the
	consequences and trade-offs of using the pattern within a larger
	design. {A}ll patterns are compiled from real systems and are based
	on real-world examples. {E}ach pattern also includes code that demonstrates
	how it may be implemented in object-oriented programming languages
	like {C}++ or {S}malltalk.},
  address       = {Reading, MA},
  groups        = {Books},
  keywords      = {BASICS,DESIGN PATTERNS,INTRODUCTION,OVERVIEW,SOFTWARE DEVELOPMENT},
  mendeley-tags = {BASICS,DESIGN PATTERNS,INTRODUCTION,OVERVIEW,SOFTWARE DEVELOPMENT},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@InProceedings{Gaska2010,
  author    = {Gaska, Thomas and Werner, Brian and Flagg, David},
  title     = {{A}pplying virtualization to avionics systems - {T}he integration challenges},
  booktitle = {Digital Avionics Systems Conference (DASC), 2010 IEEE/AIAA 29th},
  year      = {2010},
  month     = oct,
  pages     = {5.E.1-1 -5.E.1-19},
  doi       = {10.1109/DASC.2010.5655297},
  abstract  = {{M}ulticore virtualization can offer significant benefits to embedded
	avionics systems with regard to enabling mixed real-time and guest
	operating system interoperability, legacy code migration, and hardware
	consolidation. {V}irtualization enabled architectures have evolved
	from a traditional {H}ypervisor {M}onolithic {M}odel ({V}m{W}are
	and {V}irtual{L}ogix), to a {H}ypervisor {C}onsole {G}uest {M}onolithic
	{M}odel ({X}en), and now to a {H}igh {A}ssurance {M}icrokernel {H}ypervisor
	{RTOS} {M}odel. {T}he ability to consolidate multiple legacy {S}ingle
	{B}oard {C}omputers ({SBC}s) with various guest operating systems
	and applications into a multicore, virtualized {SBC} is a critical
	enabler to next generation avionics. {T}his paper describes an initial
	feasibility assessment toward applying the {M}icrokernel {H}ypervisor
	{RTOS} {V}irtual {M}achine ({VM}) architecture to enable virtualization
	for a representative set of avionics applications requiring multiple
	guest {OS} environments. {T}he specific notional configuration included:
	legacy application execution on a legacy {RTOS} guest {OS} in {VM}1,
	newer application execution on a more recently released level of
	{RTOS} on {VM}2, safety critical applications execution on an {ARINC}
	653 {OS} on {VM}3, {G}lobal {I}nformation {G}rid ({GIG}) applications
	execution on a {L}inux guest {OS} on {VM}4, and {MILS}/{MLS} application
	execution on a high assurance {OS} on {VM}5, all executing on a {M}icrokernel
	{H}ypervisor {RTOS} within a {M}ulticore ({X}86 or {P}ower {PC})
	with hardware-based virtualization support. {T}he paper identifies
	the current system design issues, limitations/restrictions, and feasibility
	of applying representative products in this representative hybrid
	legacy/next generation environment. {T}he system design challenges
	identified included: 1.) selection of communication mechanisms and
	scheduling for mixed operating system environments, 2.) addressing
	current limitations/restrictions of current vendor products with
	regard to multicore, 3.) properly scheduling the infrastructure to
	meet the safety and security requirements, 4.) inc- - orporating
	extensions for {M}ulti{L}evel {S}ecurity ({MLS}) components for networked
	{GIG} and local connectivity, and 5.) consolidating {I}/{O} components
	without compromising safety, security, and redundancy considerations.},
  file      = {Gaska2010.pdf:files\\Gaska2010.pdf:PDF},
  groups    = {Domänen-spezifisch, Konsolidierung & Integration, Reliability & Dependability, Virtualisierung & Partitionierung},
  issn      = {2155-7195},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2011.01.14},
}

@InProceedings{Gerlach2011,
  author    = {Gerlach, Matthias and Hilbrich, Robert and Weissleder, Stephan},
  title     = {{C}an {C}ars {F}ly? {F}rom {A}vionics to {A}utomotive: {C}omparability of {D}omain specific {S}afety {S}tandards},
  booktitle = {Embedded World 2011 Exhibition \& Conference. Proceedings \& Conference materials},
  year      = {2011},
  publisher = {WEKA Fachmedien Verlag, 2011 (Design \& Elektronik)},
  month     = mar,
  pages     = {1--9},
  url       = {http://publica.fraunhofer.de/documents/N-248595.html},
  address   = {Nürnberg, Deutschland},
  groups    = {My Publications},
  owner     = {hilrob},
  timestamp = {2014.01.08},
}

@InProceedings{Gerlach2011X,
  author    = {Gerlach, Matthias and Hilbrich, Robert and Weissleder, Stephan},
  title     = {{C}an {C}ars {F}ly? {F}rom {A}vionics to {A}utomotive: {C}omparability of {D}omain specific {S}afety {S}tandards},
  booktitle = {Embedded World 2011 Exhibition \& Conference. Proceedings \& Conference materials},
  year      = {2011},
  publisher = {WEKA Fachmedien Verlag, 2011 (Design \& Elektronik)},
  month     = mar,
  pages     = {1--9},
  url       = {http://publica.fraunhofer.de/documents/N-248595.html},
  address   = {Nürnberg, Deutschland},
  groups    = {My Publications},
  owner     = {hilrob},
  timestamp = {2014.01.08},
}

@InProceedings{Godesa2013,
  author    = {Godesa, Julian and Hilbrich, Robert},
  title     = {{F}ramework für die empirische {B}estimmung der {A}usführungszeit auf {M}ehrkernprozessoren},
  booktitle = {Funktionale Sicherheit - Echtzeit 2013},
  year      = {2013},
  editor    = {Halang, Wolfgang A.},
  series    = {Informatik aktuell},
  publisher = {Springer Vieweg},
  pages     = {77--86},
  doi       = {10.1007/978-3-642-41309-4_9},
  file      = {Godesa2013.pdf:files\\Godesa2013.pdf:PDF},
  groups    = {My Publications},
  owner     = {hilrob},
  timestamp = {2013.11.10},
}

@InProceedings{Godesa2013X,
  author    = {Godesa, Julian and Hilbrich, Robert},
  title     = {{F}ramework für die empirische {B}estimmung der {A}usführungszeit auf {M}ehrkernprozessoren},
  booktitle = {Funktionale Sicherheit - Echtzeit 2013},
  year      = {2013},
  editor    = {Halang, Wolfgang A.},
  series    = {Informatik aktuell},
  publisher = {Springer Vieweg},
  pages     = {77--86},
  doi       = {10.1007/978-3-642-41309-4_9},
  groups    = {My Publications},
  owner     = {hilrob},
  timestamp = {2013.11.10},
}

@Article{Goguen1984,
  author    = {Joseph A. Goguen and Jos{\'e} Meseguer},
  title     = {{U}nwinding and {I}nference {C}ontrol},
  journal   = {Security and Privacy, IEEE Symposium on},
  year      = {1984},
  volume    = {0},
  pages     = {75},
  issn      = {1540-7993},
  doi       = {http://doi.ieeecomputersociety.org/10.1109/SP.1984.10019},
  abstract  = {This paper discusses two main ideas, unwinding and inference control.
	While both concern computer security, they are not closely related
	to each other. Unwinding is a verification technique for general
	security requirements based on noninterference assertions as in [Goguen
	& Meseguer 82a]. The inference control problem concerns preventing
	inference of unauthorized information by combining authorized information.
	The main result in this paper is an unwinding theorem that gives
	a very simple necessary and sufficient condition for a system to
	satisfy the MLS security policy system. A subsidiary topic is secure
	interfaces, which we show how to treat with noninterferce assertions.},
  address   = {Los Alamitos, CA, USA},
  groups    = {(Embedded) Security},
  owner     = {hilrob},
  publisher = {IEEE Computer Society},
  read      = {unread},
  timestamp = {2012.01.16},
}

@InProceedings{Goguen1982,
  author    = {Goguen, J.A. and Meseguer, J.},
  title     = {{S}ecurity policies and security {M}odels},
  booktitle = {Proc of IEEE Symposium on Security and Privacy},
  year      = {1982},
  editor    = {IEEE Computer Society Press},
  month     = apr,
  pages     = {11--20},
  abstract  = {This paper motivates and outlines a new approach to secure systems
	with the following novel properties: it introduces a simple and general
	automaton theoretic approach to modelling secure systems; it shows
	how to use abstract capabilities to model the dynamic security aspects
	of such systems; the approach can be applied not only to computer
	operating systems, but also to secure message systems, and to data
	base systems; it is not limited to systems which are entirely computer
	based, but applies just as well to systems that contain manual components,
	and even to entirely manual systems; it introduces a general concept
	of security policy, such that allowed policies include multi-level
	security (MLS), capability passing, confinement, compartmentation,
	discretionary access, multi-user/multi key access, automatic distribution
	and authorization chains, and downgrading; it does without the notion
	of trusted processes; it provides a formalism for the specification
	of security policies; it supports a rigorous treatment of intransitive
	information flow; it provides techniques for proving that a given
	system satisfies a given policy, and it supports use of a hierarchy
	of models at various levels of detail, thus making it easier to prove
	security properties by factoring the difficulties, and by letting
	them appear at their proper level of abstraction.},
  file      = {Goguen1982.pdf:files\\Goguen1982.pdf:PDF},
  groups    = {Konsolidierung & Integration, (Embedded) Security},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.01.16},
}

@Article{Goossens2005,
  author        = {Goossens, K. and Dielissen, J. and Radulescu, A.},
  title         = {{\AE{}}thereal {N}etwork on {C}hip: {C}oncepts, {A}rchitectures, and {I}mplementations},
  journal       = {IEEE Design and Test of Computers},
  year          = {2005},
  volume        = {22},
  number        = {5},
  month         = {Mai},
  pages         = {414--421},
  issn          = {0740-7475},
  doi           = {10.1109/MDT.2005.99},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1511973},
  abstract      = {{T}he continuous advances in semiconductor technology enable the integration
	of increasing numbers of {IP} blocks in a single {S}o{C}. {I}nterconnect
	infrastructures, such as buses, switches, and networks on chips ({N}o{C}s),
	combine the {IP}s into a working {S}o{C}. {M}oreover, the industry
	expects platform-based {S}o{C} design to evolve to communication-centric
	design, with {N}o{C}s as a central enabling technology. {I}n this
	article, we introduce the {AE}thereal {N}o{C}. {T}he tenet of the
	{AE}thereal {N}o{C} is that guaranteed services ({GS}s) - such as
	uncorrupted, lossless, ordered data delivery; guaranteed throughput;
	and bounded latency - are essential for the efficient construction
	of robust {S}o{C}s. {T}o exploit the {N}o{C} capacity unused by the
	{GS} traffic, we provide best-effort services.},
  file          = {Goossens2005.pdf:files\\Goossens2005.pdf:PDF},
  groups        = {On-Chip Interconnect / NoC},
  keywords      = {MULTI-CORE,NOC,ON-CHIP COMMUNICATION ARCHITECTURES,ON-CHIP-INTERCONNECT,QUALITY OF SERVICE},
  mendeley-tags = {MULTI-CORE,NOC,ON-CHIP COMMUNICATION ARCHITECTURES,ON-CHIP-INTERCONNECT,QUALITY OF SERVICE},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.28},
}

@Article{Gracioli2013,
  author    = {Gracioli, Giovani and Fröhlich, AntônioAugusto and Pellizzoni, Rodolfo and Fischmeister, Sebastian},
  title     = {{I}mplementation and evaluation of global and partitioned scheduling in a real-time {OS}},
  journal   = {Real-Time Systems},
  year      = {2013},
  language  = {English},
  volume    = {49},
  number    = {6},
  pages     = {669--714},
  issn      = {0922-6443},
  doi       = {10.1007/s11241-013-9183-3},
  url       = {http://dx.doi.org/10.1007/s11241-013-9183-3},
  file      = {Gracioli2013.pdf:files\\Gracioli2013.pdf:PDF},
  groups    = {Themen, (RT-) Scheduling},
  keywords  = {Real-time scheduling; Multicore processors; Real-time operating systems; Global EDF; Partitioned EDF},
  owner     = {hilrob},
  publisher = {Springer US},
  timestamp = {2014.01.28},
}

@Book{Gropp1999,
  author    = {Gropp, William and Lusk, Ewing and Thakur, Rajeev},
  title     = {{U}sing {MPI}-2: {A}dvanced {F}eatures of the {M}essage-{P}assing {I}nterface},
  year      = {1999},
  publisher = {MIT Press},
  isbn      = {0262571331},
  address   = {Cambridge, MA, USA},
  groups    = {Tools},
  owner     = {hilrob},
  timestamp = {2014.01.14},
}

@InProceedings{Gross2003,
  author    = {Groß, H.-G.},
  title     = {{A}n evaluation of dynamic, optimisation-based worst-case execution time analysis},
  booktitle = {ITPC-2003. Information Technology. Prospects and Challenges in the 21st Century. Vol.1 : Proceedings of the International Conference on Information Technology},
  year      = {2003},
  publisher = {Bagga, J.},
  pages     = {8--14},
  url       = {http://publica.fraunhofer.de/dokumente/N-17327.html},
  abstract  = {{E}volutionary testing is a relatively new software testing technique
	based upon the application of evolutionary algorithms. {I}t can be
	used to generate input situations for procedures automatically which
	satisfy a given test criterion. {I}n this scope, testing is entirely
	regarded as a search or optimisation problem with the test criterion
	as cost function and the program input as parameters which must be
	optimised according to that cost function. {F}or assessing the worst-case
	execution time of real-time software dynamically, evolutionary testing
	can be applied to optimise input parameter combinations with the
	aim to maximise the execution time of a program. {T}his paper shows
	the application of evolutionary testing to the automatic generation
	of maximal execution times for 15 example test programs. {T}he outcome
	of this optimisation-based timing analysis is compared with random
	test case generation, and additionally, with the performance of an
	experienced human tester whoattempted to generate test cases manually
	on the basis of the source codes which maximise execution times.
	{E}xperiments show a high success rate of evolutionary testing for
	generating worst-case timing behaviour compared with the outcome
	of random testing. {R}andom testing can only generate about 85 percent
	of the execution times found by evolutionary testing. {F}or only
	4 out of the 15 test objects, the human tester was found to be more
	successful than the automatic test case generators. {T}his can be
	explained by the pathology of these test objects.},
  file      = {Gross2003.pdf:files\\Gross2003.pdf:PDF},
  groups    = {WCET},
  keywords  = {COMPUTER SOFTWARE, TESTING, AUTOMATION, EVALUATION RESEARCH, REAL-TIME SYSTEM, EVOLUTIONARY ALGORITHMS, WCET},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2010.07.08},
}

@InBook{Grosse-Rhode2014,
  author    = {Große-Rhode, Martin and Hilbrich, Robert and Mann, Stefan and Weißleder, Stephan},
  title     = {{S}ystem {Q}uality and {S}oftware {A}rchitecture},
  year      = {2014},
  editor    = {Mistrík, Ivan and Eeles, Peter and Bahsoon, Rami and Stal, Michael and},
  edition   = {1},
  note      = {ISBN 978-0-12-417009-4},
  publisher = {Morgan Kaufmann Publishers},
  chapter   = {Chapter 9: Achieving Quality in Customer-Configurable Products},
  pages     = {233--261},
  url       = {http://store.elsevier.com/product.jsp?isbn=9780124170094},
  abstract  = {Customers of products that include or are determined by software nowadays
	expect the product to be individually configurable. At the same time
	high quality and short delivery times are expected. As a consequence
	the producer of the software must be able to develop systems that
	can be easily configured according to the customer's needs in such
	a way that each individually configured system satisfies all quality
	requirements. Especially in the case of high numbers of possible
	configurations it is obvious that it is not feasible to construct
	all system configurations and check the properties of each of them.
	Rather, there must be means to assure quality generically, that means,
	once and for all configurations at the same time. The chapter considers
	software product line engineering as the base technology how to construct
	configurable systems and adds generic quality assurance means to
	this process. The mechanism can be understood as a general pattern
	how to carry over quality assurance techniques to configurable systems.
	For two concrete techniques this is done in the chapter: model-based
	testing as technique for the assurance of functional quality and
	model-based deployment as a technique for the assurance of real-time
	properties like responsiveness, availability, and reliability. The
	techniques are demonstrated at the example of a configurable flight
	management system as used in modern airplanes.},
  file      = {Grosse-Rhode2014.pdf:files\\Grosse-Rhode2014.pdf:PDF},
  groups    = {My Publications},
  keywords  = {systems quality; product line engineering; configurable systems design; model-based testing; model-based deployment},
  owner     = {hilrob},
  timestamp = {2013.11.18},
}

@InBook{Grosse-Rhode2014X,
  author    = {Große-Rhode, Martin and Hilbrich, Robert and Mann, Stefan and Weißleder, Stephan},
  title     = {{S}ystem {Q}uality and {S}oftware {A}rchitecture},
  year      = {2014},
  editor    = {Mistrík, Ivan and Eeles, Peter and Bahsoon, Rami and Stal, Michael and},
  edition   = {1},
  note      = {ISBN 978-0-12-417009-4},
  publisher = {Morgan Kaufmann Publishers},
  chapter   = {Chapter 9: Achieving Quality in Customer-Configurable Products},
  pages     = {233--261},
  url       = {http://store.elsevier.com/product.jsp?isbn=9780124170094},
  abstract  = {Customers of products that include or are determined by software nowadays
	expect the product to be individually configurable. At the same time
	high quality and short delivery times are expected. As a consequence
	the producer of the software must be able to develop systems that
	can be easily configured according to the customer's needs in such
	a way that each individually configured system satisfies all quality
	requirements. Especially in the case of high numbers of possible
	configurations it is obvious that it is not feasible to construct
	all system configurations and check the properties of each of them.
	Rather, there must be means to assure quality generically, that means,
	once and for all configurations at the same time. The chapter considers
	software product line engineering as the base technology how to construct
	configurable systems and adds generic quality assurance means to
	this process. The mechanism can be understood as a general pattern
	how to carry over quality assurance techniques to configurable systems.
	For two concrete techniques this is done in the chapter: model-based
	testing as technique for the assurance of functional quality and
	model-based deployment as a technique for the assurance of real-time
	properties like responsiveness, availability, and reliability. The
	techniques are demonstrated at the example of a configurable flight
	management system as used in modern airplanes.},
  groups    = {My Publications},
  keywords  = {systems quality; product line engineering; configurable systems design; model-based testing; model-based deployment},
  owner     = {hilrob},
  timestamp = {2013.11.18},
}

@Misc{Grossmann2010,
  author        = {Grossmann, Jürgen and Wiesbrock, Hans-Werner},
  title         = {{A}n {A}pproach to {T}emporal {L}ogic for {T}esting {R}eal {T}ime {P}roperties of {E}mbedded {S}ystems},
  year          = {2010},
  abstract      = {{I}n model based testing formal models are used to ease the specification
	of tests in many different ways. {D}ependent on the level of abstraction
	the application of such models to tangible test cases require adaption
	to the specific properties of the system under test as well as to
	the test and measurement environment. {I}n particular the applicability
	of models and test models for embedded systems becomes critical when
	temporal properties have to be assessed. {N}ot only the {SUT} itself
	but particularly the test system and the measurement environment
	induces jitters and delays which lead to notable differences between
	the expectancies expressed by the model specification and the measurement
	results. {D}ifferent cycle times or sample rates lead to shifts in
	time when comparisons should be performed and the lack of precise
	measurements might cause slightly different values. {I}n order to
	manage such fuzziness one needs a concept of manageable uncertainness
	in evaluations, i.e. time periods, where some statements are not
	yet decidable. {I}n this article we propose a new approach to model
	a temporal logic based test specifications by an- notating the channels
	under observation with distinct limit values for jitters and delays.
	{W}e show how these limits propagate in the evaluation of complex
	logical expressions and demonstrate the applicability of our approach
	by providing an example from the automotive industry.},
  annote        = {Von ITPower und FOKUS aus der Zusammenarbeit in TEMEA?},
  file          = {Grossmann2010.pdf:files\\Grossmann2010.pdf:PDF},
  groups        = {Formale Methoden},
  keywords      = {EMBEDDED SYSTEMS,FORMAL METHODS,FORMAL SPECIFICATION,REAL-TIME-SYSTEMS,TEMEA,TEMPORAL LOGIC,TIME PROPERTIES},
  mendeley-tags = {EMBEDDED SYSTEMS,FORMAL METHODS,FORMAL SPECIFICATION,REAL-TIME-SYSTEMS,TEMEA,TEMPORAL LOGIC,TIME PROPERTIES},
  owner         = {hilrob},
  pages         = {1--16},
  read          = {next},
  timestamp     = {2010.05.28},
}

@Book{Gueret2000,
  author    = {Guéret, Christelle and Prins, Christian and Sevaux, Marc},
  title     = {{A}pplications of optimization with {X}press-{MP}},
  year      = {2000},
  publisher = {Dash Optimization Ltd.},
  file      = {Gueret2000.pdf:files\\Gueret2000.pdf:PDF},
  groups    = {Books, Optimierung},
  keywords  = {INTEGER LINEAR PROGRAMMING; OPTIMIZATION;},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2010.07.22},
}

@InProceedings{Guerin2009,
  author        = {Guerin, Xavier and Petrot, Frederic},
  title         = {{A} {S}ystem {F}ramework for the {D}esign of {E}mbedded {S}oftware {T}argeting {H}eterogeneous {M}ulti-core {S}o{C}s},
  booktitle     = {2009 20th IEEE International Conference on Application-specific Systems, Architectures and Processors},
  year          = {2009},
  publisher     = {IEEE},
  pages         = {153--160},
  doi           = {10.1109/ASAP.2009.9},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5200023},
  abstract      = {{E}mbedded appliances designers rely on heterogeneous multi-core system-on-chips
	({HMC}-{S}o{C}) to provide the computing power required by modern
	applications. {D}ue to the inherent complexity of this kind of platform,
	the development of specific system architectures is not considered
	as an option to provide low-level services to an application. {H}ence,
	the software is built either from scratch - when the softwarepsilas
	requirements are not too high - or over a general-purpose operating
	system, leading to performance and memory usage trade-offs. {O}ur
	contribution is a component-based system framework that provides
	high-level system services for embedded software applications with
	few impacts on the memory usage and final performances, thanks to
	strong interfaces that enable the reuse of existing software elements
	and facilitate the support of multiple hardware platforms. {T}he
	efficiency of our approach is demonstrated on an existing {MC}-{S}o{C}.},
  annote        = {Es wurde ein Framework (DNA OS) vorgestellt, mit dem die Entwicklung von Anwendungen auf heterogenen Multicore System-on-Chips vereinfacht werden soll. Es basiert auf einer schmalen HAL, die eine ideale Plattform und eine ideale CPU abstrahiert und erg\"{a}nzt verschiedene Komponenten, um die Portabilit\"{a}t und Modularit\"{a}t zu erhalten. Entwickelt und eingesetzt wird es vor allem f\"{u}r SOCLib. Es geht hier prim\"{a}r darum, wie die komplexen Anforderungen beim Entwickeln von Betriebssystemen f\"{u}r Embedded, Heterogenous Multicore System-On-Chips vereinfacht werden kann. Lang und breit wird die API vorgestellt, aber so richtig "handfestes" steckt in dem Paper nicht drin. Wie unterscheidet sich eigentlich "Komponenten-basiert" von "Aspect-orientiert"?},
  file          = {Guerin2009.pdf:files\\Guerin2009.pdf:PDF},
  issn          = {1063-6862},
  keywords      = {EMBEDDED SYSTEMS,HMPSOC,MPSOC,MULTI-CORE,OPERATING SYSTEMS,SOC},
  mendeley-tags = {EMBEDDED SYSTEMS,HMPSOC,MPSOC,MULTI-CORE,OPERATING SYSTEMS,SOC},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@InProceedings{Gupta2006,
  author    = {Gupta, Rajesh},
  title     = {{P}rogramming models and methods for spatiotemporal actions and reasoning in cyber-physical systems},
  booktitle = {NSF Workshop on CPS},
  year      = {2006},
  pages     = {1--3},
  file      = {Gupta2006.pdf:files\\Gupta2006.pdf:PDF},
  groups    = {Cyber-Physical Systems},
  owner     = {hilrob},
  timestamp = {2014.03.18},
}

@Article{Gustafson1988,
  author     = {Gustafson, John L.},
  title      = {{R}eevaluating {A}mdahl's {L}aw},
  journal    = {Commun. ACM},
  year       = {1988},
  volume     = {31},
  number     = {5},
  month      = may,
  pages      = {532--533},
  issn       = {0001-0782},
  doi        = {10.1145/42411.42415},
  url        = {http://doi.acm.org/10.1145/42411.42415},
  acmid      = {42415},
  address    = {New York, NY, USA},
  file       = {Gustafson1988.pdf:files\\Gustafson1988.pdf:PDF},
  groups     = {Multi-Core Allgemein, Parallel Programming Models},
  issue_date = {May 1988},
  numpages   = {2},
  owner      = {hilrob},
  publisher  = {ACM},
  timestamp  = {2014.03.11},
}

@InProceedings{Hartig1997,
  author    = {H\"{a}rtig, Hermann and Hohmuth, Michael and Liedtke, Jochen and Wolter, Jean and Sch\"{o}nberg, Sebastian},
  title     = {{T}he performance of \&\#956;-kernel-based systems},
  booktitle = {Proceedings of the sixteenth ACM symposium on Operating systems principles},
  year      = {1997},
  series    = {SOSP '97},
  publisher = {ACM},
  location  = {Saint Malo, France},
  isbn      = {0-89791-916-5},
  pages     = {66--77},
  doi       = {http://doi.acm.org/10.1145/268998.266660},
  url       = {http://doi.acm.org/10.1145/268998.266660},
  acmid     = {266660},
  address   = {New York, NY, USA},
  file      = {Hartig1997.pdf:files\\Hartig1997.pdf:PDF},
  groups    = {Mikrokernel},
  numpages  = {12},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2011.02.23},
}

@Book{Haberfellner2012,
  author    = {R. Haberfellner and Olivier L. de Weck and E. Fricke and S. Vössner},
  title     = {{S}ystems {E}ngineering - {G}rundlagen und {A}nwendungen},
  year      = {2012},
  edition   = {12th edition},
  publisher = {Orell Füssli Verlag, Zurich},
  groups    = {Books, Systems Engineering},
  month     = feb,
  owner     = {hilrob},
  read      = {done},
  timestamp = {2012.11.22},
}

@Misc{Hafner2010,
  author        = {Hafner, Martina},
  title         = {{Z}eitpartitionierung am {B}eispiel {I}nfotainment-{S}ystem: {F}achartikel},
  year          = {2010},
  url           = {http://www.elektronikpraxis.vogel.de/index.cfm?pid=5416\&pk=256073\&print=true\&printtype=article},
  abstract      = {{D}ie {I}ntegration von {E}mbedded-{S}ystemen kann {K}opfschmerzen
	verursachen, wenn sich {S}oftwarekomponenten gegenseitig blockieren
	oder {R}echenzeit entziehen. {D}ie {Z}eitpartitionierung kann das
	{A}uftreten dieser {P}robleme von vornherein verhindern, indem jedes
	{S}oftware-{S}ubsystem ein garantiertes {B}udget an {CPU}-{Z}eit
	erh\"{a}lt.},
  annote        = {Zeitpartitionierung wird bereits im Design eingesetzt, so dass bei der sp\"{a}teren Intergration keine Probleme mehr auftreten. Sie verwenden auch Threads mit Priorit\"{a}ten, um die Scheduling Reihenfolge zu beeinflussen. Zum Simulieren hat QNX ein Tool entwickelt, dass Meldungen schreibt, sobald ein Prozess/Thread seine vorgegebene Zeitl\"{a}nge \"{u}berschreitet. Partitionierung zerlegt eine CPU in viele virtuelle CPUs und erleichtert damit den Integrationsprozess [p. 7]. Damit sind muss man bei den Priorit\"{a}ten der Threads nicht mehr das Gesamtsystem anschauen, sondern kann sich auf seinen Bereich beschr\"{a}nken. Vorteile der Leerlaufzyklen k\"{o}nnen genutzt werden, damit andere Partitionen mehr CPU Zeit bekommen, so dass der Last-Spitzen besser abgefangen werden k\"{o}nnen. "Adaptiver Partitionierungsansatz" [p. 7]},
  booktitle     = {http://www.elektronikpraxis.vogel.de/},
  file          = {Hafner2010.pdf:files\\Hafner2010.pdf:PDF},
  groups        = {Misc},
  keywords      = {ADAPTIVE PARTITIONING,AUTOMOTIVE,INTEGRATION,INTRODUCTION,MULTI-CORE,OPERATING SYSTEMS,QNX,QNX NEUTRINO,REAL-TIME-SYSTEMS,RELIABILITY,RESOURCE PARTITIONING,SCHEDULING,TIME PARTITIONING},
  mendeley-tags = {ADAPTIVE PARTITIONING,AUTOMOTIVE,INTEGRATION,INTRODUCTION,MULTI-CORE,OPERATING SYSTEMS,QNX,QNX NEUTRINO,REAL-TIME-SYSTEMS,RELIABILITY,RESOURCE PARTITIONING,SCHEDULING,TIME PARTITIONING},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Article{Hall2002,
  author    = {Hall, Anthony and Chapman, Roderick},
  title     = {{C}orrectness by {C}onstruction: {D}eveloping a {C}ommercial {S}ecure {S}ystem},
  journal   = {IEEE Software},
  year      = {2002},
  volume    = {19},
  issue     = {1},
  month     = jan,
  pages     = {18--25},
  issn      = {0740-7459},
  doi       = {10.1109/52.976937},
  url       = {http://doi.ieeecomputersociety.org/10.1109/52.976937},
  abstract  = {{P}raxis {C}ritical {S}ystems recently developed a secure certification
	authority for smart cards that had to satisfy performance and usability
	requirements while meeting stringent security constraints. {T}he
	authors used a systematic process from requirements elicitation through
	formal specification, user interface prototyping, rigorous design,
	and coding to ensure these objectives' achievement. {T}hey show how
	a process that achieves normal commercial productivity can deliver
	a highly reliable system that meets all its throughput and us-ability
	goals.},
  acmid     = {626356},
  address   = {Los Alamitos, CA, USA},
  file      = {Hall2002.pdf:files\\Hall2002.pdf:PDF},
  groups    = {Methodik, Correctness by Construction, Formale Methoden, (Embedded) Security, Software Modellierung},
  numpages  = {8},
  owner     = {hilrob},
  publisher = {IEEE Computer Society Press},
  read      = {done},
  timestamp = {2011.09.26},
}

@InProceedings{Hall1995,
  author    = {Hall, Mary W. and Amarasinghe, S.P. and Murphy, B.R. and Shih-Wei Liao and Lam, M.S.},
  title     = {{D}etecting {C}oarse - {G}rain {P}arallelism {U}sing an {I}nterprocedural {P}arallelizing {C}ompiler},
  booktitle = {Supercomputing, 1995. Proceedings of the IEEE/ACM SC95 Conference},
  year      = {1995},
  pages     = {49--49},
  doi       = {10.1109/SUPERC.1995.241596},
  abstract  = {This paper presents an extensive empirical evaluation of an interprocedural
	parallelizing compiler, developed as part of the Stanford SUIF compiler
	system. The system incorporates a comprehensive and integrated collection
	of analyses, including privatization and reduction recognition for
	both array and scalar variables, and symbolic analysis of array subscripts.
	The interprocedural analysis framework is designed to provide analysis
	results nearly as precise as full inlining but without its associated
	costs. Experimentation with this system shows that it is capable
	of detecting coarser granularity of parallelism than previously possible.
	Specifically, it can parallelize loops that span numerous procedures
	and hundreds of lines of codes, frequently requiring modifications
	to array data structures such as privatization and reduction transformations.
	Measurements from several standard benchmark suites demonstrate that
	an integrated combination of interprocedural analyses can substantially
	advance the capability of automatic parallelization technology.},
  file      = {Hall1995.pdf:files\\Hall1995.pdf:PDF},
  groups    = {Parallel Programming Models},
  keywords  = {compiler optimizations;interprocedural data-flow analysis;parallelizing compilers;shared memory multiprocessors;Algorithm design and analysis;Contracts;Costs;Data analysis;Data structures;Laboratories;Measurement standards;Optimizing compilers;Privatization;Propulsion;compiler optimizations;interprocedural data-flow analysis;parallelizing compilers;shared memory multiprocessors},
  owner     = {hilrob},
  timestamp = {2014.04.28},
}

@InProceedings{Hansson2007,
  author        = {Hansson, Andreas and Coenen, Martijn and Goossens, Kees},
  title         = {{U}ndisrupted quality-of-service during reconfiguration of multiple applications in networks on chip},
  booktitle     = {DATE '07: Proceedings of the conference on Design, automation and test in Europe},
  year          = {2007},
  publisher     = {EDA Consortium},
  isbn          = {978-3-9810801-2-4},
  pages         = {954--959},
  url           = {http://portal.acm.org/citation.cfm?id=1266366.1266572},
  abstract      = {{N}etworks on {C}hip ({N}o{C}) have emerged as the design paradigm
	for scalable {S}ystem on {C}hip ({S}o{C}) communication infrastructure.
	{D}ue to convergence, a growing number of applications are integrated
	on the same chip. {W}hen combined, these applications result in use-cases
	with different communication requirements. {T}he {N}o{C} is configured
	per use-case and traditionally all running applications are disrupted
	during use-case transitions, even those continuing operation. {I}n
	this paper we present a model that enables partial reconfiguration
	of {N}o{C}s and a mapping algorithm that uses the model to map multiple
	applications onto a {N}o{C} with undisrupted {Q}uality-of-{S}ervice
	during reconfiguration. {T}he performance of the methodology is verified
	by comparison with existing solutions for several {S}o{C} designs.
	{W}e apply the algorithm to a mobile phone {S}o{C} with telecom,
	multimedia and gaming applications, reducing {N}o{C} area by more
	than 17\% and power consumption by 50\% compared to a state-of-the-art
	approach. },
  address       = {San Jose, CA, USA},
  annote        = {An algorithm for online mapping of use-cases onto a NoC with undisrupted QoS is proposed.},
  file          = {Hansson2007.pdf:files\\Hansson2007.pdf:PDF;Hansson2007a.pdf:files\\Hansson2007a.pdf:PDF},
  keywords      = {DYNAMIC-RECONFIGURATION,MULTI-CORE,NOC,ON-CHIP-INTERCONNECT},
  mendeley-tags = {DYNAMIC-RECONFIGURATION,MULTI-CORE,NOC,ON-CHIP-INTERCONNECT},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.28},
}

@InProceedings{Hansson2007a,
  author        = {Hansson, Andreas and Goossens, Kees},
  title         = {{T}rade-offs in the {C}onfiguration of a {N}etwork on {C}hip for {M}ultiple {U}se-{C}ases},
  booktitle     = {First International Symposium on Networks-on-Chip (NOCS'07)},
  year          = {2007},
  publisher     = {IEEE},
  isbn          = {0-7695-2773-6},
  pages         = {233--242},
  doi           = {10.1109/NOCS.2007.45},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4209017},
  abstract      = {{S}ystems on chip ({S}o{C}) are becoming increasingly complex, with
	a large number of applications integrated on the same chip. {S}uch
	a system often supports a large number of use-cases and is dynamically
	reconfigured when platform conditions or user requirements change.
	{N}etworks on chip ({N}o{C}) offer the designer unsurpassed runtime
	flexibility. {T}his flexibility stems from the programmability of
	the individual routers and network interfaces. {W}hen a change in
	use-case occurs, the application task graph and the network connections
	change. {T}o mitigate the complexity in programming the many registers
	controlling the {N}o{C}, an abstraction in the form of a configuration
	library is needed. {I}n addition, such a library must leave the modified
	system in a consistent state, from which normal operation can continue.
	{I}n this paper we present the facilities for controlling change
	in a reconfigurable {N}o{C}. {W}e show the architectural additions
	and the many trade-offs in the design of a run-time library for {N}o{C}
	reconfiguration. {W}e qualitatively and quantitatively evaluate the
	performance, memory requirements, predictability and reusability
	of the different implementations.},
  address       = {Washington, DC, USA},
  annote        = {If a NoC is reconfigured online the transient state should not corrupt data and cannot leave the network in an inconsistent state.},
  file          = {Hansson2007a.pdf:files\\Hansson2007a.pdf:PDF},
  keywords      = {GRAPH THEORY,MULTI-CORE,NETWORK INTERFACES,NOC,ON-CHIP-INTERCONNECT,RECONFIGURABLE ARCHITECTURES,THEORY},
  mendeley-tags = {GRAPH THEORY,MULTI-CORE,NETWORK INTERFACES,NOC,ON-CHIP-INTERCONNECT,RECONFIGURABLE ARCHITECTURES,THEORY},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.28},
}

@PhdThesis{Happe2008,
  author        = {Happe, Jens},
  title         = {{P}redicting {S}oftware {P}erformance in {S}ymmetric {M}ulti-core and {M}ultiprocessor {E}nvironments},
  year          = {2008},
  type          = {Dissertation},
  pages         = {302},
  file          = {Happe2008.pdf:files\\Happe2008.pdf:PDF},
  groups        = {Books},
  keywords      = {CONCEPT,MULTI-CORE,MULTI-PROCESSOR,PERFORMANCE PREDICTION,RUN-TIME BEHAVIOUR},
  mendeley-tags = {CONCEPT,MULTI-CORE,MULTI-PROCESSOR,PERFORMANCE PREDICTION,RUN-TIME BEHAVIOUR},
  owner         = {hilrob},
  read          = {done},
  school        = {University of Oldenburg},
  timestamp     = {2010.05.27},
}

@Article{Harchol-Balter1997,
  author     = {Harchol-Balter, Mor and Downey, Allen B.},
  title      = {{E}xploiting {P}rocess {L}ifetime {D}istributions for {D}ynamic {L}oad {B}alancing},
  journal    = {ACM Trans. Comput. Syst.},
  year       = {1997},
  volume     = {15},
  number     = {3},
  month      = aug,
  pages      = {253--285},
  issn       = {0734-2071},
  doi        = {10.1145/263326.263344},
  url        = {http://doi.acm.org/10.1145/263326.263344},
  acmid      = {263344},
  address    = {New York, NY, USA},
  file       = {Harchol-Balter1997.pdf:files\\Harchol-Balter1997.pdf:PDF},
  groups     = {Load Balancing / Clusters},
  issue_date = {Aug. 1997},
  keywords   = {Pareto distribution, heavy-tailed, load balancing, load sharing, migration, network of workstations, remote execution, trace-driven simulation, workload modeling},
  numpages   = {33},
  owner      = {hilrob},
  publisher  = {ACM},
  timestamp  = {2014.05.19},
}

@Article{Harris2007,
  author    = {Harris, T. and Cristal, A. and Unsal, O.S. and Ayguade, E. and Gagliardi, F. and Smith, B. and Valero, M.},
  title     = {{T}ransactional {M}emory: {A}n {O}verview},
  journal   = {Micro, IEEE},
  year      = {2007},
  volume    = {27},
  number    = {3},
  month     = may,
  pages     = {8--29},
  issn      = {0272-1732},
  doi       = {10.1109/MM.2007.63},
  abstract  = {{W}riting applications that benefit from the massive computational
	power of future multicore chip multiprocessors will not be an easy
	task for mainstream programmers accustomed to sequential algorithms
	rather than parallel ones. {T}his article presents a survey of transactional
	memory, a mechanism that promises to enable scalable performance
	while freeing programmers from some of the burden of modifying their
	parallel code.},
  file      = {Harris2007.pdf:files\\Harris2007.pdf:PDF},
  groups    = {Multi-Core Allgemein, Parallel Programming Models},
  keywords  = {MAINSTREAM PROGRAMMING;MULTICORE CHIP MULTIPROCESSORS;PARALLEL CODE MODIFICATION;SHARED MEMORY SYSTEMS;TRANSACTIONAL MEMORY;DISTRIBUTED SHARED MEMORY SYSTEMS;PARALLEL PROGRAMMING;STORAGE MANAGEMENT; SURVEY;},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.08.25},
}

@Misc{Heikkila2007,
  author        = {Heikkila, Eric and Blyler, John},
  title         = {{M}ulticore {C}omputing in {E}mbedded {A}pplications - {G}lobal {M}arket {O}pportunity and {R}equirements {A}nalysis},
  year          = {2007},
  abstract      = {{T}his white paper discusses early research results for the evaluation,
	adoption, design and utilization of multi-core processors in embedded
	applications. {T}he white paper is the second in a series of 2007
	publications by the {V}enture {D}evelopment {C}orporation ({VDC})
	{E}mbedded {H}ardware and {S}ystems group to present and discuss
	the results of a recently completed research project on {M}ulti-{C}ore
	{C}omputing in {E}mbedded {A}pplications. {T}he research data and
	findings are selected from a more extensive database and series of
	analyses that are being delivered to {VDC} clients participating
	in the full project.},
  annote        = {Marktstudie zur Durchsetzung von Multicore Prozessoren und ihren Anwendungen},
  booktitle     = {Distribution},
  file          = {Heikkila2007.pdf:files\\Heikkila2007.pdf:PDF},
  institution   = {Venture Development Corporation},
  keywords      = {BUSINESS,MARKET SURVEY,MULTI-CORE,SURVEY},
  mendeley-tags = {BUSINESS,MARKET SURVEY,MULTI-CORE,SURVEY},
  number        = {August},
  owner         = {hilrob},
  pages         = {10},
  read          = {done},
  timestamp     = {2010.05.27},
}

@InProceedings{Heiser2008,
  author        = {Heiser, Gernot},
  title         = {{T}he role of virtualization in embedded systems},
  booktitle     = {Proceedings of the 1st workshop on Isolation and integration in embedded systems - IIES '08},
  year          = {2008},
  publisher     = {ACM Press},
  isbn          = {9781605581262},
  pages         = {11--16},
  doi           = {10.1145/1435458.1435461},
  url           = {http://portal.acm.org/citation.cfm?doid=1435458.1435461},
  abstract      = {{S}ystem virtualization, which enjoys immense popularity in the enterprise
	and personal computing spaces, is recently gaining significant interest
	in the embedded domain. {S}tarting from a comparison of key characteristics
	of enterprise systems and embedded systems, we will examine the difference
	in motivation for the use of system virtual machines, and the resulting
	differences in the requirements for the technology. {W}e find that
	these differences are quite substantial, and that virtualization
	is unable to meet the special requirements of embedded systems. {I}nstead,
	more general operating-systems technologies are required, which support
	virtualization as a special case. {W}e argue that high-performance
	microkernels, specifically {L}4, are a technology that provides a
	good match for the requirements of next-generation embedded systems.},
  address       = {New York, New York, USA},
  annote        = {- unbedingt lesen -},
  file          = {Heiser2008.pdf:files\\Heiser2008.pdf:PDF},
  groups        = {Mikrokernel, Konsolidierung & Integration, Embedded Multi-Core, Reliability & Dependability, (RT-) Scheduling, (Embedded) Security, Virtualisierung & Partitionierung},
  keywords      = {COMPARISON,EMBEDDED SYSTEMS,L4,MICROKERNELS,VIRTUALIZATION},
  mendeley-tags = {COMPARISON,EMBEDDED SYSTEMS,L4,MICROKERNELS,VIRTUALIZATION},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.28},
}

@Misc{Held2006,
  author        = {Held, Jim and Bautista, Jerry and Koehl, Sean},
  title         = {{F}rom a {F}ew {C}ores to {M}any: {A} {T}era-{S}cale {C}omputing {R}esearch {O}verview},
  year          = {2006},
  url           = {http://download.intel.com/research/platform/terascale/terascale\_overview\_paper.pdf},
  abstract      = {{I}ntel processors with two cores are here now, and quad-core processors
	are right around the corner. {I}n the coming years, the number of
	cores on a chip will continue to grow, launching an era of vastly
	more powerful computers. {T}hese are the machines that will deliver
	teraflop performance with the efficient capabilities needed to handle
	tomorrow's emerging applications.},
  annote        = {It is expected that architectures with hundreds of cores will be common in the future which makes this a relevant research topic.},
  file          = {Held2006.pdf:files\\Held2006.pdf:PDF},
  institution   = {Intel, Tera-scale Computing Research Program},
  keywords      = {MULTI-CORE,NOC,ON-CHIP-INTERCONNECT,TERA-SCALE},
  mendeley-tags = {MULTI-CORE,NOC,ON-CHIP-INTERCONNECT,TERA-SCALE},
  owner         = {hilrob},
  pages         = {12},
  publisher     = {Citeseer},
  read          = {next},
  timestamp     = {2010.05.28},
}

@Misc{Helming2012,
  author       = {Helming, Jonas and Koegel, Maximilian},
  title        = {{W}hat every {E}clipse developer should know about {EMF}},
  year         = {2012},
  howpublished = {Online},
  month        = dec,
  url          = {http://eclipsesource.com/fileadmin/documents/909b55d7bb/tutorial/EMFTutorialDec2012.pdf},
  file         = {Helming2012.pdf:files\\Helming2012.pdf:PDF},
  keywords     = {EMF; ECLIPSE; MODELING},
  owner        = {hilrob},
  timestamp    = {2013.06.24},
}

@InProceedings{Henkel2004,
  author        = {Henkel, J. and Wolf, Wayne and Chakradhar, Srimat},
  title         = {{O}n-chip networks: a scalable, communication-centric embedded system design paradigm},
  booktitle     = {17th International Conference on VLSI Design. Proceedings.},
  year          = {2004},
  publisher     = {IEEE Comput. Soc},
  isbn          = {0-7695-2072-3},
  pages         = {845--851},
  doi           = {10.1109/ICVD.2004.1261037},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1261037},
  abstract      = {{A}s chip complexity grows, design productivity boost is expected
	from reuse of large parts and blocks of previous designs with the
	design effort largely invested into the new parts. {M}ore and more
	processor cores and large, reusable components are being integrated
	on a single silicon die but reuse of the communication infrastructure
	has been difficult. {B}uses and point to point connections, that
	have been the main means to connect components on a chip today, will
	not result in a scalable platform architecture for the billion transistor
	chip era. {B}uses can cost efficiently connect a few tens of components.
	{P}oint to point connections between communication partners is practical
	for even fewer components. {A}s more and more components are integrated
	on a single silicon die, performance bottlenecks of long, global
	wires preclude reuse of buses. {T}herefore, scalable on-chip communication
	infrastructure is playing an increasingly dominant role in system-on-chip
	designs. {W}ith the super-abundance of cheap, function-specific {IP}
	cores, design effort will focus on the weakest link: efficient on-chip
	communication. {F}uture on-chip communication infrastructure will
	overcome the limits of bus-based systems by providing higher bandwidth,
	higher flexibility and by solving the clock skew problem on large
	chips. {I}t may, however, present new problems: higher power consumption
	of the communication infrastructure and harder-to-predict performance
	patterns. {S}olutions to these problems may result in a complete
	overhaul of {SOC} design methodologies into a communication-centric
	design style. {T}he envisioning of upcoming problems and possible
	benefits has led to intensified research in the field of what is
	called {N}o{C}s: {N}etworks on {C}hips. {T}he term {N}o{C}s is used
	in a broad meaning, encompassing the hardware communication infrastructure,
	the middleware and operating system communication services, and a
	design methodology and tools to map applications onto a network on
	chip. {T}his paper discusses trends in system-on-chip designs, critiques
	problems and opportunities of the {N}o{C} paradigm, summarizes research
	activities, and outlines several directions for future research.},
  annote        = {Due to growing chip complexity networks are needed to interconnect the IP blocks. New problems imposed by such networks include increased power consumption and hard-to-predict performance patterns. Communication-centric design of systems on chip becomes necessary.},
  file          = {Henkel2004.pdf:files\\Henkel2004.pdf:PDF},
  keywords      = {MULTI-CORE,NOC,ON-CHIP-INTERCONNECT},
  mendeley-tags = {MULTI-CORE,NOC,ON-CHIP-INTERCONNECT},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.28},
}

@PhdThesis{Henkler2012,
  author    = {Henkler, Stefan},
  title     = {{E}in komponentenbasierter, modellgetriebener {S}oftwareentwicklungsansatz für vernetzte, mechatronische {S}ysteme},
  year      = {2012},
  file      = {Henkler2012.pdf:files\\Henkler2012.pdf:PDF},
  owner     = {hilrob},
  read      = {done},
  school    = {Universität Paderborn},
  timestamp = {2012.11.09},
}

@Book{Hennessy2006,
  author    = {Hennessy, John L. and Patterson, David A.},
  title     = {{C}omputer {A}rchitecture, {F}ourth {E}dition: {A} {Q}uantitative {A}pproach},
  year      = {2006},
  publisher = {Morgan Kaufmann Publishers Inc.},
  isbn      = {0123704901},
  address   = {San Francisco, CA, USA},
  file      = {Hennessy2006.pdf:files\\Hennessy2006.pdf:PDF},
  groups    = {Books},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2010.08.04},
}

@Book{Herlihy2008,
  author        = {Herlihy, Maurice and Shavit, Nir},
  title         = {{T}he {A}rt of {M}ultiprocessor {P}rogramming},
  year          = {2008},
  publisher     = {Morgan Kaufmann},
  isbn          = {0123705916},
  pages         = {508},
  url           = {http://books.google.com/books?hl=en\&amp;lr=\&amp;id=pFSwuqtJgxYC\&amp;oi=fnd\&amp;pg=PR17\&amp;dq=The+Art+of+Multiprocessor+Programming\&amp;ots=10PxurGwhV\&amp;sig=6Z-Y\_kIOAcE937Aszr3JIHEgUu4},
  abstract      = {{T}he computer industry is in the midst of a fundamental change. {T}he
	change is from architectures founded on single-processor chips to
	those with multiprocessor chips. {T}his will in turn require a fundamental
	change in how programs are written. {M}ultiprocessor programming,
	also known as {M}ulticore programming, requires new principles, algorithms,
	and programming tools. {M}ulticore programming has been practiced
	on single processor machines for some time. {T}his has been the narrow
	domain of specialists in high performance computing up till now.
	{W}hen multicore processing is performed on the new crop of multiprocessor
	machines though, it becomes much more complex. {T}he key difference
	is the need to understand how separate processors coordinate with
	one another, which is called multiprocessor synchronization. {T}his
	book promises to be the first comprehensive presentation of the principles
	and tools available for programming multiprocessor machines. {I}t
	will be of immediate use to programmers working with the new architectures.
	{F}or example, the next generation of computer game consoles will
	all be multiprocessor-based, and the game industry is currently struggling
	to understand how to address the programming challenges presented
	by these machines.{T}his change in the industry is so fundamental
	that it is certain to require a significant response by universities,
	and courses on multicore programming will become a staple of computer
	science curriculums. {T}he authors are well known and respected in
	this community and both teach and conduct research in this area.
	{P}rof. {M}aurice {H}erlihy is on the faculty of {B}rown {U}niversity.
	{H}e is the recipient of the 2003 {D}ijkstra {P}rize in distributed
	computing. {P}rof. {N}ir {S}havit is on the faculty of {T}el-{A}viv
	{U}niversity and a member of the technical staff at {S}un {M}icrosystems
	{L}aboratories. {I}n 2004 they shared the {G}\"{o}del {P}rize, the
	highest award in theoretical computer science. {THE} book on multicore
	programming, the new paradigm of computer science {W}ritten by the
	worlds most revered experts in multiprocessor programming and performance
	{I}ncludes examples, models, exercises, {P}ower{P}oint slides, and
	sample {J}ava programs.},
  file          = {Herlihy2008.pdf:files\\Herlihy2008.pdf:PDF},
  groups        = {Books},
  keywords      = {BASICS,INTRODUCTION,MULTI-CORE,OVERVIEW,SOFTWARE DESIGN,SOFTWARE DEVELOPMENT},
  mendeley-tags = {BASICS,INTRODUCTION,MULTI-CORE,OVERVIEW,SOFTWARE DESIGN,SOFTWARE DEVELOPMENT},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.27},
}

@Misc{ASSIST,
  author       = {Hilbrich, Robert},
  title        = {{A}rchitecture {S}ynthesis for {S}afety {C}ritical {S}ystems - {ASSIST}},
  year         = {2014},
  howpublished = {online},
  url          = {http://github.com/roberthilbrich/assist-public},
  groups       = {Tools},
  owner        = {hilrob},
  timestamp    = {2014.09.23},
}

@Article{Hilbrich2012,
  author    = {Robert Hilbrich},
  title     = {{H}ow to {S}afely {I}ntegrate {M}ultiple {A}pplications on {E}mbedded {M}any-{C}ore {S}ystems by {A}pplying the "{C}orrectness by {C}onstruction" {P}rinciple},
  journal   = {Advances in Software Engineering},
  year      = {2012},
  volume    = {2012},
  number    = {354274},
  pages     = {14},
  doi       = {http://dx.doi.org/10.1155/2012/354274},
  url       = {http://www.hindawi.com/journals/ase/2012/354274/},
  file      = {Hilbrich2012.pdf:files\\Hilbrich2012.pdf:PDF},
  groups    = {My Publications, Konsolidierung & Integration, Many-Core, Correctness by Construction},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2012.06.14},
}

@Article{Hilbrich2012X,
  author    = {Robert Hilbrich},
  title     = {{H}ow to {S}afely {I}ntegrate {M}ultiple {A}pplications on {E}mbedded {M}any-{C}ore {S}ystems by {A}pplying the "{C}orrectness by {C}onstruction" {P}rinciple},
  journal   = {Advances in Software Engineering},
  year      = {2012},
  volume    = {2012},
  number    = {354274},
  pages     = {14},
  doi       = {http://dx.doi.org/10.1155/2012/354274},
  url       = {http://www.hindawi.com/journals/ase/2012/354274/},
  groups    = {My Publications},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2012.06.14},
}

@InProceedings{Hilbrich2010a,
  author    = {Hilbrich, Robert},
  title     = {{A}n {E}valuation of the {P}erformance of {DPWS} on {E}mbedded {D}evices in a {B}ody {A}rea {N}etwork},
  booktitle = {AINA Workshops},
  year      = {2010},
  volume    = {0},
  publisher = {IEEE Computer Society},
  isbn      = {978-0-7695-4019-1},
  pages     = {520--525},
  doi       = {http://doi.ieeecomputersociety.org/10.1109/WAINA.2010.93},
  address   = {Los Alamitos, CA, USA},
  file      = {Hilbrich2010a.pdf:files\\Hilbrich2010a.pdf:PDF},
  groups    = {My Publications},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.06.07},
}

@InProceedings{Hilbrich2010aX,
  author    = {Hilbrich, Robert},
  title     = {{A}n {E}valuation of the {P}erformance of {DPWS} on {E}mbedded {D}evices in a {B}ody {A}rea {N}etwork},
  booktitle = {AINA Workshops},
  year      = {2010},
  volume    = {0},
  publisher = {IEEE Computer Society},
  isbn      = {978-0-7695-4019-1},
  pages     = {520--525},
  doi       = {http://doi.ieeecomputersociety.org/10.1109/WAINA.2010.93},
  address   = {Los Alamitos, CA, USA},
  groups    = {My Publications},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.06.07},
}

@MastersThesis{Hilbrich2009,
  author    = {Hilbrich, Robert},
  title     = {{D}as {L}eistungspotential von {DPWS} für {S}ervice-orientiertes {U}biquitäres {C}omputing},
  year      = {2009},
  type      = {diploma thesis},
  month     = may,
  abstract  = {{M}it der zunehmenden {D}urchdringung des {A}lltags mit intelligenten
	{C}omputersystemen liegt ein großes {P}otential für {I}nnovationen
	in der engeren {I}ntegration der bereits bestehenden {A}nwendungen
	auf diesen {G}eräten. {N}eben den hohen technischen {A}nforderungen
	der dafür erforderlichen {V}ernetzung, ist auch die {E}ntwicklung
	der notwendigen {S}oftware mit komplexen {H}erausforderungen konfrontiert.
	{D}ie {R}ealisierung von ubiquitären {A}nwendungen erfordert {F}lexibilität,
	{D}ynamik und {I}nteroperabilität auf einer technischen {P}lattform,
	die durch eingeschränkte {R}essourcen gekennzeichnet ist. {I}n dieser
	{D}iplomarbeit wird die {R}ealisierung der ubiquitären {A}nwendungen
	durch {W}eb {S}ervices auf eingebetteten {G}eräten mit dem {D}evices
	{P}rofile for {W}eb {S}ervices ({DPWS}) untersucht. {N}ach einer
	vergleichenden {A}nalyse der {A}nforderungen einer ubiquitären {S}oftware
	mit den {F}ähigkeiten des {D}evices {P}rofile for {W}eb {S}ervices,
	wird empirisch ermittelt, welcher {G}rad an {D}ynamik, {F}lexibilität
	und {P}erformance mit diesem {A}nsatz bereits heute erreicht werden
	kann. {G}rundlage für diese {A}nalyse ist die {M}essung von {L}atenzen
	für {I}nteraktionen zwischen {W}eb {S}ervices auf eingebetteten {G}eräten.
	{D}ie {E}rgebnisse zeigen, dass noch nicht alle {A}nforderungen einer
	ubiquitären {S}oftware durch {DPWS} erfüllt werden können. {T}rotzdem
	besitzt {DPWS} durch seine {S}tärken bei der interoperablen {I}nteraktion
	zwischen heterogenen {G}eräten und der dynamischen {B}estimmung von
	{S}tandortinformationen zur {L}aufzeit ein großes {I}nnovationspotential
	in verschiedenen {A}nwendungsbereichen. {A}llerdings schlägt sich
	die erreichte {D}ynamik und die lose {K}opplung auch in längeren
	{L}atenzen nieder, so dass {W}eb {S}ervices ihren {E}insatz als {M}iddleware
	nicht allein durch ihre {P}erformance begründen können. {W}ith more
	and more intelligent devices pervading everyday life, an increasing
	potential for innovations lies in the integration of the already
	existing applications on these devices. {A}lthough the ubiquitous
	connectivity bears a variety of technical difficulties in itself,
	the development of the necessary software layer is confronted with
	even higher challenges as the implementation of ubiquitous applications
	requires flexibility, mobility and interoperability on a technical
	platform with limited resources. {T}his diploma thesis studies the
	realization of ubiquitous applications through {W}eb {S}ervices on
	embedded devices by using the {D}evices {P}rofile for {W}eb {S}ervices
	({DPWS}). {F}ollowing a detailed survey of the requirements of ubiquitous
	applications and the distinct features of {DPWS}, a detailed description
	of the experiments conducted to analyse the runtime behaviour of
	this approach is given. {I}t is based on the measurement of latencies
	in the interaction between {W}eb {S}ervices on resource-constrained
	devices. {T}he results show that {DPWS} can not satisfy all of the
	requirements of ubiquitous applications. {N}evertheless, the strong
	points of {DPWS}, such as the interoperable interaction between heterogeneous
	devices and the dynamic localisation of service providers, justify
	its potential for innovative applications. {S}till, the loose coupling
	and the flexibility between software components have a noticeable
	impact on the latencies. {T}hus, {DPWS} will not be able to justify
	its use as a middleware solely based on its performance.},
  file      = {Hilbrich2009.pdf:files\\Hilbrich2009.pdf:PDF},
  groups    = {My Publications},
  owner     = {hilrob},
  read      = {done},
  school    = {Humboldt-Universität zu Berlin},
  timestamp = {2010.09.09},
}

@Article{Hilbrich2013,
  author    = {Hilbrich, Robert and Dieudonne, Laurent},
  title     = {{D}eploying {S}afety-{C}ritical {A}pplications on {C}omplex {A}vionics {H}ardware {A}rchitectures},
  journal   = {Journal of Software Engineering and Applications},
  year      = {2013},
  volume    = {06},
  number    = {05},
  pages     = {229--235},
  doi       = {10.4236/jsea.2013.65028},
  url       = {http://www.scirp.org/journal/PaperInformation.aspx?PaperID=31297},
  file      = {Hilbrich2013.pdf:files\\Hilbrich2013.pdf:PDF},
  groups    = {My Publications},
  owner     = {hilrob},
  publisher = {Scientific Research Publishing, Inc.},
  timestamp = {2013.05.16},
}

@Article{Hilbrich2013X,
  author    = {Hilbrich, Robert and Dieudonne, Laurent},
  title     = {{D}eploying {S}afety-{C}ritical {A}pplications on {C}omplex {A}vionics {H}ardware {A}rchitectures},
  journal   = {Journal of Software Engineering and Applications},
  year      = {2013},
  volume    = {06},
  number    = {05},
  pages     = {229--235},
  doi       = {10.4236/jsea.2013.65028},
  url       = {http://www.scirp.org/journal/PaperInformation.aspx?PaperID=31297},
  groups    = {My Publications},
  owner     = {hilrob},
  publisher = {Scientific Research Publishing, Inc.},
  timestamp = {2013.05.16},
}

@InProceedings{Hilbrich2011b,
  author    = {Hilbrich, Robert and Gerlach, Matthias},
  title     = {{V}irtualisierung bei {E}ingebetteten {M}ulticore {S}ystemen: {I}ntegration und {I}solation sicherheitskritischer {F}unktionen},
  booktitle = {INFORMATIK 2011 - Informatik schafft Communities},
  year      = {2011},
  editor    = {Heiß, Hans-Ulrich and Pepper, Peter and Schlingloff, Holger and Schneider, Jörg},
  volume    = {P-192},
  series    = {Lecture Notes in Informatics},
  publisher = {Springer},
  pages     = {76--77},
  url       = {http://www.informatik2011.de/fileadmin/informatik2011/Downloads/Tagungsband.pdf},
  file      = {Hilbrich2011b.pdf:files\\Hilbrich2011b.pdf:PDF},
  groups    = {My Publications},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2011.11.09},
}

@InProceedings{Hilbrich2011bX,
  author    = {Hilbrich, Robert and Gerlach, Matthias},
  title     = {{V}irtualisierung bei {E}ingebetteten {M}ulticore {S}ystemen: {I}ntegration und {I}solation sicherheitskritischer {F}unktionen},
  booktitle = {INFORMATIK 2011 - Informatik schafft Communities},
  year      = {2011},
  editor    = {Heiß, Hans-Ulrich and Pepper, Peter and Schlingloff, Holger and Schneider, Jörg},
  volume    = {P-192},
  series    = {Lecture Notes in Informatics},
  publisher = {Springer},
  pages     = {76--77},
  url       = {http://www.informatik2011.de/fileadmin/informatik2011/Downloads/Tagungsband.pdf},
  groups    = {My Publications},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2011.11.09},
}

@InProceedings{Hilbrich2011,
  author    = {Hilbrich, Robert and Goltz, Hans-Joachim},
  title     = {{M}odel-based generation of static schedules for safety critical multi-core systems in the avionics domain},
  booktitle = {Proceeding of the 4th international workshop on Multicore software engineering},
  year      = {2011},
  series    = {IWMSE '11},
  publisher = {ACM},
  location  = {Waikiki, Honolulu, HI, USA},
  isbn      = {978-1-4503-0577-8},
  pages     = {9--16},
  doi       = {http://doi.acm.org/10.1145/1984693.1984695},
  url       = {http://doi.acm.org/10.1145/1984693.1984695},
  acmid     = {1984695},
  address   = {New York, NY, USA},
  file      = {Hilbrich2011.pdf:files\\Hilbrich2011.pdf:PDF;Hilbrich2011a.pdf:files\\Hilbrich2011a.pdf:PDF;Hilbrich2011b.pdf:files\\Hilbrich2011b.pdf:PDF;Hilbrich2011c.pdf:files\\Hilbrich2011c.pdf:PDF},
  groups    = {My Publications},
  keywords  = {embedded systems, multi-core, static schedules},
  numpages  = {8},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2011.06.28},
}

@InProceedings{Hilbrich2011X,
  author    = {Hilbrich, Robert and Goltz, Hans-Joachim},
  title     = {{M}odel-based generation of static schedules for safety critical multi-core systems in the avionics domain},
  booktitle = {Proceeding of the 4th international workshop on Multicore software engineering},
  year      = {2011},
  series    = {IWMSE '11},
  publisher = {ACM},
  location  = {Waikiki, Honolulu, HI, USA},
  isbn      = {978-1-4503-0577-8},
  pages     = {9--16},
  doi       = {http://doi.acm.org/10.1145/1984693.1984695},
  url       = {http://doi.acm.org/10.1145/1984693.1984695},
  acmid     = {1984695},
  address   = {New York, NY, USA},
  groups    = {My Publications},
  keywords  = {embedded systems, multi-core, static schedules},
  numpages  = {8},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2011.06.28},
}

@InProceedings{Hilbrich2011c,
  author    = {Hilbrich, Robert and van Kampenhout, J. Reinier},
  title     = {{P}artitioning and {T}ask {T}ransfer on {N}o{C}-based {M}any-{C}ore {P}rocessors in the {A}vionics {D}omain},
  booktitle = {4. Workshop: Entwicklung zuverlässiger Software-Systeme},
  year      = {2011},
  pages     = {1--6},
  url       = {http://pi.informatik.uni-siegen.de/stt/31_3/01_Fachgruppenberichte/ada/1-Hilbrich-many-core.pdf},
  file      = {Hilbrich2011c.pdf:files\\Hilbrich2011c.pdf:PDF},
  groups    = {My Publications},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2011.11.09},
}

@InProceedings{Hilbrich2011cX,
  author    = {Hilbrich, Robert and van Kampenhout, J. Reinier},
  title     = {{P}artitioning and {T}ask {T}ransfer on {N}o{C}-based {M}any-{C}ore {P}rocessors in the {A}vionics {D}omain},
  booktitle = {4. Workshop: Entwicklung zuverlässiger Software-Systeme},
  year      = {2011},
  pages     = {1--6},
  url       = {http://pi.informatik.uni-siegen.de/stt/31_3/01_Fachgruppenberichte/ada/1-Hilbrich-many-core.pdf},
  groups    = {My Publications},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2011.11.09},
}

@InBook{Hilbrich2012a,
  author    = {Hilbrich, Robert and van Kampenhout, J. Reinier and Daun, Marian and Weyer, Thorsten},
  title     = {{M}odel-{B}ased {E}ngineering of {E}mbedded {S}ystems - {T}he {SPES} 2020 {M}ethodology},
  year      = {2012},
  publisher = {Springer Berlin Heidelberg},
  chapter   = {Modeling Quality Aspects: Real-Time},
  pages     = {119--128},
  doi       = {10.1007/978-3-642-34614-9},
  url       = {http://www.springer.com/computer/swe/book/978-3-642-34613-2},
  abstract  = {Embedded systems have long become essential in application areas in
	which human control is impossible or infeasible. The development
	of modern embedded systems is becoming increasingly difficult and
	challenging because of their overall system complexity, their tighter
	and cross-functional integration, the increasing requirements concerning
	safety and real-time behavior, and the need to reduce development
	and operation costs.
	
	
	This book provides a comprehensive overview of the Software Platform
	Embedded Systems (SPES) modeling framework and demonstrates its applicability
	in embedded system development in various industry domains such as
	automation, automotive, avionics, energy, and healthcare. In SPES
	2020, twenty-one partners from academia and industry have joined
	forces in order to develop and evaluate in different industrial domains
	a modeling framework that reflects the current state of the art in
	embedded systems engineering.
	
	
	The book is mainly aimed at professionals and practitioners who deal
	with the development of embedded systems on a daily basis. Researchers
	in academia and industry may use it as a compendium for the requirements
	and state-of-the-art solution concepts for embedded systems development.},
  groups    = {Books, My Publications},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2012.11.27},
}

@InBook{Hilbrich2012aX,
  author    = {Hilbrich, Robert and van Kampenhout, J. Reinier and Daun, Marian and Weyer, Thorsten},
  title     = {{M}odel-{B}ased {E}ngineering of {E}mbedded {S}ystems - {T}he {SPES} 2020 {M}ethodology},
  year      = {2012},
  publisher = {Springer Berlin Heidelberg},
  chapter   = {Modeling Quality Aspects: Real-Time},
  pages     = {119--128},
  doi       = {10.1007/978-3-642-34614-9},
  url       = {http://www.springer.com/computer/swe/book/978-3-642-34613-2},
  abstract  = {Embedded systems have long become essential in application areas in
	which human control is impossible or infeasible. The development
	of modern embedded systems is becoming increasingly difficult and
	challenging because of their overall system complexity, their tighter
	and cross-functional integration, the increasing requirements concerning
	safety and real-time behavior, and the need to reduce development
	and operation costs.
	
	
	This book provides a comprehensive overview of the Software Platform
	Embedded Systems (SPES) modeling framework and demonstrates its applicability
	in embedded system development in various industry domains such as
	automation, automotive, avionics, energy, and healthcare. In SPES
	2020, twenty-one partners from academia and industry have joined
	forces in order to develop and evaluate in different industrial domains
	a modeling framework that reflects the current state of the art in
	embedded systems engineering.
	
	
	The book is mainly aimed at professionals and practitioners who deal
	with the development of embedded systems on a daily basis. Researchers
	in academia and industry may use it as a compendium for the requirements
	and state-of-the-art solution concepts for embedded systems development.},
  groups    = {My Publications},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2012.11.27},
}

@InProceedings{Hilbrich2011a,
  author       = {Hilbrich, Robert and van Kampenhout, J. Reinier and Goltz, Hans-Joachim},
  title        = {{M}odellbasierte {G}enerierung statischer {S}chedules für sicherheitskritische, eingebettete {S}ysteme mit {M}ulticore-{P}rozessoren und harten {E}chtzeitanforderungen},
  booktitle    = {Herausforderungen durch den Echtzeitbetrieb - Echtzeit 2011},
  year         = {2011},
  editor       = {W. A. Halang},
  series       = {Informatik aktuell},
  number       = {VIII},
  organization = {Gesellschaft für Informatik (GI)},
  publisher    = {Springer},
  isbn         = {978-3-642-24657-9},
  pages        = {29--38},
  file         = {Hilbrich2011a.pdf:files\\Hilbrich2011a.pdf:PDF},
  groups       = {My Publications, (RT-) Scheduling},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2011.11.09},
}

@InProceedings{Hilbrich2011aX,
  author       = {Hilbrich, Robert and van Kampenhout, J. Reinier and Goltz, Hans-Joachim},
  title        = {{M}odellbasierte {G}enerierung statischer {S}chedules für sicherheitskritische, eingebettete {S}ysteme mit {M}ulticore-{P}rozessoren und harten {E}chtzeitanforderungen},
  booktitle    = {Herausforderungen durch den Echtzeitbetrieb - Echtzeit 2011},
  year         = {2011},
  editor       = {W. A. Halang},
  series       = {Informatik aktuell},
  number       = {VIII},
  organization = {Gesellschaft für Informatik (GI)},
  publisher    = {Springer},
  isbn         = {978-3-642-24657-9},
  pages        = {29--38},
  groups       = {My Publications},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2011.11.09},
}

@InProceedings{Hilbrich2010,
  author    = {Hilbrich, Robert and van Kampenhout, Reinier},
  title     = {{D}ynamic reconfiguration in {N}o{C}-based {MPS}o{C}s in the avionics domain},
  booktitle = {IWMSE '10: Proceedings of the 3rd International Workshop on Multicore Software Engineering},
  year      = {2010},
  publisher = {ACM},
  location  = {Cape Town, South Africa},
  isbn      = {978-1-60558-964-0},
  pages     = {56--57},
  doi       = {http://doi.acm.org/10.1145/1808954.1808970},
  address   = {New York, NY, USA},
  file      = {Hilbrich2010.pdf:files\\Hilbrich2010.pdf:PDF;Hilbrich2010a.pdf:files\\Hilbrich2010a.pdf:PDF},
  groups    = {My Publications},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.06.07},
}

@InProceedings{Hilbrich2010X,
  author    = {Hilbrich, Robert and van Kampenhout, Reinier},
  title     = {{D}ynamic reconfiguration in {N}o{C}-based {MPS}o{C}s in the avionics domain},
  booktitle = {IWMSE '10: Proceedings of the 3rd International Workshop on Multicore Software Engineering},
  year      = {2010},
  publisher = {ACM},
  location  = {Cape Town, South Africa},
  isbn      = {978-1-60558-964-0},
  pages     = {56--57},
  doi       = {http://doi.acm.org/10.1145/1808954.1808970},
  address   = {New York, NY, USA},
  groups    = {My Publications},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.06.07},
}

@TECHREPORT{Hilbrich2011d,
  author = {Hilbrich, Robert and Kamprath, Sebastian},
  title = {{K}onzept für ein {F}ramework zur werkzeugbasierten {D}okumentation
	auf der {G}rundlage bestehender {Z}ertifizierungsvorschriften},
  institution = {Fraunhofer-Institut für Rechnerarchitektur und Softwaretechnik},
  year = {2011},
  type = {Projektbericht aus dem Projekt: Software Plattform Embedded Systems
	2020},
  number = {SPES 2020 - Deliverable D5.1.C},
  note = {verfügbar unter \url{http://www.spes2020.de}},
  owner = {hilrob},
  timestamp = {2013.11.29}
}

@Book{Hilderman2007,
  author    = {Hilderman, V. and Baghi, T.},
  title     = {{A}vionics {C}ertification: {A} {C}omplete {G}uide to {DO}-178 ({S}oftware), {DO}-254 ({H}ardware)},
  year      = {2007},
  publisher = {Avionics Communications, Incorporated},
  isbn      = {9781885544254},
  pages     = {244},
  abstract  = {The authors take you step-by-step through each milestone on the way
	to certification. They describe hundreds of examples, cases and actual
	experiences acquired while winning approvals for over 300 programs.
	
	
	DO-178B and DO-254, they explain, are intentionally written to be
	vague.The documents contain considerations, not requirements----but
	you won't get certified without them. To reach that goal, the authors
	offer practical advice acquired over two decades of certifications
	now flying aboard every major airliner and numerous military projects.
	"We don't teach regulations," they say, "but how to think like the
	FAA."
	
	
	They fill the book with anecdotes that show how many companies make
	false starts, waste time and break budgets. Each myth and misconception
	about DO-178B and DO-254 is dissected and debunked.. You'll also
	find the best way to get a project started (begin with the "big bang"
	or an evolutionary approach). There is even guidance on how to staff
	a project.
	
	
	After traveling the certification route so often, the authors have
	strong opinions, and they don't hold them back. For example; when
	should you argue with your government auditor, how to deal with a
	DER (Designated Engineering Representative) and what are typical
	numbers for lines of code? Then there's story of how one little comma
	(,) in the wrong place cost $125 million on a trip to Mars. You'll
	get a chuckle over software that deteriorates into science projects,
	or dealing with engineers who become artists. There are suggestions
	on when to give your manager a raise.
	
	
	There's advice on which tools to use and what to avoid, the merits
	of different programming languages, what the D in DO-178B should
	really mean, when planning can be too good, why some managers get
	it right the first time, some the second, some the third (and when
	it's too many times). There's the sad tale of a Very Light Jet manufacturer
	who ignored the authors' advice about unacceptable software in redundant
	systems. The FAA rejected it and the company lost $10 million.
	
	
	This book is not a typical tutorial. Besides their software services,
	are active trainers. Between them, they've taught DO-178B/DO-254
	to more students than all other seminars combined. Their wisdom can
	provide valuable insights to bring your project to a successful conclusion.},
  groups    = {Books, Domänen-spezifisch, Standards & Normen},
  lccn      = {2007000314},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2013.02.14},
}

@Article{Hill2008,
  author    = {Hill, Mark D. and Marty, Michael R.},
  title     = {{A}mdahl's {L}aw in the {M}ulticore {E}ra},
  journal   = {IEEE Computer},
  year      = {2008},
  volume    = {41},
  issue     = {7},
  month     = jul,
  pages     = {33--38},
  issn      = {0018-9162},
  doi       = {10.1109/MC.2008.209},
  url       = {http://portal.acm.org/citation.cfm?id=1449375.1449387},
  abstract  = {{W}e apply {A}mdahl's {L}aw to multicore chips using symmetric cores,
	asymmetric cores, and dynamic techniques that allows cores to work
	together on sequential execution. {T}o {A}mdahl's simple software
	model, we add a simple hardware model based on fixed chip resources.
	{A} key result we find is that, even as we enter the multicore era,
	researchers should still seek methods of speeding sequential execution.
	{M}oreover, methods that appear locally inefficient (e.g., tripling
	sequential performance with a 9x resource cost) can still be globally
	efficient as they reduce the sequential phase when the rest of the
	chip's resources are idle. {T}o reviewers: {T}his paper's accessible
	form is between a research contribution and a perspective. {I}t seeks
	to stimulate discussion, controversy, and future work. {I}n addition,
	it seeks to temper the current pendulum swing from the past's underemphasis
	on parallel research to a future with too little sequential research.},
  acmid     = {1449387},
  address   = {Los Alamitos, CA, USA},
  file      = {Hill2008.pdf:files\\Hill2008.pdf:PDF},
  groups    = {Many-Core, Multi-Core Allgemein},
  keywords  = {AMDAHL},
  numpages  = {6},
  owner     = {hilrob},
  publisher = {IEEE Computer Society Press},
  read      = {reading},
  timestamp = {2011.05.21},
}

@Book{Hoare1985,
  author        = {Hoare, C. A. R.},
  title         = {{C}ommunicating {S}equential {P}rocesses},
  year          = {1985},
  publisher     = {Prentice Hall},
  isbn          = {0-13-153271-5},
  url           = {http://www.usingcsp.com/cspbook.pdf},
  file          = {Hoare1985.pdf:files\\Hoare1985.pdf:PDF},
  groups        = {Books},
  keywords      = {CSP,FORMAL METHODS,FORMAL SPECIFICATION,INTRODUCTION,THEORY},
  mendeley-tags = {CSP,FORMAL METHODS,FORMAL SPECIFICATION,INTRODUCTION,THEORY},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.27},
}

@Article{Hoare1978,
  author        = {Hoare, C. A. R.},
  title         = {{C}ommunicating sequential processes},
  journal       = {Communications of the ACM},
  year          = {1978},
  volume        = {21},
  number        = {8},
  month         = aug,
  pages         = {666--677},
  issn          = {00010782},
  doi           = {10.1145/359576.359585},
  url           = {http://portal.acm.org/citation.cfm?doid=359576.359585},
  abstract      = {{T}his paper suggests that input and output are basic primitives of
	programming and that parallel composition of communicating sequential
	processes is a fundamental program structuring method. {W}hen combined
	with a development of {D}ijkstra's guarded command, these concepts
	are surprisingly versatile. {T}heir use is illustrated by sample
	solutions of a variety of a familiar programming exercises.},
  file          = {Hoare1978.pdf:files\\Hoare1978.pdf:PDF},
  keywords      = {CSP,MODELING,PARALLEL PROGRAMMING,THEORY},
  mendeley-tags = {CSP,MODELING,PARALLEL PROGRAMMING,THEORY},
  owner         = {hilrob},
  publisher     = {ACM},
  read          = {unread},
  timestamp     = {2010.05.28},
}

@TechReport{Hobbs2011,
  author      = {Hobbs, Chris},
  title       = {{E}insatz eines {IEC} 61508-zertifizierten {K}ernels für sicherheitskritische {S}ysteme},
  institution = {QNX Software Systems},
  year        = {2011},
  type        = {Whitepaper},
  url         = {http://www.elektronikpraxis.vogel.de/fachwissen/whitepaper/downloads/16025},
  abstract    = {{I}n diesem {W}hitepaper geht es um die {B}esonderheiten eines {S}afe
	{K}ernel, also eines speziellen, bestimmte {K}riterien erfüllenden
	{B}etriebssystemkerns. {E}s gibt einen {Ü}berblick über den {QNX}({R}){N}eutrino({TM})
	{RTOS} {S}afe {K}ernel, welcher nach {IEC} 61508, {S}afety {I}ntegrity
	{L}evel 3, zertifiziert wurde. {F}erner werden einige wichtige {V}oraussetzungen
	diskutiert, die bei der {E}ntwicklung von {A}pplikationen auf {B}asis
	eines {S}afe {K}ernels eine {R}olle spielen, wie passende {W}erkzeuge,
	{D}okumentation und {S}chulung.},
  file        = {Hobbs2011.pdf:files\\Hobbs2011.pdf:PDF},
  groups      = {(RT-) Embedded Systems, Reliability & Dependability, (RT-) Scheduling, Virtualisierung & Partitionierung},
  keywords    = {61508, KERNEL, MICROKERNELS, QNX,},
  owner       = {hilrob},
  read        = {done},
  timestamp   = {2011.02.08},
}

@TechReport{Hobbs2010,
  author      = {Hobbs, Chris},
  title       = {{P}rotecting {A}pplications {A}gainst {H}eisenbugs},
  institution = {QNX Software Systems},
  year        = {2010},
  type        = {Whitepaper},
  month       = feb,
  url         = {http://www.qnx.com/download/download/21289/qnx_heisenbugs_MC411.80.pdf},
  abstract    = {{V}irtually-synchronous replication provides a mechanism that allows
	developers of mission- and safety-critical applications to reduce
	the impact of elusive and nonreproducible bugs - commonly known as
	{H}eisenbugs - in their applications. {T}his approach requires little
	or no modification to existing application code, and significantly
	improves the software availability.},
  file        = {Hobbs2010.pdf:files\\Hobbs2010.pdf:PDF},
  groups      = {(RT-) Embedded Systems, Many-Core, On-Chip Interconnect / NoC, Reliability & Dependability},
  keywords    = {HEISENBUG; QNX;},
  owner       = {hilrob},
  read        = {done},
  timestamp   = {2011.02.09},
}

@InProceedings{Hoche2003,
  author    = {Hoche, Matthias and Müller, Henry and Schlenker, Hans and Wolf, Armin},
  title     = {firstcs - {A} {P}ure {J}ava {C}onstraint {P}rogramming {E}ngine},
  booktitle = {2nd International Workshop on Multiparadigm Constraint Programming Languages - MultiCPL'03},
  year      = {2003},
  month     = sep,
  pages     = {55--66},
  groups    = {Tools},
  owner     = {hilrob},
  timestamp = {2013.09.18},
}

@Book{Hofstedt2007,
  author        = {Hofstedt, Petra and Wolf, Armin},
  title         = {{E}inführung in die {C}onstraint-{P}rogrammierung: {G}rundlagen, {M}ethoden, {S}prachen, {A}nwendungen},
  year          = {2007},
  series        = {eXamen.press},
  publisher     = {Springer},
  isbn          = {3540231846},
  pages         = {388},
  abstract      = {{D}ie {C}onstraint-{P}rogrammierung liefert {M}ethoden zur effizienten
	{M}odellierung von {S}ystemen oder zur {L}\"{o}sung von {P}roblemstellungen,
	bei denen nur unvollst\"{a}ndige {I}nformationen vorliegen (z.{B}.
	{E}ntscheidungssysteme, {O}ptimierungsprobleme, {A}nalyse stochastischer
	{P}rozesse), sowie zur {L}\"{o}sung kombinatorischer {P}robleme ({R}essourcenmanagement)
	oder auch bei der {E}ntwicklung komplexer {D}eduktionssysteme. {D}ieses
	{L}ehrbuch gibt eine kompakte {E}inf\"{u}hrung in die {C}onstraint-{P}rogrammierung.
	{D}abei werden neben allgemeinen theoretischen {G}rundlagen auch
	{S}prachen, {M}ethoden und {V}erfahren zur {M}odellierung und {L}\"{o}sung
	von {C}onstraint-{P}roblemen vorgestellt sowie deren {A}nwendungsfelder
	betrachtet und anhand typischer {B}eispiele wie {T}erminplanung,
	{F}inanzwesen, {O}ptimierung, {S}imulation und {D}iagnose vergegenst\"{a}ndlicht.
	{D}as {B}uch richtet sich an {S}tudierende der {I}nformatik im {H}auptstudium.
	{E}s basiert auf einer einsemestrigen {V}orlesung mit \"{U}bungen
	der {A}utoren. {TOC}:{E}inf\"{u}hrung.- {P}r\"{a}dikatenlogik.- {L}ogische
	{P}rogrammierung.- {L}ogische {P}rogrammierung mit {C}onstraints.-
	{C}onstraints und {C}onstraint-{S}ysteme.- {C}onstraint-{L}\"{o}ser.-
	{F}inite-{D}omain-{C}onstraints.- {L}ineare {A}rithmetische {C}onstraints.-
	{I}ntervall-{A}rithmetik-{C}onstraints.- {C}onstraint-{S}prachen.-
	{C}onstraint-{H}andling-{R}ules.- {C}oncurrent-{C}onstraint-{P}rogrammierung.-
	{C}onstraintimperative und {O}bjektorientierte {P}rogrammierung.-
	{M}ultiparadigmen-{P}rogrammiersprachen.- {M}odellierung von {C}onstraint-{P}roblemen.-
	{G}lobale {C}onstraints.- {R}edundante und implizite {C}onstraints.-
	{S}ymmetrien und {T}ransformationen.- {L}\"{o}sen von {C}onstraint-{P}roblemen.-
	{S}uche und {O}ptimierung.- {H}euristiken.},
  file          = {Hofstedt2007.pdf:files\\Hofstedt2007.pdf:PDF},
  groups        = {Books},
  issn          = {1614-5216},
  keywords      = {CONSTRAINT PROGRAMMING,INTRODUCTION,OPTIMIZATION,OVERVIEW,SIMULATION},
  mendeley-tags = {CONSTRAINT PROGRAMMING,INTRODUCTION,OPTIMIZATION,OVERVIEW,SIMULATION},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.27},
}

@Article{Holt2009,
  author        = {Holt, Jim and Agarwal, Anant and Brehmer, Sven and Domeika, Max and Griffin, Patrick and Schirrmeister, Frank},
  title         = {{S}oftware {S}tandards for the {M}ulticore {E}ra},
  journal       = {IEEE Micro},
  year          = {2009},
  volume        = {29},
  number        = {3},
  pages         = {40--51},
  issn          = {0272-1732},
  doi           = {10.1109/MM.2009.48},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5076438},
  abstract      = {{S}ystems architects commonly use multiple cores to improve system
	performance. {U}nfortunately, multicore hardware is evolving faster
	than software technologies. {N}ew multicore software standards are
	necessary in light of the new challenges and capabilities that embedded
	multicore systems provide. {T}he newly released multicore communications
	{API} standard targets small-footprint, highly efficient intercore
	and interchip communications.},
  file          = {Holt2009.pdf:files\\Holt2009.pdf:PDF},
  keywords      = {MCAPI,MULTI-CORE,NOC,ON-CHIP-INTERCONNECT},
  mendeley-tags = {MCAPI,MULTI-CORE,NOC,ON-CHIP-INTERCONNECT},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@InProceedings{Holzenspies2008,
  author        = {Hölzenspies, Philip K. F. and Hurink, Johann L. and Kuper, Jan and Smit, Gerard J. M.},
  title         = {{R}un-{T}ime {S}patial {M}apping of {S}treaming {A}pplications to a {H}eterogeneous {M}ulti-{P}rocessor {S}ystem-on-{C}hip ({MPS}o{C})},
  booktitle     = {Proceedings of the conference on Design, automation and test in Europe - DATE '08},
  year          = {2008},
  publisher     = {ACM Press},
  isbn          = {9783981080131},
  pages         = {212},
  doi           = {10.1145/1403375.1403427},
  url           = {http://portal.acm.org/citation.cfm?doid=1403375.1403427},
  abstract      = {{I}n this paper, we present an algorithm for run-time allocation of
	hardware resources to software applications. {W}e define the sub-problem
	of run-time spatial mapping and demonstrate our concept for streaming
	applications on heterogeneous {MPS}o{C}s. {T}he underlying algorithm
	and the methods used therein are implemented and their use is demonstrated
	with an illustrative example.},
  address       = {New York, New York, USA},
  annote        = {A run-time spatial mapping algorithm is presented that guarantees the found solutions are verifiable for feasability.},
  file          = {Holzenspies2008.pdf:files\\Holzenspies2008.pdf:PDF},
  keywords      = {MPSOC,MULTI-CORE,NOC,ON-CHIP-INTERCONNECT},
  mendeley-tags = {MPSOC,MULTI-CORE,NOC,ON-CHIP-INTERCONNECT},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.28},
}

@Article{Holzmann1997,
  author    = {Holzmann, G.J.},
  title     = {{T}he model checker {SPIN}},
  journal   = {Software Engineering, IEEE Transactions on},
  year      = {1997},
  volume    = {23},
  number    = {5},
  pages     = {279--295},
  issn      = {0098-5589},
  doi       = {10.1109/32.588521},
  abstract  = {SPIN is an efficient verification system for models of distributed
	software systems. It has been used to detect design errors in applications
	ranging from high-level descriptions of distributed algorithms to
	detailed code for controlling telephone exchanges. The paper gives
	an overview of the design and structure of the verifier, reviews
	its theoretical foundation, and gives an overview of significant
	practical applications},
  file      = {Holzmann1997.pdf:files\\Holzmann1997.pdf:PDF},
  groups    = {Formale Methoden, Tools},
  keywords  = {distributed processing;formal specification;formal verification;SPIN model checker;design error detection;detailed code;distributed software system models;efficient verification system;high-level distributed algorithm descriptions;telephone exchange control;verifier design;verifier structure;Algorithm design and analysis;Application software;Concurrent computing;Control system synthesis;Design methodology;Distributed algorithms;Error correction codes;Message passing;Software systems;Telephony},
  owner     = {hilrob},
  timestamp = {2013.06.20},
}

@Book{Hsiung2011,
  author    = {Hsiung, Pao-Ann and Chen, Yean-Ru and Lin, Chao-Sheng},
  title     = {{M}ulticore {H}ardware-{S}oftware {D}esign and {V}erification {T}echniques},
  year      = {2011},
  edition   = {1},
  publisher = {Bentham Science Publishers},
  pages     = {105},
  abstract  = {The surge of multicore processors coming into the market and on users'
	desktops has made parallel computing the focus of attention once
	again. This time, however, it is led by the industry, which ensures
	that multicore computing is here to stay. Nevertheless, there is
	still so much research work to be done in multicore hardware-software
	designs before consumer applications can leverage the benefits of
	this new paradigm. This e-book is being put forward as a platform
	for immediate collection of state-of-the-art technologies in both
	hardware and software designs for multicore computing. With the burgeoning
	prevalence of multicore processors in embedded systems, real-time
	systems, multimedia systems, bioinformatics systems, network systems,
	to list a few, this e-book attempts to cover the design and verification
	issues related to different application domains as a singular source
	of reference to the state-of-the-art techniques in multicore processor
	design and software programming that covers multiple application
	domains. This e-book will be of immense help to system and software
	engineers, including both experts and non-experts in parallel computing.},
  file      = {Hsiung2011.pdf:files\\Hsiung2011.pdf:PDF},
  groups    = {Books},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.07.16},
}

@InProceedings{Hu2004,
  author    = {Jingcao Hu and Marculescu, R.},
  title     = {{E}nergy-aware communication and task scheduling for network-on-chip architectures under real-time constraints},
  booktitle = {Proc. Design, Automation and Test in Europe Conf. and Exhibition},
  year      = {2004},
  volume    = {1},
  pages     = {234--239},
  doi       = {10.1109/DATE.2004.1268854},
  abstract  = {{I}n this paper, we present a novel {E}nergy-{A}ware {S}cheduling
	({EAS}) algorithm which statically schedules both communication transactions
	and computation tasks onto heterogeneous {N}etwork-on-{C}hip ({N}o{C})
	architectures under realtime constraints. {O}ur algorithm automatically
	assigns tasks onto different processing elements and then schedules
	their execution. {A}t the same time, the algorithm also takes into
	consideration the exact communication delay by scheduling communication
	transactions in parallel. {A}s the main contribution, we first formulate
	the problem of concurrent communication and task scheduling for heterogeneous
	{N}o{C} architectures and then propose an efficient heuristic to
	solve it. {E}xperimental results show that significant energy savings
	can be achieved by using our energy-aware scheduler while meeting
	the specified performance constraints. {F}or instance, for a complex
	multimedia application, 44% energy savings have been observed, on
	average, compared to the schedules generated by a standard earliest-deadline-first
	scheduler.},
  file      = {Hu2004.pdf:files\\Hu2004.pdf:PDF},
  groups    = {Energy & Power, (RT-) Scheduling},
  keywords  = {TASK-ALLOCATION,ENERGY},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.06.09},
}

@Misc{IAD2007,
  author      = {IAD},
  title       = {{U}.{S}. {G}overnment {P}rotection {P}rofile for {S}eparation {K}ernels in {E}nvironments {R}equiring {H}igh {R}obustness},
  year        = {2007},
  type        = {Protection Profile},
  url         = {http://www.niap-ccevs.org/cc-scheme/pp/pp.cfm/id/pp_skpp_hr_v1.03/},
  file        = {IAD2007.pdf:files\\IAD2007.pdf:PDF},
  groups      = {Reliability & Dependability, Virtualisierung & Partitionierung, Standards & Normen},
  institution = {Information Assurance Directorate},
  owner       = {hilrob},
  read        = {unread},
  timestamp   = {2011.02.23},
}

@Misc{IEEE1220-2005,
  author    = {IEEE},
  title     = {{IEEE} {S}tandard for {A}pplication and {M}anagement of the {S}ystems {E}ngineering {P}rocess},
  url       = {https://standards.ieee.org/findstds/standard/1220-2005.html},
  groups    = {Standards & Normen},
  owner     = {hilrob},
  timestamp = {2014.04.17},
}

@BOOK{Illik2007,
  title = {{V}erteilte {S}ysteme: {A}rchitekturen und {S}oftware-{T}echnologien},
  publisher = {expert-Verlag},
  year = {2007},
  author = {Illik, J.A.},
  series = {Reihe Technik},
  isbn = {9783816927303},
  owner = {hilrob},
  timestamp = {2014.08.29},
  url = {http://books.google.de/books?id=divZXycPh9EC}
}

@Misc{IntelParallelStudio2013,
  author    = {Intel\textregistered{}},
  title     = {{P}arallel {S}tudio {XE} {S}uite},
  year      = {2014},
  month     = jan,
  url       = {http://software.intel.com/en-us/intel-parallel-studio-xe/},
  groups    = {Tools},
  owner     = {hilrob},
  timestamp = {2014.01.14},
}

@Misc{ISO61508-1,
  author      = {{International Electrotechnical Commission}},
  title       = {{IEC} 61508-1:2010: {F}unctional safety of electrical/electronic/programmable electronic safety related systems - {P}art 1: {G}eneral requirements},
  year        = {2010},
  language    = {english},
  month       = apr,
  file        = {ISO61508-1.pdf:files\\ISO61508-1.pdf:PDF},
  groups      = {Standards & Normen},
  institution = {IEC},
  number      = {IEC 61508-1:2010},
  optnumber   = {61508},
  owner       = {hilrob},
  read        = {done},
  revision    = {2.0},
  timestamp   = {2011.01.10},
}

@Misc{ISO61508-2,
  author      = {{International Electrotechnical Commission}},
  title       = {{IEC} 61508-2:2010: {F}unctional safety of electrical/electronic/programmable electronic safety related systems - {P}art 2: {R}equirements for electrical/electronic/programmable electronic safety related systems},
  year        = {2010},
  language    = {english},
  month       = apr,
  file        = {ISO61508-2.pdf:files\\ISO61508-2.pdf:PDF},
  groups      = {Standards & Normen},
  institution = {IEC},
  number      = {IEC 61508-2:2010},
  optnumber   = {61508},
  owner       = {hilrob},
  read        = {done},
  revision    = {2.0},
  timestamp   = {2011.01.10},
}

@Misc{ISO61508-3,
  author      = {{International Electrotechnical Commission}},
  title       = {{IEC} 61508-3:2010: {F}unctional safety of electrical/electronic/programmable electronic safety related systems - {P}art 3: {S}oftware requirements},
  year        = {2010},
  language    = {english},
  month       = apr,
  file        = {ISO61508-3.pdf:files\\ISO61508-3.pdf:PDF},
  groups      = {Standards & Normen},
  institution = {IEC},
  number      = {IEC 61508-3:2010},
  optnumber   = {61508},
  owner       = {hilrob},
  read        = {done},
  revision    = {2.0},
  timestamp   = {2011.01.10},
}

@Misc{ISO61508-6,
  author      = {{International Electrotechnical Commission}},
  title       = {{IEC} 61508-6:2010: {F}unctional safety of electrical/electronic/programmable electronic safety-related systems - {P}art 6: {G}uidelines on the application of {IEC} 61508-2 and {IEC} 61508-3},
  year        = {2010},
  language    = {english},
  month       = apr,
  file        = {ISO61508-6.pdf:files\\ISO61508-6.pdf:PDF},
  institution = {IEC},
  number      = {IEC 61508-6:2010},
  optnumber   = {61508},
  owner       = {hilrob},
  read        = {done},
  revision    = {2.0},
  timestamp   = {2011.01.10},
}

@Misc{ISO15288,
  author    = {{International Organization for Standardization}},
  title     = {{ISO/IEC 15288:2002 Systems engineering -- System life cycle processes}, institution = {International Organization for Standardization}},
  year      = {2002},
  groups    = {Standards & Normen},
  owner     = {hilrob},
  timestamp = {2014.04.17},
}

@Misc{ISO26262,
  author      = {{International Standards Organization}},
  title       = {{F}unctional {S}afety for {R}oad {V}ehicles},
  year        = {2009},
  type        = {Draft International Standard},
  file        = {ISO26262.pdf:files\\ISO26262.pdf:PDF},
  groups      = {Standards & Normen},
  institution = {International Standards Organization},
  number      = {ISO 26262},
  owner       = {hilrob},
  read        = {done},
  timestamp   = {2011.01.10},
}

@MISC{ISO-9241-110,
  author = {ISO},
  title = {{E}rgonomie der {M}ensch-{S}ystem-{I}nteraktion - {T}eil 110: {G}rundsätze
	der {D}ialoggestaltung ({ISO} 9241-110:2006)},
  year = {2008},
  added-at = {2008-10-23T15:49:48.000+0200},
  number = {DIN EN ISO 9241-110},
  owner = {hilrob},
  type = {Norm}
}

@Misc{ITRS2005,
  author    = {ITRS},
  title     = {{I}nternational {T}echnology {R}oadmap for {S}emiconductors: {I}nterconnect},
  year      = {2005},
  groups    = {Energy & Power},
  owner     = {kamjac},
  read      = {done},
  timestamp = {2010.02.04},
}

@InProceedings{Jacobs2009,
  author    = {Jacobs, A. and Cieslewski, G. and George, A.},
  title     = {{A}daptive {S}oftware-based {F}ault {T}olerance for {S}pace {M}ulticore {P}rocessing},
  booktitle = {Workshop for Multicore Processors For Space - Opportunities and Challenges, IEEE International Conference on Space Mission Challenges for Information Technology (SMC-IT)},
  year      = {2009},
  url       = {http://www.chrec.org/pubs/SMCIT09_F6all.pdf},
  abstract  = {{I}ncreasing demand for high-performance computing in space, coupled
	with limitations of device-level methods for {SEU} mitigation, are
	driving innovations in advanced space computing with system- and
	application-level fault tolerance. {A}s devices increasingly feature
	multicore architectures, the space community must adapt and incorporate
	these devices into future missions. {T}hese multicore devices are
	an increasingly attractive option for processing in space-based systems
	due to their inherent advantages in performance, scalability, energy
	efficiency, size, and cost, but with them come challenges in attaining
	optimal performability. {T}his presentation will highlight research
	activities at the {U}niversity of {F}lorida from two recent projects
	on this path, the {NASA} {D}ependable {M}ultiprocessor ({DM}) developed
	at {F}lorida and {H}oneywell, and the hybrid fault tolerance ({HFT})
	framework of {CHREC}.},
  file      = {Jacobs2009.pdf:files\\Jacobs2009.pdf:PDF},
  groups    = {Domänen-spezifisch, Embedded Multi-Core, Reliability & Dependability},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.10.28},
}

@InProceedings{Jalal2010,
  author    = {Jalal, M. and Shirmohammadi, Z. and Patooghy, A. and Miremadi, S. G.},
  title     = {{E}valuation of {A}pplication {M}apping for {N}etwork-on-{C}hips},
  booktitle = {RTES2010 Conference},
  year      = {2010},
  abstract  = {{M}apping of tasks on the cores of a {N}etwork-on-{C}hip({N}o{C})
	has direct impact on the efficiency of the network. {T}his paper
	provides a comprehensive study regarding application mapping for
	{N}o{C}s to clarify their pros and cons. {T}he study considers different
	aspects including performance, power consumption, and reliability
	of mappings. {F}our mappings named {NMAP}, {RMAP}, {R}andom, and
	{A}dhoc are used in this study by the means of a cycle accurate {N}o{C}
	simulator. {O}ur study shows that the {RMAP} provides the maximum
	reliability for {N}o{C} with a low performance overhead. {O}n the
	other hand, {R}andom mapping requires the lowest time to complete
	mapping of the task on the chip. {T}he power estimation patch of
	{O}rion is used in the simulation to explore the power consumption
	of a typical {N}o{C} using any of the mentioned mappings. {S}imulations
	are done for three different benchmarks i.e., {MPEG}, {VOPD}, and
	{OPD} application graphs.},
  file      = {Jalal2010.pdf:files\\Jalal2010.pdf:PDF},
  groups    = {On-Chip Interconnect / NoC},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2011.03.21},
}

@Book{Jamshidi2009,
  author    = {Jamshidi, M.},
  title     = {{S}ystem of systems engineering: innovations for the 21st century},
  year      = {2009},
  series    = {Wiley series in systems engineering and management},
  publisher = {Wiley},
  isbn      = {9780470195901},
  file      = {Jamshidi2009.pdf:files\\Jamshidi2009.pdf:PDF},
  groups    = {Books, Systems Engineering},
  lccn      = {2008018996},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2012.02.15},
}

@InProceedings{Jannesari2009,
  author    = {Jannesari, A. and Kaibin Bao and Pankratius, Victor and Tichy, W.F.},
  title     = {{H}elgrind+: {A}n efficient dynamic race detector},
  booktitle = {Parallel Distributed Processing, 2009. IPDPS 2009. IEEE International Symposium on},
  year      = {2009},
  pages     = {1--13},
  doi       = {10.1109/IPDPS.2009.5160998},
  abstract  = {Finding synchronization defects is difficult due to non-deterministic
	orderings of parallel threads. Current tools for detecting synchronization
	defects tend to miss many data races or produce an overwhelming number
	of false alarms. In this paper, we describe Helgrind+, a dynamic
	race detection tool that incorporates correct handling of condition
	variables and a combination of the lockset algorithm and happens-before
	relation. We compare our techniques with Intel Thread Checker and
	the original Helgrind tool on two substantial benchmark suites. Helgrind+
	reduces the number of both false negatives (missed races) and false
	positives. The additional accuracy incurs almost no performance overhead.},
  groups    = {Tools},
  issn      = {1530-2075},
  keywords  = {parallel programming;synchronisation;Helgrind+;Intel Thread Checker;dynamic race detector;happens-before relation;lockset algorithm;parallel threads;synchronization defects;Debugging;Detectors;Dynamic programming;Event detection;Parallel processing;Parallel programming;Switches;System recovery;Testing;Yarn},
  owner     = {hilrob},
  timestamp = {2014.01.14},
}

@InProceedings{Jannesari2010,
  author        = {Jannesari, Ali and Tichy, Walter F.},
  title         = {{I}dentifying {A}d-hoc {S}ynchronization for {E}nhanced {R}ace {D}etection},
  booktitle     = {International Parallel \& Distributed Processing Symposium (IPDPS'10)},
  year          = {2010},
  abstract      = {{P}arallel programs contain a surprising number of ad-hoc synchronization
	operations. {A}d-hoc synchronization operations are loops that busy-wait
	on condition variables. {C}urrent race detectors produce unnecessary
	warnings (false positives) when ad-hoc synchronization is used. {F}alse
	positives are also generated when programmers use synchronization
	primitives that are unknown to race detectors, for instance when
	programmers switch libraries. {T}hese shortcomings may result in
	an overwhelming number of false positives, dissuading programmers
	from using race detectors. {T}his paper shows that ad-hoc synchronization
	operations can be detected automatically. {T}he method requires no
	user intervention such as annotations and has been implemented in
	the race detector {H}elgrind+. {E}valuation results on various benchmarks
	confirm that {H}elgrind+ is aware of all synchronizations in programs,
	reliably reports true races, and produces few false alarms. {A} surprising
	result is that with the new technique, {H}elgrind+ can analyze synchronization
	libraries, so special knowledge about these libraries is not needed
	in the detector.},
  annote        = {- Metadaten recherchieren},
  file          = {Jannesari2010.pdf:files\\Jannesari2010.pdf:PDF},
  keywords      = {AD-HOC SYNCHRONIZATION,CONCURRENCY,HELGRIND+,MULTI-CORE,PARALLEL PROGRAMMING,RACE CONDITIONS,SYNCHRONIZATION},
  mendeley-tags = {AD-HOC SYNCHRONIZATION,CONCURRENCY,HELGRIND+,MULTI-CORE,PARALLEL PROGRAMMING,RACE CONDITIONS,SYNCHRONIZATION},
  owner         = {hilrob},
  read          = {next},
  timestamp     = {2010.05.28},
}

@InProceedings{Jensen2011,
  author    = {Jeff C. Jensen and Danica Chang and Edward A. Lee},
  title     = {{A} {M}odel-{B}ased {D}esign {M}ethodology for {C}yber-{P}hysical {S}ystems},
  booktitle = {Wireless Communications and Mobile Computing Conference (IWCMC), 2011 7th International},
  year      = {2011},
  month     = jul,
  pages     = {1666--1671},
  url       = {http://chess.eecs.berkeley.edu/pubs/837.html},
  abstract  = {Model-based design is a powerful design technique for cyber-physical
	systems, but too often literature assumes knowledge of a methodology
	without reference to an explicit design process, instead focusing
	on isolated steps such as simulation, software synthesis, or verification.
	We combine these steps into an explicit and holistic methodology
	for model-based design of cyber-physical systems from abstraction
	to architecture, and from concept to realization. We decompose model-based
	design into ten fundamental steps, describe and evaluate an iterative
	design methodology, and evaluate this methodology in the development
	of a cyber-physical system.},
  day       = {6},
  file      = {Jensen2011.pdf:files\\Jensen2011.pdf:PDF},
  groups    = {Cyber-Physical Systems, (RT-) Embedded Systems, Methodik},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2011.10.23},
}

@InProceedings{Jette1997,
  author    = {Jette, Morris A.},
  title     = {{P}erformance characteristics of gang scheduling in multiprogrammed environments},
  booktitle = {Proceedings of the 1997 ACM/IEEE conference on Supercomputing (CDROM)},
  year      = {1997},
  series    = {Supercomputing '97},
  publisher = {ACM},
  location  = {San Jose, CA},
  isbn      = {0-89791-985-8},
  pages     = {1--12},
  doi       = {http://doi.acm.org/10.1145/509593.509647},
  url       = {http://doi.acm.org/10.1145/509593.509647},
  acmid     = {509647},
  address   = {New York, NY, USA},
  file      = {Jette1997.pdf:files\\Jette1997.pdf:PDF},
  groups    = {(RT-) Scheduling},
  keywords  = {gang scheduling, multiprogramming, parallel system, scheduling, space-slicing, time-slicing},
  numpages  = {12},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.02.02},
}

@Misc{Johnson2008,
  author        = {Johnson, Kerry},
  title         = {{S}enkung der {E}ntwicklungskosten für industrielle {S}teuerungssysteme durch {R}essourcenpartitionierung},
  year          = {2008},
  url           = {http://www.qnx.com/download/download/18056/QNX\_website\_partitioning.pdf},
  abstract      = {{E}in modernes industrielles {S}teuerungssystem kann {D}utzende oder
	sogar hunderte von {S}oftware-{A}ufgaben umfassen, die alle um einen
	begrenzten {U}mfang an {M}emory und {CPU}-{Z}eit konkurrieren. {U}m
	die {E}ntwicklung solcher komplexen {S}ysteme zu beschleunigen, teilen
	viele {U}nternehmen die {A}rbeit unter mehreren {E}ntwicklungsteams
	auf und weisen jedem {T}eam die {E}rstellung eines separaten {S}oftware-{S}ubsystems
	zu. {B}edingt durch die parallele {E}ntwicklung treten jedoch in
	der {I}ntegrationsphase h\"{a}ufig {P}erformance-{S}chwierigkeiten
	auf. {H}ervorgerufen werden diese aufgrund der {T}atsache, dass die
	verschiedenen {S}ubsysteme nun erstmalig untereinander um die {S}ystemressourcen
	wetteifern. {S}o k\"{o}nnen {S}ubsysteme, die isoliert gut arbeiteten,
	jetzt eine lange {R}eaktionszeit zeigen oder einfach nicht mehr funktionieren.},
  annote        = {1. Senkung der Entwicklungskosten f\"{u}r industrielle Steuerungssysteme durch Ressourcenpartitionierung o viele Funktionen auf einem Ger\"{a}t o verteilte, parallele Entwicklungsprozesse o Probleme bei der Integration im Zuge des Kampfes um Ressourcen o Partitionierung als L\"{o}sungsm\"{o}glichkeit durch Isolation der Teilkomponenten -> "garantiertes Budget" an Memory oder CPU Zeit (Was ist mit I/O Zugriffen? Bussen?) 2. Stillst\"{a}nde bei der Thread-Bearbeitung vermeiden o Priorit\"{a}tsbasierte Scheduler haben Probleme (Priority Inversion, Process Starvation, ...) o Partition sorgt daf\"{u}r, dass die CPU in "virtuelle" CPUs unterteilt wird -> Was bedeutet das f\"{u}r Multi-Core? Sollte man dann Partitionen auf Cores migrieren? 3. Partitionierungsbeispiel o verschiedene Prozesse, die unterschiedliche Priorit\"{a}ten haben und fiktiv bei der Integration Schwierigkeiten machen o Es gibt ein Tool von QNX (QNX Momentics IDE), mit dem die Budgets der Partitionen ge\"{a}ndert werden k\"{o}nnen 4. Einsparungen bei der Entwicklung quantifizieren o es wird ein fiktives Problem genommen und deren L\"{o}sung im klassischen Sinne beschrieben o gleichzeitig gibt es eine Tabelle, die die fiktiven Aufw\"{a}nde quantifiziert},
  booktitle     = {http://www.qnx.com},
  file          = {Johnson2008.pdf:files\\Johnson2008.pdf:PDF},
  groups        = {Misc},
  keywords      = {AUTOMATION,CONCEPT,EMBEDDED SYSTEMS,INDUSTRIAL AUTOMATION,INTRODUCTION,OPERATING SYSTEMS,PARTITIONING,REAL-TIME OPERATING SYSTEMS,REAL-TIME-SYSTEMS,RESOURCE PARTITIONING,SCHEDULING},
  mendeley-tags = {AUTOMATION,CONCEPT,EMBEDDED SYSTEMS,INDUSTRIAL AUTOMATION,INTRODUCTION,OPERATING SYSTEMS,PARTITIONING,REAL-TIME OPERATING SYSTEMS,REAL-TIME-SYSTEMS,RESOURCE PARTITIONING,SCHEDULING},
  owner         = {hilrob},
  pages         = {8},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Article{Joseph1987,
  author    = {Mathai Joseph and Abha Moitra and Neelam Soundararajan},
  title     = {{P}roof rules for fault tolerant distributed programs},
  journal   = {Science of Computer Programming},
  year      = {1987},
  volume    = {8},
  number    = {1},
  pages     = {43--67},
  issn      = {0167-6423},
  doi       = {http://dx.doi.org/10.1016/0167-6423(87)90003-7},
  url       = {http://www.sciencedirect.com/science/article/pii/0167642387900037},
  file      = {Joseph1987.pdf:files\\Joseph1987.pdf:PDF},
  groups    = {Formale Methoden},
  owner     = {hilrob},
  timestamp = {2014.05.05},
}

@Article{Juurlink2012,
  author     = {Juurlink, B.H.H. and Meenderinck, C. H.},
  title      = {{A}mdahl's {L}aw for {P}redicting the {F}uture of {M}ulticores {C}onsidered {H}armful},
  journal    = {SIGARCH Comput. Archit. News},
  year       = {2012},
  volume     = {40},
  number     = {2},
  month      = may,
  pages      = {1--9},
  issn       = {0163-5964},
  doi        = {10.1145/2234336.2234338},
  url        = {http://doi.acm.org/10.1145/2234336.2234338},
  acmid      = {2234338},
  address    = {New York, NY, USA},
  file       = {Juurlink2012.pdf:files\\Juurlink2012.pdf:PDF},
  groups     = {Multi-Core Allgemein, Parallel Programming Models},
  issue_date = {May 2012},
  numpages   = {9},
  owner      = {hilrob},
  publisher  = {ACM},
  timestamp  = {2014.03.11},
}

@PhdThesis{Kaiser2009,
  author    = {Kaiser, Robert},
  title     = {{V}irtualisierung von {M}ehrprozessorsystemen mit {E}chtzeitanwendungen},
  year      = {2009},
  type      = {Dissertation},
  month     = jun,
  url       = {http://kola.opus.hbz-nrw.de/volltexte/2009/403/pdf/Robert_Kaiser_Dissertation.pdf},
  abstract  = {{A}ufgrund der {F}ortschritte in der {C}hiptechnologie verfügen heutige
	eingebettete {S}ysteme über {R}echenleistungen, wie sie noch vor
	wenigen {J}ahren nur bei {R}echnern der {S}erver- oder {W}orkstation-{K}lasse
	anzutreffen waren. {D}urch die {E}inführung der "{M}ulticore" - {P}rozessoren
	werden nun auch eingebettete {M}ehrprozessorsysteme realistisch,
	was einen weiteren {L}eistungsschub erwarten lässt. {U}m das {P}otenzial
	dieser {S}ysteme zu nutzen, müssen {F}unktionen, die früher auf vielen
	getrennten {R}echnern angesiedelt waren, nun durch einige wenige,
	dafür leistungsfähigere {R}echensysteme erbracht werden. {D}abei
	steigt die {K}omplexität der {S}oftware jedes einzelnen {S}ystems
	an. {P}rogramme, die früher auf verschiedenen {R}echnern gearbeitet
	haben, müssen nun in einem gemeinsamen {R}echner koexistieren. {O}hne
	geeignete {S}chutzmaßnahmen ergeben sich dadurch vielfältige {M}öglichkeiten
	unerwünschter {W}echselwirkungen, die in ihrer {G}esamtheit kaum
	noch beherrschbar sind. {I}m {B}ereich der {S}erver hat sich bei
	ähnlicher {P}roblemlage die {V}irtualisierung als geeignetes {M}ittel
	erwiesen: {D}urch die {A}ufteilung einer physischen {M}aschine in
	mehrere virtuelle {M}aschinen können {B}arrieren zwischen {P}rogrammen
	aufgebaut werden, die eine unkontrollierte {F}ehlerausbreitung unterbinden.
	{Z}udem gibt es im {S}erverbereich schon seit langem etablierte {V}orgehensweisen
	zur {P}arallelverarbeitung auf {M}ehrprozessorrechnern, auch und
	gerade in {V}erbindung mit {V}irtualisierung. {E}s liegt nahe, diese
	erprobten {K}onzepte nun auch auf eingebettete {S}ysteme anzuwenden,
	doch eine einfache {Ü}bernahme der {T}echniken erweist sich als nicht
	tragfähig. {D}er {G}rund hierfür liegt in der zusätzlichen {F}orderung
	nach {E}chtzeitverarbeitung, die bei eingebettetem {S}ystemen in
	der {R}egel erhoben wird. {D}iese {A}rbeit bewegt sich im {S}pannungsfeld
	dreier {G}ebiete: {V}irtualisierung, {E}chtzeitverarbeitung und {P}arallelverarbeitung.
	{J}edes dieser {G}ebiete gilt für sich genommen als weitgehend erforscht,
	doch ergeben sich bei ihrer gemeinsamen {B}etrachtung zahlreiche
	neue {F}ragestellungen und {M}öglichkeiten. {I}n dieser {A}rbeit
	werden dazu {M}odelle zur {B}eschreibung von {E}chtzeitanwendungen
	innerhalb der {P}rozesshierarchie einer {V}irtualisierungsumgebung
	entwickelt. {B}estehende {S}chnittstellen zur {V}irtualisierung werden
	auf ihre {M}öglichkeiten zur {E}chtzeitverarbeitung untersucht, und
	es werden neue {S}chnittstellen zur {V}irtualisierung auf {M}ehrprozessormaschinen
	geschaffen und erprobt, die die spezifischen {A}nforderungen eingebetteter
	{S}ysteme - insbesondere die {E}chtzeitfähigkeit - berücksichtigen.
	{D}amit wird eine sichere und effiziente {K}oexistenz von {P}rogrammen
	mit unterschiedlich harten {Z}eitanforderungen in getrennten virtuellen
	{M}aschinen auf einem gemeinsamen {M}ehrprozessorrechner ermöglicht.},
  file      = {Kaiser2009.pdf:files\\Kaiser2009.pdf:PDF},
  groups    = {(RT-) Embedded Systems, Embedded Multi-Core, (RT-) Scheduling, Virtualisierung & Partitionierung},
  keywords  = {VIRTUALIZATION; MULTI-CORE; MULTI-PROCESSOR; EMBEDDED SYSTEMS;},
  owner     = {hilrob},
  read      = {reading},
  school    = {Universität Koblenz-Landau},
  timestamp = {2010.10.15},
}

@InProceedings{Kaiser2008,
  author    = {Kaiser, Robert},
  title     = {{A}lternatives for scheduling virtual machines in real-time embedded systems},
  booktitle = {Proceedings of the 1st workshop on Isolation and integration in embedded systems},
  year      = {2008},
  series    = {IIES '08},
  publisher = {ACM},
  location  = {Glasgow, Scotland},
  isbn      = {978-1-60558-126-2},
  pages     = {5--10},
  doi       = {http://doi.acm.org/10.1145/1435458.1435460},
  url       = {http://doi.acm.org/10.1145/1435458.1435460},
  acmid     = {1435460},
  address   = {New York, NY, USA},
  file      = {Kaiser2008.pdf:files\\Kaiser2008.pdf:PDF},
  groups    = {(RT-) Scheduling, Virtualisierung & Partitionierung},
  keywords  = {real-time, scheduling, virtualisation},
  numpages  = {6},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.02.20},
}

@InProceedings{Kampenhout2013,
  author    = {van Kampenhout, J. Reinier and Hilbrich, Robert},
  title     = {{M}odel-{B}ased {D}eployment of {M}ission-{C}ritical {S}pacecraft {A}pplications on {M}ulticore {P}rocessors},
  booktitle = {Ada-Europe International Conference on Reliable Software Technologies},
  year      = {2013},
  editor    = {Keller, H. B. et al.},
  series    = {LNCS 7896},
  publisher = {Springer-Verlag Berlin Heidelberg},
  isbn      = {978-3-642-38600-8},
  pages     = {35--50},
  abstract  = {A variety of complex spacecraft applications, such as autonomous maneuvers
	based on image recognition, can benefit from the increased performance
	of multicore processors. On the other hand the redundant cores can
	also be used for fault-tolerance. Spacecraft missions
	
	more and more require a balanced trade-off between power, performance
	and reliability. Finding an optimal trade-off for each missionphase
	leads to new engineering challenges, especially regarding the efficient
	and safe deployment of software applications to hardware resources.
	
	We propose a model-based approach for the construction of software
	deployment schemes, and apply it to a spacecraft use case with two
	different mission phases to illustrate the benefits of such model-based
	software deployment.},
  file      = {Kampenhout2013.pdf:files\\Kampenhout2013.pdf:PDF},
  groups    = {My Publications},
  owner     = {hilrob},
  timestamp = {2013.04.11},
}

@InProceedings{Kampenhout2013X,
  author    = {van Kampenhout, J. Reinier and Hilbrich, Robert},
  title     = {{M}odel-{B}ased {D}eployment of {M}ission-{C}ritical {S}pacecraft {A}pplications on {M}ulticore {P}rocessors},
  booktitle = {Ada-Europe International Conference on Reliable Software Technologies},
  year      = {2013},
  editor    = {Keller, H. B. et al.},
  series    = {LNCS 7896},
  publisher = {Springer-Verlag Berlin Heidelberg},
  isbn      = {978-3-642-38600-8},
  pages     = {35--50},
  abstract  = {A variety of complex spacecraft applications, such as autonomous maneuvers
	based on image recognition, can benefit from the increased performance
	of multicore processors. On the other hand the redundant cores can
	also be used for fault-tolerance. Spacecraft missions
	
	more and more require a balanced trade-off between power, performance
	and reliability. Finding an optimal trade-off for each missionphase
	leads to new engineering challenges, especially regarding the efficient
	and safe deployment of software applications to hardware resources.
	
	We propose a model-based approach for the construction of software
	deployment schemes, and apply it to a spacecraft use case with two
	different mission phases to illustrate the benefits of such model-based
	software deployment.},
  groups    = {My Publications},
  owner     = {hilrob},
  timestamp = {2013.04.11},
}

@InProceedings{Kamsties1999,
  author    = {Erik Kamsties and Antje von Knethen and Jan Philipps and Bernhard Sch{\"a}tz},
  title     = {{E}ine vergleichende {F}allstudie von acht {CASE}-{W}erkzeugen f{\"u}r formale und semi-formale {B}eschreibungstechniken},
  booktitle = {FBT},
  year      = {1999},
  pages     = {103--112},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  file      = {Kamsties1999.pdf:files\\Kamsties1999.pdf:PDF},
  groups    = {Formale Methoden},
  owner     = {hilrob},
  timestamp = {2014.04.25},
}

@InProceedings{Kandemir2005,
  author    = {Kandemir, M. and Chen, G.},
  title     = {{L}ocality-aware process scheduling for embedded {MPS}o{C}s},
  booktitle = {Proc. Design, Automation and Test in Europe},
  year      = {2005},
  pages     = {870--875},
  doi       = {10.1109/DATE.2005.198},
  file      = {Kandemir2005.pdf:files\\Kandemir2005.pdf:PDF},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.06.09},
}

@Article{Kangas2006,
  author     = {Kangas, Tero and Kukkala, Petri and Orsila, Heikki and Salminen, Erno and H\"{a}nnik\"{a}inen, Marko and H\"{a}m\"{a}l\"{a}inen, Timo D. and Riihim\"{a}ki, Jouni and Kuusilinna, Kimmo},
  title      = {{UML}-based {M}ultiprocessor {S}o{C} {D}esign {F}ramework},
  journal    = {ACM Trans. Embed. Comput. Syst.},
  year       = {2006},
  volume     = {5},
  number     = {2},
  month      = may,
  pages      = {281--320},
  issn       = {1539-9087},
  doi        = {10.1145/1151074.1151077},
  url        = {http://doi.acm.org/10.1145/1151074.1151077},
  acmid      = {1151077},
  address    = {New York, NY, USA},
  file       = {Kangas2006.pdf:files\\Kangas2006.pdf:PDF},
  groups     = {MPSoC Synthese},
  issue_date = {May 2006},
  keywords   = {UML 2.0, architecture exploration, design flow},
  numpages   = {40},
  owner      = {hilrob},
  publisher  = {ACM},
  timestamp  = {2014.05.15},
}

@PhdThesis{Kapitza2007,
  author    = {R{\"u}diger Kapitza},
  title     = {{P}roviding {D}ecentralised {A}daptive {S}ervices},
  year      = {2007},
  location  = {Erlangen},
  url       = {http://www4.informatik.uni-erlangen.de/~rrkapitz/pubs/das.pdf},
  abstract  = {{R}ecently, many research activities have investigated means to cope
	with the exponential growth of computing power, numbers of devices,
	and most importantly, information. {T}he main focus of these activities
	is managing the complexity and optimising resource utilisation. {T}his
	thesis presents novel solutions that optimise the utilisation of
	distributed resources for a stable and scalable execution of longrunning
	services. {T}his challenge is tackled by providing development and
	infrastructure support for two objectoriented distributed service
	models named replicated decentralised adaptive services and peer
	to peer based decentralised adaptive services. {B}oth service models
	avoid a central point of failure and are capable of adapting their
	distribution according to service and environment demands. {R}eplicated
	decentralised adaptive services are supported by a framework that
	enables the flexible development of fault-tolerant services and supports
	active replication. {I}n contrary to related approaches the proposed
	solution builds on top of the fragmented object model as provided
	by the {A}spectix middleware. {T}his approach is a lean way of adding
	faulttolerant replication to services based on standard middleware.
	{F}urthermore, the framework retains the flexibility of the fragmented
	object paradigm by providing semantic annotation support at the interface
	level to enable a custom code generation for an optimised handling
	of requests and the introduction of objectspecific code at clientside.
	{T}his flexibility enables the development of complex dependable
	distributed services as this thesis demonstrates by the implementation
	of a distributed version control system. {D}ynamic distribution of
	replicated decentralised adaptive service is enabled by an extended
	reference concept that ensures the reliable binding of services despite
	location changes. {F}urthermore, support for a fast state transfer
	of arbitrarily large service states is provided. {P}eertopeer based
	decentralised adaptive services target the utilisation of distributed
	resources using peertopeer concepts in context of a standard middleware.
	{T}he proposed solution integrates the {JXTA} peertopeer infrastructure
	into {CORBA} using the fragmented object support of {A}spectix. {S}ervices
	can make use of peertopeer mechanisms to be more scalable and faulttolerant
	than traditional client/server distributed objects. {E}xisting {CORBA}
	applications can now transparently access such extended services.
	{B}oth service models constitute the basis for the environment for
	decentralised adaptive services ({EDAS}), which enables the distribution
	and management of services across multiple administrative domains.
	{A}s dynamic distribution might move services to nodes on which the
	required servicespecific code is not available, {EDAS} offers support
	for dynamic loading of code. {T}he presented loading service differs
	from related approaches, as it uses a decentralised peertopeer based
	lookup, selection and loading process for providing platformspecific
	code. {F}inally, {EDAS} advances the state of the art in distributed
	resource management. {T}he supported mechanisms include a novel decentralised
	and faulttolerant protocol to enforce global resource quotas and
	a decentralised placement algorithm that enables a resourceaware
	distribution of decentralised adaptive services.},
  bibsource = {UnivIS, http://univis.uni-erlangen.de/prg?search=publications&id=90702156&show=elong},
  file      = {Kapitza2007.pdf:files\\Kapitza2007.pdf:PDF},
  number    = {7},
  owner     = {hilrob},
  read      = {unread},
  school    = {FAU Erlangen-N{\"u}rnberg},
  series    = {{Providing Decentralised Adaptive Services}},
  timestamp = {2011.02.24},
}

@Book{Karl2007,
  author        = {Karl, Holger and Willig, Andreas},
  title         = {{P}rotocols and architectures for wireless sensor networks},
  year          = {2007},
  publisher     = {Wiley-Interscience},
  isbn          = {0470095105},
  pages         = {524},
  url           = {http://books.google.com/books?hl=en\&amp;lr=\&amp;id=170R-1aZsQYC\&amp;oi=fnd\&amp;pg=PR13\&amp;dq=Protocols+and+Architectures+for+Wireless+Sensor+Networks\&amp;ots=rGPyCBg5b0\&amp;sig=QQro5MM8wF4oXbW0qyV0jmYhqmc},
  abstract      = {{L}earn all you need to know about wireless sensor networks!{P}rotocols
	and {A}rchitectures for {W}ireless {S}ensor {N}etworks provides a
	thorough description of the nuts and bolts of wireless sensor networks.{T}he
	authors give an overview of the state-of-the-art, putting all the
	individual solutions into perspective with one and other. {N}umerous
	practical examples, case studies and illustrations demonstrate the
	theory, techniques and results presented. {T}he clear chapter structure,
	listing learning objectives, outline and summarizing key points,
	help guide the reader expertly through the material. {P}rotocols
	and {A}rchitectures for {W}ireless {S}ensor {N}etworks: {C}overs
	architecture and communications protocols in detail with practical
	implementation examples and case studies. {P}rovides an understanding
	of mutual relationships and dependencies between different protocols
	and architectural decisions. {O}ffers an in-depth investigation of
	relevant protocol mechanisms. {S}hows which protocols are suitable
	for which tasks within a wireless sensor network and in which circumstances
	they perform efficiently. {F}eatures an extensive website with the
	bibliography, {P}ower{P}oint slides, additional exercises and worked
	solutions. {T}his text provides academic researchers, graduate students
	in computer science, computer engineering, and electrical engineering,
	as well as practitioners in industry and research engineers with
	an understanding of the specific design challenges and solutions
	for wireless sensor networks. {C}heck out www.wiley.com/go/wsn for
	accompanying course material!" {I} am deeply impressed by the book
	of {K}arl \& {W}illig. {I}t is by far the most complete source for
	wireless sensor networks...{T}he book covers almost all topics related
	to sensor networks, gives an amazing number of references, and, thus,
	is the perfect source for students, teachers, and researchers. {T}hroughout
	the book the reader will find high quality text, figures, formulas,
	comparisons etc. - all you need for a sound basis to start sensor
	network research.},
  file          = {Karl2007.pdf:files\\Karl2007.pdf:PDF},
  groups        = {Books},
  keywords      = {BASICS,BODY AREA NETWORK,INTRODUCTION,OVERVIEW,WIRELESS SENSOR NETWORKS},
  mendeley-tags = {BASICS,BODY AREA NETWORK,INTRODUCTION,OVERVIEW,WIRELESS SENSOR NETWORKS},
  owner         = {hilrob},
  read          = {reading, unread},
  timestamp     = {2010.05.27},
}

@Article{Karsai2008,
  author    = {Gabor Karsai and Sandeep Neema and David Sharp},
  title     = {{M}odel-driven architecture for embedded software: {A} synopsis and an example},
  journal   = {Science of Computer Programming},
  year      = {2008},
  volume    = {73},
  number    = {1},
  pages     = {26--38},
  note      = {<ce:title>Special Issue on Foundations and Applications of Model Driven Architecture (MDA)</ce:title>},
  issn      = {0167-6423},
  doi       = {10.1016/j.scico.2008.05.006},
  url       = {http://www.sciencedirect.com/science/article/pii/S0167642308000506},
  abstract  = {MDA proposes a new paradigm for software development in general. We
	claim that MDA could be beneficial for embedded software development,
	especially if it is extended to address the special needs of embedded
	systems. The paper consists of two sections: the first is a brief
	synopsis on how MDA ought to be extended to handle embedded software
	development, while the second illustrates the concepts in practice
	using a prototype modeling language and tool chain designed for developing
	mission computing software.},
  file      = {Karsai2008.pdf:files\\Karsai2008.pdf:PDF},
  groups    = {(Embedded) Model-driven Architecture},
  keywords  = {Model-driven development},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.11.09},
}

@Article{Keinert2009,
  author     = {Keinert, Joachim and Streub\&uhorbar;hr, Martin and Schlichter, Thomas and Falk, Joachim and Gladigau, Jens and Haubelt, Christian and Teich, J\&uhorbar;rgen and Meredith, Michael},
  title      = {{S}ystem{C}o{D}esigner\&{M}dash;an {A}utomatic {ESL} {S}ynthesis {A}pproach by {D}esign {S}pace {E}xploration and {B}ehavioral {S}ynthesis for {S}treaming {A}pplications},
  journal    = {ACM Trans. Des. Autom. Electron. Syst.},
  year       = {2009},
  volume     = {14},
  number     = {1},
  month      = jan,
  pages      = {11--123},
  issn       = {1084-4309},
  doi        = {10.1145/1455229.1455230},
  url        = {http://doi.acm.org/10.1145/1455229.1455230},
  acmid      = {1455230},
  address    = {New York, NY, USA},
  articleno  = {1},
  file       = {Keinert2009.pdf:files\\Keinert2009.pdf:PDF},
  groups     = {MPSoC Synthese},
  issue_date = {January 2009},
  keywords   = {System design, hardware/software codesign},
  numpages   = {23},
  owner      = {hilrob},
  publisher  = {ACM},
  timestamp  = {2014.05.15},
}

@INPROCEEDINGS{Kim2008,
  author = {Kim, Dong-Guen and Lee, Sang-Min and Shin, Dong-Ryeol},
  title = {{D}esign of the {O}perating {S}ystem {V}irtualization on {L}4 {M}icrokernel},
  booktitle = {2008 Fourth International Conference on Networked Computing and Advanced
	Information Management},
  year = {2008},
  pages = {307--310},
  publisher = {IEEE},
  abstract = {{T}he importance of the virtualization in embedded computing area
	is currently emerging. {T}he virtualization can enhance system flexibility
	by enabling the concurrent execution of an application {OS} and a
	real-time {OS} ({RTOS}) on the same processor. {L}4 microkernel can
	be used as an efficient hypervisor which provides environment for
	operating systems virtualization. {I}n order to run the application
	{OS}es on {L}4 microkernel, the application {OS}es should be adapted.
	{T}he source code of {L}inux kernel can be readily accessed and modified.
	{H}ence, the {L}inux kernel is chosen as virtualized operating systems.
	{I}n this paper, the architecture for virtualization of {L}inux kernel
	which is based on {L}4 microkernel is proposed.},
  doi = {10.1109/NCM.2008.165},
  isbn = {978-0-7695-3322-3},
  keywords = {EMBEDDED SYSTEMS,L4,OPERATING SYSTEMS,REAL-TIME-SYSTEMS,VIRTUALIZATION},
  mendeley-tags = {EMBEDDED SYSTEMS,L4,OPERATING SYSTEMS,REAL-TIME-SYSTEMS,VIRTUALIZATION},
  owner = {hilrob},
  read = {unread},
  timestamp = {2010.05.28},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4624024}
}

@InProceedings{Klein2009,
  author    = {Klein, Gerwin and Elphinstone, Kevin and Heiser, Gernot and Andronick, June and Cock, David and Derrin, Philip and Elkaduwe, Dhammika and Engelhardt, Kai and Kolanski, Rafal and Norrish, Michael and Sewell, Thomas and Tuch, Harvey and Winwood, Simon},
  title     = {se{L}4: formal verification of an {OS} kernel},
  booktitle = {Proceedings of the ACM SIGOPS 22nd symposium on Operating systems principles},
  year      = {2009},
  series    = {SOSP '09},
  publisher = {ACM},
  location  = {Big Sky, Montana, USA},
  isbn      = {978-1-60558-752-3},
  pages     = {207--220},
  doi       = {http://doi.acm.org/10.1145/1629575.1629596},
  url       = {http://doi.acm.org/10.1145/1629575.1629596},
  acmid     = {1629596},
  address   = {New York, NY, USA},
  file      = {Klein2009.pdf:files\\Klein2009.pdf:PDF},
  groups    = {(RT-) Embedded Systems, Formale Methoden, Reliability & Dependability},
  keywords  = {ISABELLE/HOL; L4; MIKROKERNEL; SEL4},
  numpages  = {14},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2011.02.11},
}

@Article{Knight1986,
  author    = {Knight, J. C. and Leveson, N. G.},
  title     = {{A}n experimental evaluation of the assumption of independence in multiversion programming},
  journal   = {{IEEE Transactions on Software Engineering}},
  year      = {1986},
  volume    = {SE-12},
  number    = {1},
  pages     = {96--109},
  doi       = {10.1109/TSE.1986.6312924},
  url       = {http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6312924},
  file      = {Knight1986.pdf:files\\Knight1986.pdf:PDF},
  groups    = {Zuverlässigkeit},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2013.02.21},
}

@Misc{V-MODELL-XT2012,
  author       = {{Koordinierungs und Beratungsstelle der Bundesregierung für Informationstechnik in der Bundesverwaltung}},
  title        = {{V}-{M}odell {XT} 1.4},
  year         = {2012},
  howpublished = {online},
  month        = may,
  url          = {http://ftp.tu-clausthal.de/pub/institute/informatik/v-modell-xt/Releases/1.4/V-Modell-XT-Gesamt.pdf},
  file         = {V-MODELL-XT2012.pdf:files\\V-MODELL-XT2012.pdf:PDF},
  groups       = {Standards & Normen},
  owner        = {hilrob},
  timestamp    = {2014.04.22},
}

@Book{Kopetz1997a,
  author    = {Kopetz, Hermann},
  title     = {{R}eal-{T}ime {S}ystems: {D}esign {P}rinciples for {D}istributed {E}mbedded {A}pplications},
  year      = {1997},
  edition   = {1st},
  publisher = {Kluwer Academic Publishers},
  isbn      = {0792398947},
  address   = {Norwell, MA, USA},
  file      = {Kopetz1997a.pdf:files\\Kopetz1997a.pdf:PDF},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.11.13},
}

@Article{Kopetz1993,
  author    = {Hermann Kopetz},
  title     = {{S}hould {R}esponsive {S}ystems be {E}vent-{T}riggered or {T}ime-{T}riggered ?},
  journal   = {Institute of Electronics, Information, and Communications Engineers Transactions on Information and Systems},
  year      = {1993},
  volume    = {E76-D},
  number    = {11},
  pages     = {1325--1332},
  abstract  = {{I}n this paper the two different paradigms for the design of responsive,
	i.e., distributed fault-tolerant real-time systems, the event-triggered
	({ET}) approach and the time- triggered ({TT}) approach, are analyzed
	and compared. {T}he comparison focuses on the temporal properties
	and considers the issues of predictability, testability, resource
	utilization, extensibility, and assumption coverage.},
  file      = {Kopetz1993.pdf:files\\Kopetz1993.pdf:PDF},
  groups    = {(RT-) Embedded Systems},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.07.28},
}

@InProceedings{Kopetz1991,
  author    = {Kopetz, Hermann},
  title     = {{E}vent-{T}riggered {V}ersus {T}ime-{T}riggered {R}eal-{T}ime {S}ystems},
  booktitle = {Proceedings of the International Workshop on Operating Systems of the 90s and Beyond},
  year      = {1991},
  publisher = {Springer-Verlag},
  isbn      = {3-540-54987-0},
  pages     = {87--101},
  url       = {http://portal.acm.org/citation.cfm?id=647368.723750},
  acmid     = {723750},
  address   = {London, UK},
  groups    = {(RT-) Scheduling},
  numpages  = {15},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2011.05.13},
}

@InProceedings{Kopetz1997,
  author    = {Kopetz, H. and Nossal, R.},
  title     = {{T}emporal firewalls in large distributed real-time systems},
  booktitle = {Distributed Computing Systems, 1997., Proceedings of the Sixth IEEE Computer Society Workshop on Future Trends of},
  year      = {1997},
  month     = {29-31},
  pages     = {310--315},
  doi       = {10.1109/FTDCS.1997.644743},
  abstract  = {{T}he complexity of large distributed real-time systems can be reduced
	by partitioning the system into a set of almost autonomous subsystems
	that are connected by stable control-free interfaces called temporal
	firewalls. {A} temporal firewall provides an understandable abstraction
	of the subsystem behind the firewall, confines the impact of most
	changes to the encapsulated subsystem, and limits the potential of
	error propagation. {T}he paper describes the stable properties of
	temporal firewalls and discusses where, in a large distributed real-time
	architecture, temporal firewalls should be placed. {T}he final section
	investigates some possibilities of how to renegotiate the static
	properties of temporal firewalls in case the controlled object changes
	it behavior substantially},
  file      = {Kopetz1997.pdf:files\\Kopetz1997.pdf:PDF;Kopetz1997a.pdf:files\\Kopetz1997a.pdf:PDF},
  groups    = {Virtualisierung & Partitionierung},
  issn      = {1071-0485},
  keywords  = {abstraction;autonomous subsystems;complexity;controlled object;encapsulated subsystem;error propagation;large distributed real-time systems;stable control-free interfaces;static properties;system partitioning;temporal firewalls;application program interfaces;distributed processing;real-time systems;},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.07.26},
}

@InProceedings{Kopetz2007,
  author        = {Kopetz, Hermann and Obermaisser, Roman and {El Salloum}, Christian and Huber, Bernhard},
  title         = {{A}utomotive {S}oftware {D}evelopment for a {M}ulti-{C}ore {S}ystem-on-a-{C}hip},
  booktitle     = {Fourth International Workshop on Software Engineering for Automotive Systems (SEAS '07)},
  year          = {2007},
  publisher     = {IEEE},
  isbn          = {0-7695-2968-2},
  pages         = {2--2},
  doi           = {10.1109/SEAS.2007.2},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4228589},
  abstract      = {{T}here are many economic and technical arguments for the reduction
	of the number of {E}lectronic {C}ontrol {U}nits ({EC} {U}s) aboard
	a car. {O}ne of the key obstacles to achieve this goal is the limited
	composability, fault isolation and error containment of today's single-
	processor architectures. {H}owever, significant changes in the chip
	architecture are taking place in order to manage the synchronization,
	energy dissipation, and fault-handling requirements of emerging billion
	transistor {S}o{C}s (systems-on-a-chip). {T}he single processor architecture
	is replaced by multi-core {S}o{C}s that communicate via networks-on-chip
	({N}o{C}). {T}hese emerging multi-core {S}o{C}s provide an ideal
	execution environment for the integration of multiple automotive
	{ECU}s into a single {S}o{C} {T}his paper presents a model-based
	software development method for designing applications using these
	multi-core {S}o{C}s.},
  address       = {Washington, DC, USA},
  annote        = {Nicht sooo toll, eher ein \"{U}berblick, wie im Automobilbereich Multicore SoC L\"{o}sungen modellbasiert eingesetzt werden k\"{o}nnen, um die Kosten zu senken, die Composability zu erhalten und dabei die Fehlerrate zu verringern.},
  file          = {Kopetz2007.pdf:files\\Kopetz2007.pdf:PDF},
  groups        = {Domänen-spezifisch},
  keywords      = {AUTOMOTIVE,ECU,MODEL-BASED DEVELOPMENT,MPSOC,MULTI-CORE,NOC,ON-CHIP INTERCONNECT,RELIABILITY,REPORT,SOC},
  mendeley-tags = {AUTOMOTIVE,ECU,MODEL-BASED DEVELOPMENT,MPSOC,MULTI-CORE,NOC,ON-CHIP INTERCONNECT,RELIABILITY,REPORT,SOC},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Book{Kossiakoff2011,
  author    = {Kossiakoff, A. and Sweet, W.N. and Seymour, S. and Biemer, S.M.},
  title     = {{S}ystems {E}ngineering {P}rinciples and {P}ractice},
  year      = {2011},
  series    = {Wiley Series in Systems Engineering and Management},
  publisher = {Wiley},
  isbn      = {9780470405482},
  file      = {Kossiakoff2011.pdf:files\\Kossiakoff2011.pdf:PDF},
  groups    = {Books, Systems Engineering},
  lccn      = {2010036856},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2012.11.09},
}

@Article{Kreuzer2011,
  author       = {Manne Kreuzer},
  title        = {{M}odellbasiert die {E}chtzeit im {G}riff},
  journal      = {Markt \& Technik - die unabhängige Wochenzeitung},
  year         = {2011},
  volume       = {Nr. 24},
  month        = jun,
  pages        = {35},
  issn         = {0344-8843},
  url          = {http://www.elektroniknet.de/redaktionen/markt-und-technik/heftarchiv/ausgabe/2011/24/},
  groups       = {Misc, Domänen-spezifisch},
  howpublished = {http://www.elektroniknet.de/redaktionen/markt-und-technik/heftarchiv/ausgabe/2011/24/},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2011.07.07},
}

@Article{Kruchten1995,
  author    = {Kruchten, P.B.},
  title     = {{T}he 4+1 {V}iew {M}odel of architecture},
  journal   = {Software, IEEE},
  year      = {1995},
  volume    = {12},
  number    = {6},
  month     = nov,
  pages     = {42--50},
  issn      = {0740-7459},
  doi       = {10.1109/52.469759},
  abstract  = {The 4+1 View Model organizes a description of a software architecture
	using five concurrent views, each of which addresses a specific set
	of concerns. Architects capture their design decisions in four views
	and use the fifth view to illustrate and validate them. The logical
	view describes the design's object model when an object-oriented
	design method is used. To design an application that is very data
	driven, you can use an alternative approach to develop some other
	form of logical view, such as an entity-relationship diagram. The
	process view describes the design's concurrency and synchronization
	aspects. The physical view describes the mapping of the software
	onto the hardware and reflects its distributed aspect. The development
	view describes the software's static organization in its development
	environment},
  file      = {Kruchten1995.pdf:files\\Kruchten1995.pdf:PDF},
  groups    = {(RT-) Embedded Systems, Systems Engineering},
  keywords  = {4+1 View Model;concurrency;data-driven application design;design decisions;design object model;development environment;development view;distributed aspect;entity-relationship diagram;hardware;object-oriented design method;physical view;software architecture;software mapping;software static organization;synchronization;validation;distributed processing;entity-relationship modelling;object-oriented methods;software engineering;},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2012.03.30},
}

@Misc{JACOP41,
  author       = {Krzysztof Kuchcinski and Radoslaw Szymanek},
  title        = {{J}ava {C}onstraint {P}rogramming {S}olver - {J}a{C}o{P} 4.1},
  year         = mar,
  howpublished = {online},
  month        = {2014},
  url          = {http://jacop.osolpro.com},
  groups       = {Tools},
  owner        = {hilrob},
  timestamp    = {2014.10.01},
}

@InCollection{Kugele2009,
  author    = {Kugele, Stefan and Haberl, Wolfgang and Tautschnig, Michael and Wechs, Martin},
  title     = {{O}ptimizing {A}utomatic {D}eployment {U}sing {N}on-functional {R}equirement {A}nnotations},
  booktitle = {Leveraging Applications of Formal Methods, Verification and Validation},
  year      = {2009},
  editor    = {Margaria, Tiziana and Steffen, Bernhard},
  volume    = {17},
  series    = {Communications in Computer and Information Science},
  publisher = {Springer Berlin Heidelberg},
  isbn      = {978-3-540-88478-1},
  pages     = {400--414},
  url       = {http://dx.doi.org/10.1007/978-3-540-88479-8_28},
  file      = {Kugele2009.pdf:files\\Kugele2009.pdf:PDF},
  groups    = {Software Deployment},
  owner     = {hilrob},
  timestamp = {2014.01.13},
}

@MastersThesis{Kuehn2013,
  author    = {Kühn, Franziska},
  title     = {{K}onzeptionierung einer {B}enutzeroberfläche und {P}rogrammierschnittstelle für die {T}oolsuite {PRECISION} {PRO}},
  year      = {2013},
  type      = {Bachelorthesis},
  abstract  = {Beim Fraunhofer Institut FOKUS wurde die Toolsuite "PRECISION PRO"
	entwickelt. Die Toolsuite unterstützt bei der Entwicklung von sicherheitskritischen
	Multi bzw.
	
	Manycore-Systemen mit harten Echtzeitanforderungen. Das Werkzeug besteht
	aus unterschiedlichen Komponenten für die Bereiche "Scheduling",
	"Mapping", "Timing
	
	Analysis" und "Validierung". Derzeit existiert keine Programmierschnittstelle
	bzw. keine gemeinsame Oberfläche für die einzelnen Module des Werkzeugs.
	Im Kapitel
	
	"Motivation und Zielstellung" werden der theoretische Hintergrund
	des Problems und die Anforderungen an ein neues Lösungskonzept dargestellt.
	Darauf folgt das Kapitel
	
	"Vorstellung des Auftraggebers", in dem das Fraunhofer Institut FOKUS
	und die Abteilung QUEST vorgestellt werden. Im Kapitel "Grundlagen"
	wird ein allgemeines
	
	Verständnis zu den im Konzept verwendeten Begriffen herbeigeführt.
	Dieses unterteilt sich in den informationstechnischen Hintergrund
	und die Grundlagen zum Softwareund
	
	Usability Engineering. Darauf folgt das Kapitel Ansatz, in dem eine
	Erläuterung des Konzeptaufbaus vorgenommen wird. Das Kapitel "Ist-Aufnahme"
	beinhaltet eine
	
	Beschreibung der einzelnen Module der Toolsuite unter dem Fokus Systemfunktion.
	Das bedeutet es wird hier mehr auf den Input und Output sowie mögliche
	Systemzustände
	
	eingegangen als auf den Systemaufbau. Es wird die bisherige Nutzerinteraktion
	mit den Modulen beschrieben und in Form einer ersten Problemerfassung
	beurteilt. Im
	
	weiterführenden Kapitel "Modellierung - Anforderungsmanagement" werden
	die Anforderungen der Kunden und der Wissenschaftler mit gängigen
	Methoden analysiert
	
	und kategorisiert. Im Kapitel "Spezifikation - Entwerfen von Gestaltungslösungen"
	werden Lösungsansätze anhand der eruierten Anforderungen diskutiert,
	bewertet sowie
	
	die Rahmenbedingungen für eine mögliche Umsetzung festgelegt. Es endet
	mit einer möglichen prototypischen Umsetzung anhand der Anforderungen,
	die durch das
	
	Konzept ermittelt wurden. ermittelt wurden. Den Abschluss bilden eine
	Beurteilung der Lösungsansätze sowie die Zusammenfassung über das
	Konzept und ein Ausblick
	
	in die Zukunft.},
  file      = {Kuehn2013.pdf:files\\Kuehn2013.pdf:PDF},
  groups    = {My Publications, Tools},
  owner     = {hilrob},
  school    = {Hochschule für Technik und Wirtschaft Berlin},
  timestamp = {2013.03.19},
}

@Book{Kutner2013,
  author    = {Joe Kutner},
  title     = {{T}he {H}ealthy {P}rogrammer: {G}et {F}it, {F}eel {B}etter, and {K}eep {C}oding ({P}ragmatic {P}rogrammers)},
  year      = {2013},
  publisher = {Pragmatic Bookshelf},
  isbn      = {1937785319},
  url       = {http://www.amazon.com/The-Healthy-Programmer-Pragmatic-Programmers/dp/1937785319%3FSubscriptionId%3D0JYN1NVW651KCA56C102%26tag%3Dtechkie-20%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1937785319},
  file      = {Kutner2013.pdf:files\\Kutner2013.pdf:PDF},
  owner     = {hilrob},
  timestamp = {2014.02.17},
}

@TechReport{Kuz2007,
  author      = {Kuz, Ihor and Petters, Stefan M.},
  title       = {{MIKES} 2007 - {F}irst {I}nternational {W}orkshop on {M}icrokernels for {E}mbedded {S}ystems},
  institution = {National ICT Australia},
  year        = {2007},
  type        = {Technical Report},
  number      = {January 2007},
  month       = jan,
  url         = {http://ertos.nicta.com.au/publications/papers/Kuz_Petters_07.pdf},
  address     = {223 Anzac Parade, Kensington NSW 2052 Australia},
  file        = {Kuz2007.pdf:files\\Kuz2007.pdf:PDF},
  groups      = {Betriebssysteme, Mikrokernel, (RT-) Scheduling},
  keywords    = {MIKROKERNEL;EMBEDDED SYSTEM;},
  owner       = {hilrob},
  read        = {unread},
  timestamp   = {2011.06.07},
}

@Book{Low2010,
  author    = {L{\"o}w, P. and Papst, R. and Petry, E.},
  title     = {{F}unktionale {S}icherheit in der {P}raxis: {A}nwendung von {DIN} {EN} 61508 und {ISO}/{DIS} 26262 bei der {E}ntwicklung von {S}erienprodukten},
  year      = {2010},
  publisher = {Dpunkt.Verlag GmbH},
  isbn      = {9783898645706},
  groups    = {Books, Reliability & Dependability},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2012.02.09},
}

@Misc{Lai2003,
  author        = {Lai, Guanpi},
  title         = {{R}eal {T}ime {S}cheduling},
  year          = {2003},
  abstract      = {{V}orlesungsfolien zum {T}hema {R}eal-{T}ime {S}cheduling},
  annote        = {Interessanter \"{U}berblick \"{u}ber RT-Scheduling, Complications (Data-Dependencies)und RT-Betriebssysteme},
  file          = {Lai2003.pdf:files\\Lai2003.pdf:PDF},
  groups        = {Misc},
  keywords      = {EDF,INTRODUCTION,OVERVIEW,RATE MONOTONIC,REAL-TIME OPERATING SYSTEMS,REAL-TIME SCHEDULING,SCHEDULABILITY ANALYSIS,SCHEDULING,SCHEDULING ALGORITHMS},
  mendeley-tags = {EDF,INTRODUCTION,OVERVIEW,RATE MONOTONIC,REAL-TIME OPERATING SYSTEMS,REAL-TIME SCHEDULING,SCHEDULABILITY ANALYSIS,SCHEDULING,SCHEDULING ALGORITHMS},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@InProceedings{Lam2009,
  author    = {Jun Wei Lam and Tan, I. and Boon Leong Ong and Chang Kian Tan},
  title     = {{E}ffective operating system scheduling domain hierarchy for core-cache awareness},
  booktitle = {TENCON 2009 - 2009 IEEE Region 10 Conference},
  year      = {2009},
  pages     = {1--7},
  doi       = {10.1109/TENCON.2009.5395800},
  abstract  = {With the introduction of multi-core processors, a balance between
	access contention of the cache and availability of cached data for
	multiple cores has to be addressed. Processor manufacturers are finding
	this compromise through a combination of private and shared cache
	structures, where the last level cache (LLC) may not be shared across
	all processing cores. This poses an interesting opportunity for the
	operating system in ensuring minimum access time to the memory for
	optimal performance. Our proposed solution is to augment an existing
	scheduling domain hierarchy to be aware of the relationship between
	the processing cores and their respective LLCs in order to achieve
	improved performance. We focus on LLCs as the access time between
	local caches is minimal as compared to remote caches or main memory.
	In this paper, we show that there are marked improvements using a
	LU scientific benchmark and a chat-server application benchmark.},
  file      = {Lam2009.pdf:files\\Lam2009.pdf:PDF},
  keywords  = {cache storage;operating systems (computers);processor scheduling;shared memory systems;LU scientific benchmark;cache access contention;cached data availability;chat server application;core cache awareness;last level cache;multicore processors;operating system scheduling;private shared cache structures;shared cache structures;Benchmark testing;Communication industry;Delay;Information technology;Job shop scheduling;Microelectronics;Multicore processing;Multimedia systems;Operating systems;Processor scheduling;Cache memories;Computer architecture;Operating systems kernel;Processor scheduling},
  owner     = {hilrob},
}

@InCollection{Lamport1994,
  author    = {Lamport, Leslie and Merz, Stephan},
  title     = {{S}pecifying and verifying fault-tolerant systems},
  booktitle = {Formal Techniques in Real-Time and Fault-Tolerant Systems},
  year      = {1994},
  editor    = {Langmaack, Hans and Roever, Willem-Paul and Vytopil, Jan},
  volume    = {863},
  series    = {Lecture Notes in Computer Science},
  publisher = {Springer Berlin Heidelberg},
  isbn      = {978-3-540-58468-1},
  pages     = {41--76},
  doi       = {10.1007/3-540-58468-4},
  url       = {http://dx.doi.org/10.1007/3-540-58468-4_159},
  file      = {Lamport1994.pdf:files\\Lamport1994.pdf:PDF},
  groups    = {Formale Methoden},
  owner     = {hilrob},
  timestamp = {2014.05.05},
}

@Misc{HighRely2010,
  author       = {Landreth, Michael},
  title        = {{E}mbedded {S}oftware {D}evelopment},
  year         = {2010},
  howpublished = {http://highrely.com/whitepapers.php},
  type         = {Whitepaper},
  url          = {http://highrely.com/whitepapers.php},
  file         = {HighRely2010.pdf:files\\HighRely2010.pdf:PDF},
  groups       = {Misc, (RT-) Embedded Systems, Reliability & Dependability},
  institution  = {HighRely - Reliable Embedded Solutions},
  keywords     = {EMBEDDED SYSTEM; RELIABILITY;},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2010.08.27},
}

@InProceedings{Larsen1995,
  author    = {Kim G.\ Larsen and Paul Pettersson and Wang Yi},
  title     = {{Model-Checking for Real-Time Systems}},
  booktitle = {Proc.\ of Fundamentals of Computation Theory},
  year      = {1995},
  series    = {Lecture Notes in Computer Science},
  number    = {965},
  month     = aug,
  pages     = {62--88},
  file      = {Larsen1995.pdf:files\\Larsen1995.pdf:PDF},
  groups    = {Tools},
  key       = {fct95},
  owner     = {hilrob},
  timestamp = {2013.06.20},
}

@TechReport{Laskavaia2010,
  author      = {Laskavaia, Elena and Leroux, Paul},
  title       = {{M}emory {E}rrors in {E}mbedded {S}ystems},
  institution = {QNX Software Systems},
  year        = {2010},
  type        = {Whitepaper},
  url         = {http://www.qnx.com/download/download/21329/qnx_memory_tech_MC411.77.pdf},
  abstract    = {{M}emory errors are particularly harmful in embedded systems. {T}hese
	systems have limited memory resources, and are often deployed in
	environments where there are no second chances: a system brought
	down by a memory error that appears weeks or months after deployment
	may be unrecoverable and have costly or even disastrous consequences.
	{T}o address the challenges presented by memory errors, developers
	can take advantage of tools for memory analysis and debugging, and
	{OS} architectures that minimize the impact of memory errors on the
	system. {T}his paper discusses memory analysis techniques for solving
	memory problems such as heap corruption and memory leaks; and memory
	profiling for optimization of memory use in embedded systems.},
  file        = {Laskavaia2010.pdf:files\\Laskavaia2010.pdf:PDF},
  groups      = {(RT-) Embedded Systems, Reliability & Dependability},
  keywords    = {QNX; EMBEDDED SYSTEMS; MEMORY ERRORS;},
  owner       = {hilrob},
  read        = {done},
  timestamp   = {2011.02.09},
}

@InProceedings{Leavens2006,
  author    = {Leavens, Gary T. and Abrial, Jean-Raymond and Batory, Don and Butler, Michael and Coglio, Alessandro and Fisler, Kathi and Hehner, Eric and Jones, Cliff and Miller, Dale and Peyton-Jones, Simon and Sitaraman, Murali and Smith, Douglas R. and Stump, Aaron},
  title     = {{R}oadmap for enhanced languages and methods to aid verification},
  booktitle = {Proceedings of the 5th international conference on Generative programming and component engineering},
  year      = {2006},
  series    = {GPCE '06},
  publisher = {ACM},
  location  = {Portland, Oregon, USA},
  isbn      = {1-59593-237-2},
  pages     = {221--236},
  doi       = {10.1145/1173706.1173740},
  url       = {http://doi.acm.org/10.1145/1173706.1173740},
  acmid     = {1173740},
  address   = {New York, NY, USA},
  file      = {Leavens2006.pdf:files\\Leavens2006.pdf:PDF},
  groups    = {Correctness by Construction},
  keywords  = {annotations, correctness by construction, program generation, programming languages, specification languages, tools, verification, verified software grand challenge},
  numpages  = {16},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.11.28},
}

@InProceedings{Lee2008,
  author    = {Lee, E.A.},
  title     = {{C}yber {P}hysical {S}ystems: {D}esign {C}hallenges},
  booktitle = {Object Oriented Real-Time Distributed Computing (ISORC), 2008 11th IEEE International Symposium on},
  year      = {2008},
  month     = may,
  pages     = {363--369},
  doi       = {10.1109/ISORC.2008.25},
  abstract  = {Cyber-Physical Systems (CPS) are integrations of computation and physical
	processes. Embedded computers and networks monitor and control the
	physical processes, usually with feedback loops where physical processes
	affect computations and vice versa. The economic and societal potential
	of such systems is vastly greater than what has been realized, and
	major investments are being made worldwide to develop the technology.
	There are considerable challenges, particularly because the physical
	components of such systems introduce safety and reliability requirements
	qualitatively different from those in general- purpose computing.
	Moreover, physical components are qualitatively different from object-oriented
	software components. Standard abstractions based on method calls
	and threads do not work. This paper examines the challenges in designing
	such systems, and in particular raises the question of whether today's
	computing and networking technologies provide an adequate foundation
	for CPS. It concludes that it will not be sufficient to improve design
	processes, raise the level of abstraction, or verify (formally or
	otherwise) designs that are built on today's abstractions. To realize
	the full potential of CPS, we will have to rebuild computing and
	networking abstractions. These abstractions will have to embrace
	physical dynamics and computation in a unified way.},
  file      = {Lee2008.pdf:files\\Lee2008.pdf:PDF},
  groups    = {Cyber-Physical Systems},
  keywords  = {embedded systems;systems analysis;CPS;cyber-physical systems;feedback loops;object-oriented software;Computer networks;Computerized monitoring;Embedded computing;Feedback loop;Investments;Physics computing;Process control;Safety;Software quality;Yarn;Cyber-physical systems;embedded systems;real time},
  owner     = {hilrob},
  timestamp = {2014.02.04},
}

@Article{Lee2009,
  author     = {Lee, Edward A.},
  title      = {{C}omputing needs time},
  journal    = {Commun. ACM},
  year       = {2009},
  volume     = {52},
  issue      = {5},
  month      = may,
  pages      = {70--79},
  issn       = {0001-0782},
  doi        = {http://doi.acm.org/10.1145/1506409.1506426},
  url        = {http://doi.acm.org/10.1145/1506409.1506426},
  abstract   = {The passage of time is essential to ensuring the repeatability and
	predictability of software and networks in cyber-physical systems.},
  acmid      = {1506426},
  address    = {New York, NY, USA},
  file       = {Lee2009.pdf:files\\Lee2009.pdf:PDF},
  groups     = {Cyber-Physical Systems, (RT-) Embedded Systems},
  issue_date = {May 2009},
  numpages   = {10},
  owner      = {hilrob},
  publisher  = {ACM},
  read       = {next},
  timestamp  = {2012.02.09},
}

@TechReport{Lee2006,
  author      = {Lee, Edward A.},
  title       = {{T}he {P}roblem with {T}hreads},
  institution = {Electrical Engineering and Computer Sciences, University of California at Berkeley},
  year        = {2006},
  type        = {Technical Report},
  number      = {UCB/EECS-2006-1},
  note        = {available online},
  url         = {http://www.eecs.berkeley.edu/Pubs/TechRpts/2006/EECS-2006-1.html},
  abstract    = {{T}hreads are a seemingly straightforward adaptation of the dominant
	sequential model of computation to concurrent systems. {L}anguages
	require little or no syntactic changes to support threads, and operating
	systems and architectures have evolved to efficiently support them.
	{M}any technologists are pushing for increased use of multithreading
	in software in order to take advantage of the predicted increases
	in parallelism in computer architectures. {I}n this paper, {I} argue
	that this is not a good idea. {A}lthough threads seem to be a small
	step from sequential computation, in fact, they represent a huge
	step. {T}hey discard the most essential and appealing properties
	of sequential computation: understandability, predictability, and
	determinism. {T}hreads, as a model of computation, are wildly nondeterministic,
	and the job of the programmer becomes one of pruning that nondeterminism.
	{A}lthough many research techniques improve the model by offering
	more effective pruning, {I} argue that this is approaching the problem
	backwards. {R}ather than pruning nondeterminism, we should build
	from essentially deterministic, composable components. {N}ondeterminism
	should be explicitly and judiciously introduced where needed, rather
	than removed where not needed. {T}he consequences of this principle
	are profound. {I} argue for the development of concurrent coordination
	languages based on sound, composable formalisms. {I} believe that
	such languages will yield much more reliable, and more concurrent
	programs.},
  file        = {Lee2006.pdf:files\\Lee2006.pdf:PDF;Lee2006a.pdf:files\\Lee2006a.pdf:PDF},
  groups      = {Parallel Programming Models},
  owner       = {hilrob},
  read        = {next},
  timestamp   = {2010.10.26},
}

@Misc{Lee2006a,
  author    = {Edward A. Lee},
  title     = {{C}yber-{P}hysical {S}ystems - {A}re {C}omputing {F}oundations {A}dequate?},
  year      = {2006},
  month     = oct,
  url       = {http://ptolemy.eecs.berkeley.edu/publications/papers/06/CPSPositionPaper/},
  abstract  = {{C}yber-{P}hysical {S}ystems ({CPS}) are integrations of computation
	with physical processes. {E}mbedded computers and networks monitor
	and control the physical processes, usually with feedback loops where
	physical processes affect computations and vice versa. {I}n the physical
	world, the passage of time is inexorable and concurrency is intrinsic.
	{N}either of these properties is present in today's computing and
	networking abstractions. {I} argue that the mismatch between these
	abstractions and properties of physical processes impede technical
	progress, and {I} identify promising technologies for research and
	investment. {T}here are technical approaches that partially bridge
	the abstraction gap today (such as real-time operating systems, middleware
	technologies, specialized embedded processor architectures, and specialized
	networks), and there is certainly considerable room for improvement
	of these technologies. {H}owever, it may be that we need a less incremental
	approach, where new abstractions are built from the ground up. {T}he
	foundations of computing are built on the premise that the principal
	task of computers is transformation of data. {Y}et we know that the
	technology is capable of far richer interactions the physical world.
	{I} critically examine the foundations that have been built over
	the last several decades, and determine where the technology and
	theory bottlenecks and opportunities lie. {I} argue for a new systems
	science that is jointly physical and computational.},
  file      = {Lee2006a.pdf:files\\Lee2006a.pdf:PDF},
  groups    = {Cyber-Physical Systems, (RT-) Embedded Systems},
  keywords  = {CYBER PHYSICAL SYSTEMS;},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2011.10.23},
}

@Book{Lee2011,
  author    = {Edward A. Lee and Sanjit A. Seshia},
  title     = {{I}ntroduction to {E}mbedded {S}ystems, {A} {C}yber-{P}hysical {S}ystems {A}pproach},
  year      = {2011},
  publisher = {LuLu.com},
  isbn      = {978-0-557-70857-4},
  url       = {http://LeeSeshia.org},
  file      = {Lee2011.pdf:files\\Lee2011.pdf:PDF},
  groups    = {Books, Cyber-Physical Systems, (RT-) Embedded Systems, Formale Methoden, Software Modellierung},
  owner     = {hilrob},
  read      = {reading},
  timestamp = {2011.10.22},
}

@InProceedings{Lee2005,
  author    = {Jong-In Lee and Su-Hyun Park and Ho-Jung Bang and Tai-Hyo Kim and Sung-Deok Cha},
  title     = {{A} {H}ybrid {F}ramework of {W}orst-{C}ase {E}xecution {T}ime {A}nalysis for {R}eal-{T}ime {E}mbedded {S}ystem {S}oftware},
  booktitle = {Aerospace Conference, 2005 IEEE},
  year      = {2005},
  month     = mar,
  pages     = {1--10},
  doi       = {10.1109/AERO.2005.1559632},
  abstract  = {Timing analysis is an essential process for development of real-time
	embedded system and knowledge about the worst-case execution time
	(WCET) of real-time programs is critical to validation of temporal
	correctness of implemented system. Recently, automated static timing
	analysis methods are introduced to facilitate timing analysis process
	for real-time software, and to provide safe and tight WCET. But static
	WCET analysis methods have drawback as they do not provide accurate
	WCET for hardware-dependent software or application software where
	input data rate from external environment needs to be considered.
	Also, the WCET obtained from static WCET analysis needs to be verified
	at target system before system deployment. In this paper, we propose
	a framework of WCET analysis for real-time embedded software which
	complements static WCET approach and provides tight and safe WCET
	by combining static timing analysis approach with dynamic measurement.
	The application of proposed framework to the WCET analysis of command
	processing and data acquisition part of KOMPSAT-2 satellite flight
	software is presented to show effectiveness of the proposed approach},
  file      = {Lee2005.pdf:files\\Lee2005.pdf:PDF},
  groups    = {WCET},
  keywords  = {KOMPSAT-2 satellite flight software;application software;automated static timing analysis;command processing;data acquisition;hardware-dependent software;real-time embedded system software;real-time programs;system deployment;worst-case execution time analysis;aerospace computing;aerospace test facilities;artificial satellites;data acquisition;embedded systems;program diagnostics;},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.06.04},
}

@InProceedings{Lee1998,
  author        = {Lee, Yann-Hang and Kim, Daeyoung and Younis, M. and Zhou, J.},
  title         = {{P}artition scheduling in {APEX} runtime environment for embedded avionics software},
  booktitle     = {Proceedings Fifth International Conference on Real-Time Computing Systems and Applications (Cat. No.98EX236)},
  year          = {1998},
  publisher     = {IEEE Comput. Soc},
  isbn          = {0-8186-9209-X},
  pages         = {103--109},
  doi           = {10.1109/RTCSA.1998.726357},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=726357},
  abstract      = {{A}dvances in the computer technology encouraged the avionics industry
	to replace the federated design of control units with an integrated
	suite of control modules that share the computing resources. {T}he
	new approach, which is called integrated modular avionics ({IMA}),
	can achieve substantial cost reduction in the development, operation
	and maintenance of airplanes. {A} set of guidelines has been developed
	by the avionics industry to facilitate the development and certification
	of integrated systems. {A}mong them, a software architecture is recommended
	to address real time and fault tolerance requirements. {A}ccording
	to the architecture, applications are classified into partitions
	supervised by an operating system executive. {A} general purpose
	application/executive ({APEX}) interface is defined which identifies
	the minimum functionality provided to the application software of
	an {IMA} system. {T}o support the temporal partitioning between applications,
	{APEX} interface requires a deterministic cyclic scheduling of partitions
	at the {O}/{S} level and a fixed priority scheduling among processes
	within each partition. {W}e propose a scheduling scheme for partitions
	in {APEX}. {T}he scheme determines the frequency that each partition
	must be invoked and the assignment of processor capacity on every
	invocation. {T}hen, a cyclic schedule at the {O}/{S} level can be
	constructed and all processes within each partition can meet their
	deadline requirements.},
  address       = {Washington, DC, USA},
  file          = {Lee1998.pdf:files\\Lee1998.pdf:PDF},
  groups        = {Domänen-spezifisch},
  keywords      = {APEX,ARINC 653,AVIONICS,FAULT-TOLERANT COMPUTING,IMA,OPERATING SYSTEMS,PARTITIONING,REAL-TIME SYSTEMS,RESOURCE PARTITIONING,SCHEDULING,SPACE PARTITIONING,TIME PARTITIONING},
  mendeley-tags = {APEX,ARINC 653,AVIONICS,FAULT-TOLERANT COMPUTING,IMA,OPERATING SYSTEMS,PARTITIONING,REAL-TIME SYSTEMS,RESOURCE PARTITIONING,SCHEDULING,SPACE PARTITIONING,TIME PARTITIONING},
  owner         = {hilrob},
  read          = {next},
  timestamp     = {2010.05.28},
}

@Book{Leighton2006,
  author    = {Leighton, Thomson F.},
  title     = {{I}ntroduction to {P}arallel {A}lgorithms and {A}rchitectures: {A}lgorithms and {V}lsi},
  year      = {2006},
  note      = {Wurde bestellt, weil für Kornaros2010, Kapitel 5 benötigt.},
  publisher = {Morgan Kaufmann Publishers Inc.},
  isbn      = {155860118X},
  address   = {San Francisco, CA, USA},
  groups    = {Books},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2010.07.06},
}

@InProceedings{Leinwand1982,
  author    = {Leinwand, S. M.},
  title     = {{L}ogical correctness by construction},
  booktitle = {Proceedings of the 19th Design Automation Conference},
  year      = {1982},
  series    = {DAC '82},
  publisher = {IEEE Press},
  isbn      = {0-89791-020-6},
  pages     = {825--831},
  url       = {http://dl.acm.org/citation.cfm?id=800263.809296},
  acmid     = {809296},
  address   = {Piscataway, NJ, USA},
  file      = {Leinwand1982.pdf:files\\Leinwand1982.pdf:PDF},
  groups    = {Correctness by Construction},
  numpages  = {7},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.11.28},
}

@Misc{Leiserson2008,
  author       = {Leiserson, Charles E. and Mirman, Ilya B.},
  title        = {{H}ow to {S}urvive the {M}ulticore {S}oftware {R}evolution (or at {L}east {S}urvive the {H}ype)},
  year         = {2008},
  howpublished = {http://software.intel.com/file/23369},
  month        = aug,
  file         = {Leiserson2008.pdf:files\\Leiserson2008.pdf:PDF},
  groups       = {Books},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2010.09.23},
}

@Article{Lelli2012,
  author    = {Juri Lelli and Dario Faggioli and Tommaso Cucinotta and Giuseppe Lipari},
  title     = {{A}n experimental comparison of different real-time schedulers on multicore systems},
  journal   = {Journal of Systems and Software},
  year      = {2012},
  volume    = {85},
  number    = {10},
  pages     = {2405--2416},
  note      = {<ce:title>Automated Software Evolution</ce:title>},
  issn      = {0164-1212},
  doi       = {10.1016/j.jss.2012.05.048},
  url       = {http://www.sciencedirect.com/science/article/pii/S016412121200146X},
  abstract  = {In this work, an experimental comparison among the Rate Monotonic
	(RM) and Earliest Deadline First (EDF) multiprocessor real-time schedulers
	is performed, with a focus on soft real-time systems. We generated
	random workloads of synthetic periodic task sets and executed them
	on a big multi-core machine, using Linux as Operating System, gathering
	an extensive amount of data related to their exhibited performance
	under various real-time scheduling strategies. The comparison involves
	the fixed-priority scheduler for multiprocessors as available in
	the Linux kernel (with priorities set so as to achieve RM), and on
	our own implementation of EDF, both configured in global, partitioned
	and clustered mode. The impact of the various scheduling strategies
	on the performance of the applications, as well as the generated
	scheduling overheads, are compared presenting an extensive set of
	experimental results. These provide a comprehensive view of the performance
	achievable by the different schedulers under various workload conditions.},
  file      = {Lelli2012.pdf:files\\Lelli2012.pdf:PDF},
  groups    = {(RT-) Scheduling},
  keywords  = {Real-time scheduling},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.09.17},
}

@TechReport{Leroux2009a,
  author      = {Leroux, Paul},
  title       = {{E}xactly {W}hen {D}o {Y}ou {N}eed an {RTOS}?},
  institution = {QNX Software Systems},
  year        = {2009},
  type        = {Whitepaper},
  url         = {http://www.qnx.com/download/download/8090/qnx_when_do_you_need_an_rtos_RIM_MC411.28.pdf},
  abstract    = {{T}ogether, the speed of today's high-performance processors and realtime
	patches for general-purpose {OS}s appear to have re-opened the question
	of whether embedded systems still need an {RTOS}. {T}he answer hasn't
	changed: the guarantees only a true {RTOS} can offer on relatively
	low-end processors mean that these {OS}s are here to stay in embedded
	environments.},
  file        = {Leroux2009a.pdf:files\\Leroux2009a.pdf:PDF},
  groups      = {(RT-) Embedded Systems, Reliability & Dependability, (RT-) Scheduling, Virtualisierung & Partitionierung},
  keywords    = {QNX; RTOS; SCHEDULING; GPOS; TOOLS;},
  owner       = {hilrob},
  read        = {done},
  timestamp   = {2011.02.09},
}

@TechReport{Leroux2009,
  author        = {Leroux, Paul N. and Johnson, Kerry},
  title         = {{U}sing {R}esource {P}artitioning to {B}uild {S}ecure , {S}urvivable {E}mbedded {S}ystems},
  institution   = {QNX Software Systems},
  year          = {2009},
  pages         = {1--9},
  url           = {http://www.qnx.com/download/download/12491/qnx\_partitioning\_secure\_survivable\_paper.pdf},
  abstract      = {{T}his paper explores how resource partitioning can improve the security,
	availability, and dynamic upgradeability of industrial automation
	systems, automotive infotainment devices, and other embedded systems.
	{U}sing this technique, developers can place programs into virtual
	compartments, called partitions, and allocate a guaranteed amount
	of memory or {CPU} time to each partition. {T}hese resource guarantees
	can safeguard the system against denial-of-service ({D}o{S}) attacks;
	prevent poorly written or malicious tasks from monopolizing resources
	needed by other tasks; ensure that lower-priority functions always
	have the {CPU} cycles they require; and allow the system to dynamically
	support new services while ensuring that existing services still
	have sufficient computing resources.},
  annote        = {Abstract \& Introduction ================= o Resource partitioning for: - Security, - availability and - dynamic upgradeability o Make legacy designs resistant o Minimize resource consumption Secure Compartments ================= o Partitions prevent tasks from monopolizing resources o Partitions can provide memory protection o Partitions are especially beneficial when used in conjunction with a µKernel o ARINC 653 is well known, but is a very rigid and inefficient approach towards resource partitioning o A partitioning scheme helps to enforce resource budgets during development time Avoid Process Starvation ================== o Priority-based scheduling approaches offer no guarantee that lower-priority tasks will access at least a fraction of the CPU Fixed Partition Scheduler =================== o Idle partitions consume CPU ressources, while other partitions could benefit from additional cycles o Fixed partition schedulers can achieve only 70\% CPU utilization Adaptive Partitioning Schedulers ======================== o it recognizes that CPU utilization is sporadic which results in idle time being available o "CPU Time borrowing" Partition Inheritance =============== o if a server is executing a request for the client, the client is billed for the server's time o runaway clients can monopolize drivers and services Increased System Availability ====================== o Watchdog gets its cycles Scaling Partitions on Multi-Core Processors ================================ o Challenge: extent the RTOS scheduler from a single CPU to many cores o Bound Multi-Processing -> Extension of SMP, allows a developer to bind a process to a specific core Pain-Free Software Integration ====================== o Parallel development path of several vendors for several subsystems -> performance problems arise in the integration phase Conflicting Demands =============== o Without some form of partitioning, system designers and engineers will be hard-pressed to satisfy the need of reliability, performance, security, time to market and new features Fragen: - Wo liegt der Unterschied zwischen Partitionierung und Virtualisierung? - Welche Dinge lassen sich daran modellieren? Wozu \"{u}berhaupt?},
  booktitle     = {http://www.qnx.com},
  file          = {Leroux2009.pdf:files\\Leroux2009.pdf:PDF;Leroux2009a.pdf:files\\Leroux2009a.pdf:PDF},
  groups        = {Misc},
  keywords      = {ADAPTIVE PARTITIONING,AUTOMATION,AUTOMOTIVE,AVIONICS,CONCEPT,INDUSTRIAL AUTOMATION,INTRODUCTION,PARTITIONING,QNX,RESOURCE PARTITIONING},
  mendeley-tags = {ADAPTIVE PARTITIONING,AUTOMATION,AUTOMOTIVE,AVIONICS,CONCEPT,INDUSTRIAL AUTOMATION,INTRODUCTION,PARTITIONING,QNX,RESOURCE PARTITIONING},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Book{Leung2004,
  author    = {Leung, Joseph and Kelly, Laurie and Anderson, James H.},
  title     = {{H}andbook of {S}cheduling: {A}lgorithms, {M}odels, and {P}erformance {A}nalysis},
  year      = {2004},
  publisher = {CRC Press, Inc.},
  isbn      = {1584883979},
  address   = {Boca Raton, FL, USA},
  groups    = {Books, (RT-) Scheduling},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2011.01.19},
}

@InProceedings{Leupers2011,
  author    = {Leupers, R. and Eeckhout, L. and Martin, G. and Schirrmeister, F. and Topham, N. and Xiaotao Chen},
  title     = {{V}irtual {M}anycore platforms: {M}oving towards 100 - processor cores},
  booktitle = {Design, Automation Test in Europe Conference Exhibition (DATE), 2011},
  year      = {2011},
  month     = mar,
  pages     = {1--6},
  abstract  = {The evolution to Manycore platforms is real, both in the High-Performance
	Computing domain and in embedded systems. If we start with ten or
	more cores, we can see the evolution to many tens of cores and to
	platforms with 100 or more occurring in the next few years. These
	platforms are heterogeneous, homogeneous, or a mixture of subsystems
	of both types, both relatively generic and quite application-specific.
	They are applied to many different application areas. When we consider
	the design, verification, software development and debugging requirements
	for applications on these platforms, the need for virtual platform
	technologies for Manycore systems grows quickly as the systems evolve.
	As we move to Manycore, the key issue is simulation speed, and trying
	to keep pace with the target complexity using host-based simulation
	is a major challenge. New Instruction Set Simulation technologies,
	such as compiled, JIT, DBT, sampling, abstract, hybrid and parallel
	have all emerged in the last few years to match the growth in complexity
	and requirements. At the same time, we have seen consolidation in
	the virtual platform industrial sector, leading to some concerns
	about whether the market can support the required continued development
	of innovations to give the needed performance. This special session
	deals with Manycore virtual platforms from several different perspectives,
	highlighting new research approaches for high speed simulation, tool
	and IP marketing opportunities, as well as real life virtual platform
	needs of industrial end users.},
  file      = {Leupers2011.pdf:files\\Leupers2011.pdf:PDF},
  groups    = {Many-Core},
  issn      = {1530-1591},
  keywords  = {debugging requirement;design requirement;embedded systems;high-performance computing domain;instruction set simulation technology;processor cores;software development requirement;verification requirement;virtual manycore platforms;virtual platform industrial sector;computer debugging;embedded systems;formal verification;logic design;multiprocessing systems;},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.06.04},
}

@InProceedings{Li2005,
  author    = {Feihui Li and Kandemir, M.},
  title     = {{L}ocality-conscious workload assignment for array-based computations in {MPSOC} architectures},
  booktitle = {Proc. 42nd Design Automation Conf},
  year      = {2005},
  pages     = {95--100},
  file      = {Li2005.pdf:files\\Li2005.pdf:PDF},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.06.09},
}

@InProceedings{Li2009,
  author    = {Yan Li and Suhendra, V. and Yun Liang and Mitra, T. and Roychoudhury, A.},
  title     = {{T}iming {A}nalysis of {C}oncurrent {P}rograms {R}unning on {S}hared {C}ache {M}ulti-{C}ores},
  booktitle = {Real-Time Systems Symposium, 2009, RTSS 2009. 30th IEEE},
  year      = {2009},
  month     = {1-4},
  pages     = {57--67},
  doi       = {10.1109/RTSS.2009.32},
  abstract  = {{M}emory accesses form an important source of timing unpredictability.
	{T}iming analysis of real-time embedded software thus requires bounding
	the time for memory accesses. {M}ultiprocessing, a popular approach
	for performance enhancement, opens up the opportunity for concurrent
	execution. {H}owever due to contention for any shared memory by different
	processing cores, memory access behavior becomes more unpredictable,
	and hence harder to analyze. {I}n this paper, we develop a timing
	analysis method for concurrent software running on multi-cores with
	a shared instruction cache. {C}ommunication across tasks is by message
	passing where the message mailboxes are accessed via interrupt service
	routines. {W}e do not handle data cache, shared memory synchronization
	and code sharing across tasks. {O}ur method progressively improves
	the lifetime estimates of tasks that execute concurrently on multiple
	cores, in order to estimate potential conflicts in the shared cache.
	{P}ossible conflicts arising from overlapping task lifetimes are
	accounted for in the hit-miss classification of accesses to the shared
	cache, to provide safe execution time bounds. {W}e show that our
	method produces lower worst-case response time ({WCRT}) estimates
	than existing shared-cache analysis on a real-world embedded application.},
  file      = {Li2009.pdf:files\\Li2009.pdf:PDF},
  issn      = {1052-8725},
  keywords  = {CODE SHARING,CONCURRENT EXECUTION,CONCURRENT PROGRAMS,CONCURRENT SOFTWARE,HIT-MISS CLASSIFICATION,INTERRUPT SERVICE ROUTINES,MEMORY ACCESSES,MESSAGE MAILBOXES,MESSAGE PASSING,MULTIPROCESSING SYSTEM,REAL-TIME EMBEDDED SOFTWARE,SHARED INSTRUCTION CACHE,SHARED MEMORY SYNCHRONIZATION,TIMING ANALYSIS,WORST-CASE RESPONSE TIME,CONCURRENCY CONTROL,EMBEDDED SYSTEMS,INTERRUPTS,MESSAGE PASSING,MULTIPROCESSING PROGRAMS,PROGRAM DIAGNOSTICS,SHARED MEMORY SYSTEMS,TIMING,WCET},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.06.25},
}

@InProceedings{Liedtke1995,
  author    = {Liedtke, J.},
  title     = {{O}n micro-kernel construction},
  booktitle = {Proceedings of the fifteenth ACM symposium on Operating systems principles},
  year      = {1995},
  series    = {SOSP '95},
  publisher = {ACM},
  location  = {Copper Mountain, Colorado, United States},
  isbn      = {0-89791-715-4},
  pages     = {237--250},
  doi       = {http://doi.acm.org/10.1145/224056.224075},
  url       = {http://doi.acm.org/10.1145/224056.224075},
  acmid     = {224075},
  address   = {New York, NY, USA},
  file      = {Liedtke1995.pdf:files\\Liedtke1995.pdf:PDF},
  groups    = {Mikrokernel},
  numpages  = {14},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2011.02.23},
}

@Periodical{Link2010,
  title     = {{O}hne {L}ocks geht's nicht, oder? - {P}aradigmen für {N}ebenläufigkeit, {T}eil 1: {T}ransaktionaler {S}peicher und {U}nveränderlichkeit},
  year      = {2010},
  language  = {German},
  series    = {JavaSpektrum},
  number    = {4},
  abstract  = {{E}in {P}roblem der {P}rogrammierung nebenläufiger {P}rozesse ist
	der {Z}ugriff auf gemeinsame {R}essourcen. {D}as gängige {P}rogrammiermodell
	für die nebenläufige {P}rogrammierung unter {J}ava setzt auf explizite
	{S}ynchronisation. {D}ie {F}einheiten dieses {A}nsatzes sind schwer
	zu erlernen und in komplexen {S}ystemen kaum fehlerfrei zu implementieren.
	{E}s existieren jedoch eine {R}eiher alternativer {P}rogrammierparadigmen,
	die versprechen, den {U}mgang mit nebenläufigen {P}roblemstellungen
	einfach zu machen. {I}n diesem zweiteiligen {A}rtikel werden einige
	dieser {A}nsätze vorgestellt und mit {B}eispielen in {J}ava und dem
	{G}oovy-{F}ramework {GP}ars erläutert. {I}m ersten {T}eil geht um
	{A}lternativen zu den {L}ocks, im zweiten {T}eil um die {A}usnutzung
	des {P}arallelisierungspotentials.},
  author    = {Link, Johannes},
  file      = {Link2010.pdf:files\\Link2010.pdf:PDF;Link2010a.pdf:files\\Link2010a.pdf:PDF},
  groups    = {Parallel Programming Models},
  isbn      = {1431-4436},
  keywords  = {JAVA, LOCKS, TRANSACTIONAL MEMORY, SYNCHRONIZATION, PARALLELIZATION, PROGRAMMING},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.10.25},
}

@Periodical{Link2010a,
  title        = {{N}ebeneinander statt {D}urcheinander - {P}aradigmen für {N}ebenläufigkeit - {T}eil 2: {A}ktoren, {P}arallele {C}ollections und {D}ata {F}lows},
  year         = {2010},
  language     = {German},
  series       = {JavaSpektrum},
  number       = {5},
  month        = may,
  url          = {http://www.sigs.de/publications/newsletter/2010/09/link_JS_05_10.pdf},
  abstract     = {{D}as gängige {P}rogrammiermodell für die nebenläufige {P}rogrammierung
	unter {J}ava versucht, die semantische {K}orrektheit von {Z}ugriffen
	auf {O}bjekte, die in mehreren {T}hreads benutzt werden, überwiegend
	durch den {E}insatz expliziter {S}ynchronisation zu erreichen. {D}ie
	{F}einheiten dieses {A}nsatzes sind schwer zu erlernen und in komplexeren
	{S}ystemen kaum fehlerfrei zu implementieren. {E}s existiert jedoch
	eine {R}eihe alternativer {P}rogrammierparadigmen, die versprechen,
	den {U}mgang mit nebenläufigen {P}roblemstellungen einfacher zu machen.
	{I}n diesem zweiteiligen {A}rtikel werden einige dieser {A}nsätze
	vorgestellt und mit {B}eispielen in {J}ava und dem {G}roovy-{F}ramework
	{GP}ars erläutert.},
  author       = {Link, Johannes},
  file         = {Link2010a.pdf:files\\Link2010a.pdf:PDF},
  groups       = {Parallel Programming Models},
  keywords     = {JAVA; PARALLEL PROGRAMMING; ACTORS; COLLECTIONS;},
  organization = {SIGS Datacom},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2010.10.06},
}

@Article{Liu1973,
  author    = {Liu, C. L. and Layland, James W.},
  title     = {{S}cheduling {A}lgorithms for {M}ultiprogramming in a {H}ard-{R}eal-{T}ime {E}nvironment},
  journal   = {J. ACM},
  year      = {1973},
  volume    = {20},
  issue     = {1},
  month     = jan,
  pages     = {46--61},
  issn      = {0004-5411},
  doi       = {http://doi.acm.org/10.1145/321738.321743},
  url       = {http://doi.acm.org/10.1145/321738.321743},
  abstract  = {{T}he problem of multiprogram scheduling on a single processor is
	studied from the viewpoint of the characteristics peculiar to the
	program functions that need guaranteed service. {I}t is shown that
	an optimum fixed priority scheduler possesses an upper bound to processor
	utilization which may be as low as 70 percent for large task sets.
	{I}t is also shown that full processor utilization can be achieved
	by dynamically assigning priorities on the basis of their current
	deadlines. {A} combination of these two scheduling techniques is
	also discussed.},
  acmid     = {321743},
  address   = {New York, NY, USA},
  file      = {Liu1973.pdf:files\\Liu1973.pdf:PDF},
  groups    = {Formale Methoden, (RT-) Scheduling, Software Modellierung},
  numpages  = {16},
  owner     = {hilrob},
  publisher = {ACM},
  read      = {unread},
  timestamp = {2011.05.13},
}

@InProceedings{Liu2009,
  author    = {Liu, Rose and Klues, Kevin and Bird, Sarah and Hofmeyr, Steven and Asanovi\'{c}, Krste and Kubiatowicz, John},
  title     = {{T}essellation: space-time partitioning in a manycore client {OS}},
  booktitle = {Proceedings of the First USENIX conference on Hot topics in parallelism},
  year      = {2009},
  series    = {HotPar'09},
  publisher = {USENIX Association},
  location  = {Berkeley, California},
  pages     = {10--10},
  url       = {http://dl.acm.org/citation.cfm?id=1855591.1855601},
  abstract  = {{W}e argue for space-time partitioning ({STP}) in manycore operating
	systems. {STP} divides resources such as cores, cache, and network
	bandwidth amongst interacting software components. {C}omponents are
	given unrestricted access to their resources and may schedule them
	in an application-specific fashion, which is critical for good parallel
	application performance. {C}omponents communicate via messages, which
	are strictly controlled to enhance correctness and security. {W}e
	discuss properties of {STP} and ways in which hardware can assist
	{STP}. {W}e introduce {T}essellation, a new operating system built
	on top of {STP}, which restructures a traditional operating system
	as a set of distributed interacting services. {I}n {T}essellation,
	parallel applications can efficiently coexist and interact with one
	another.},
  acmid     = {1855601},
  address   = {Berkeley, CA, USA},
  file      = {Liu2009.pdf:files\\Liu2009.pdf:PDF},
  groups    = {Betriebssysteme, Many-Core, Virtualisierung & Partitionierung},
  numpages  = {1},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2011.11.09},
}

@Article{Liu1999,
  author     = {Liu, Zhiming and Joseph, Mathai},
  title      = {{S}pecification and {V}erification of {F}ault-tolerance, {T}iming, and {S}cheduling},
  journal    = {ACM Trans. Program. Lang. Syst.},
  year       = {1999},
  volume     = {21},
  number     = {1},
  month      = jan,
  pages      = {46--89},
  issn       = {0164-0925},
  doi        = {10.1145/314602.314605},
  url        = {http://doi.acm.org/10.1145/314602.314605},
  acmid      = {314605},
  address    = {New York, NY, USA},
  file       = {Liu1999.pdf:files\\Liu1999.pdf:PDF},
  groups     = {Konsolidierung & Integration},
  issue_date = {Jan. 1999},
  keywords   = {fault-tolerance, real time, schedulability, specification, transformation, verification},
  numpages   = {44},
  owner      = {hilrob},
  publisher  = {ACM},
  timestamp  = {2014.05.05},
}

@InProceedings{Lombardi2009,
  author    = {Lombardi, M. and Milano, M. and Benini, L.},
  title     = {{R}obust non-preemptive hard real-time scheduling for clustered multicore platforms},
  booktitle = {Design, Automation Test in Europe Conference Exhibition, 2009. DATE '09.},
  year      = {2009},
  month     = apr,
  pages     = {803--808},
  abstract  = {Scheduling task graphs under hard (end-to-end) timing constraints
	is an extensively studied NP-hard problem of critical importance
	for predictable software mapping on Multiprocessor System-on-chip
	(MPSoC) platforms. In this work we focus on an off-line (design-time)
	version of this problem, where the target task graph is known before
	execution time. We address the issue of scheduling robustness, i.e.
	providing hard guarantees that the schedule will meet the end-to-end
	deadline in presence of bounded variations of task execution times
	expressed as min-max intervals known at design time. We present a
	robust scheduling algorithm that proactively inserts sequencing constraints
	when they are needed to ensure that execution will have no inserted
	idle times and will meet the deadline for any possible combination
	of task execution times within the specified intervals. The algorithm
	is complete, i.e. it will return a feasible graph augmentation if
	one exists. Moreover, we provide an optimization version of the algorithm
	that can compute the shortest deadline that can be met in a robust
	way.},
  file      = {Lombardi2009.pdf:files\\Lombardi2009.pdf:PDF},
  groups    = {(RT-) Scheduling},
  issn      = {1530-1591},
  keywords  = {MPSoC platform;NP-hard problem;clustered multicore platform;graph augmentation;multiprocessor system-on-chip platform;nonpreemptive hard real-time scheduling;optimization;scheduling task graph;software mapping;computational complexity;microprocessor chips;multiprocessing systems;optimisation;processor scheduling;real-time systems;system-on-chip;},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.03.12},
}

@Book{Luke2009,
  author    = {Sean Luke},
  title     = {{E}ssentials of {M}etaheuristics},
  year      = {2009},
  note      = {Available for free at http://cs.gmu.edu/$\sim$sean/book/metaheuristics/},
  publisher = {Lulu},
  url       = {http://cs.gmu.edu/~sean/book/metaheuristics/},
  file      = {Luke2009.pdf:files\\Luke2009.pdf:PDF},
  groups    = {Books, Optimierung},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.02.21},
}

@InProceedings{Luethi2007,
  author    = {Lüthi, M.},
  title     = {{P}rinciples and {D}ynamic {A}spects for a {R}ail {T}raffic {R}ealtime {R}escheduling {S}ystem},
  booktitle = {Proc. FORMS/FORMAT 2007, the 6th Symposium on Formal Methods for Automation and Safety in Railway and Automotive Systems},
  year      = {2007},
  pages     = {129--138},
  file      = {Luethi2007.pdf:files\\Luethi2007.pdf:PDF},
  groups    = {Domänen-spezifisch, Formale Methoden, (RT-) Scheduling},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2010.10.27},
}

@InBook{Magee2005,
  author        = {Magee, Jeff and Kramer, Jeff},
  title         = {{M}odel-{B}ased {D}esign of {C}oncurrent {P}rograms},
  booktitle     = {Communicating Sequential Processes},
  year          = {2005},
  publisher     = {Springer},
  isbn          = {978-3-540-25813-1},
  pages         = {211--219},
  url           = {http://www.springerlink.com/index/NC14P4DUF63DXAWT.pdf},
  abstract      = {{A} model is a simplified representation of the real world and, as
	such, includes only those aspects of the real-world system relevant
	to the problem at hand. {T}he paper reviews a modelling approach
	to the design of concurrent programs in which models represent the
	behaviour of concurrent {J}ava programs. {A} notation based on {CSP}
	is used to model behaviour. {T}ool support enables both interactive
	model exploration and the mechanical verification of required safety
	and liveness properties. {M}odels are systematically translated into
	{J}ava programs. {T}he approach, supported by a textbook, forms the
	basis of a course at the authorsrsquo institution and has also been
	widely adopted elsewhere. {W}ith the benefit of five years hindsight,
	we examine the strengths and weaknesses of the approach and look
	at some of the subsequent remedies and directions.},
  address       = {Berlin / Heidelberg},
  annote        = {o Page 1: - "The paper reviews a modelling approach to the design of concurrent programs in which models represent the behaviour of concurrent Java programs. A notation based on CSP is used to model behaviour." - "We used Labelled Transition Systems (LTSs) to model interaction behaviour of real concurrent programs written in Java and model-checking to mechanically safety and liveness properties" o Page 2: - they use a "Single lane bridge" as an example that is to be modelled o Page 3: - CSP programs can be executed by LISP [2] or by using a tool called PROBE [3] o Page 7: - "FSP is really a subset of CSP designed to facilitate tool support. In this section, we discuss some of the differences from CSP and the machine readable version of CSP used in FDR" o Page 8: - LTSA tool that they developed and used helped to verify web service implementations!},
  file          = {Magee2005.pdf:files\\Magee2005.pdf:PDF},
  keywords      = {CSP,FSP,JAVA PROGRAMS,LABELED TRANSITION SYSTEMS,MODEL CHECKING,MODEL-BASED,THEORY},
  mendeley-tags = {CSP,FSP,JAVA PROGRAMS,LABELED TRANSITION SYSTEMS,MODEL CHECKING,MODEL-BASED,THEORY},
  owner         = {hilrob},
  read          = {next},
  timestamp     = {2010.05.28},
}

@Book{Maier2004,
  author    = {Maier, A.K. and Wolf, B.},
  title     = {{W}ege des {K}ybernetes: {S}chreibpraktiken und {S}teuerungsmodelle von {P}olitik, {R}eise, {M}igration},
  year      = {2004},
  series    = {Reiseliteratur und Kulturanthropologie},
  publisher = {Lit},
  isbn      = {9783825879921},
  groups    = {Books, Cyber-Physical Systems},
  lccn      = {2005438241},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2012.02.13},
}

@InBook{Mansoor2012,
  author    = {Mansoor, Arfan and Streitferdt, Detlef},
  title     = {{R}equirement {P}atterns for {M}ulticore {S}ystems},
  booktitle = {2012 IEEE 36th Annual Computer Software and Applications Conference},
  year      = {2012},
  publisher = {Institute of Electrical and Electronics Engineers},
  isbn      = {978-1-4673-1990-4},
  pages     = {344--345},
  doi       = {10.1109/COMPSAC.2012.47},
  url       = {http://dx.doi.org/10.1109/COMPSAC.2012.47},
  file      = {Mansoor2012.pdf:files\\Mansoor2012.pdf:PDF},
  groups    = {Methodik, Requirements},
  month     = jul,
  owner     = {hilrob},
  timestamp = {2014.01.28},
}

@Book{Marwedel2007,
  author        = {Marwedel, Peter},
  title         = {{E}ingebettete {S}ysteme},
  year          = {2007},
  editor        = {Wehmeyer, Lars},
  series        = {eXamen.press},
  publisher     = {Springer},
  isbn          = {3540340483},
  pages         = {265},
  url           = {http://books.google.de/books?id=94L961HZ5lYC\&pg=PR1\&dq=Marwedel+Eingebettete+Systeme\&cd=1\#v=onepage\&q\&f=false},
  abstract      = {{I}nformationsverarbeitende {S}ysteme werden immer kleiner und zunehmend
	in komplexe {P}rodukte eingebettet daher der {N}ame 'eingebettete
	{S}ysteme'. {E}s wird erwartet, dass ihre wirtschaftliche {B}edeutung
	diejenige von traditionellen informationsverarbeitenden {S}ystemen
	wie {PC}s und {G}ro\ss rechnern deutlich \"{u}bersteigen wird. {D}ieses
	{B}uch betrachtet gemeinsame {E}igenschaften solcher {S}ysteme wie
	{V}erl\"{a}sslichkeit, {E}ffizienz, {E}chtzeitanforderungen sowie
	anwendungsspezifische {B}enutzerschnittstellen. {N}eben {S}pezifikationssprachen
	werden {H}ard- und {S}oftware eingebetteter {S}ysteme sowie {E}chtzeitbetriebssysteme
	und {S}cheduling betrachtet. {Z}ur {I}mplementierung eingebetteter
	{S}ysteme wird {H}ardware-/{S}oftware-{C}odesign verwendet. {D}as
	{B}uch schlie\ss t mit einem \"{U}berblick \"{u}ber {V}alidierungstechniken.
	{D}ieses {B}uch eignet sich als {B}egleitbuch zu einem {K}urs \"{u}ber
	eingebettete {S}ysteme, ist aber auch eine {I}nformationsquelle f\"{u}r
	{D}oktoranden und {L}ehrende. {G}rundwissen \"{u}ber {H}ard- und
	{S}oftware in der {I}nformationsverarbeitung wird vorausgesetzt.},
  file          = {Marwedel2007.pdf:files\\Marwedel2007.pdf:PDF},
  groups        = {Books},
  keywords      = {BASICS,EMBEDDED SYSTEMS,INTRODUCTION,OVERVIEW,SCHEDULING,SPECIFICATION LANGUAGES,VALIDATION},
  mendeley-tags = {BASICS,EMBEDDED SYSTEMS,INTRODUCTION,OVERVIEW,SCHEDULING,SPECIFICATION LANGUAGES,VALIDATION},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.27},
}

@Book{Marwedel2011,
  author       = {Marwedel, Peter},
  title        = {{E}mbedded {S}ystems {D}esign - {E}mbedded {S}ystems {F}oundations of {C}yber-{P}hysical {S}ystems},
  year         = {2011},
  edition      = {2nd},
  note         = {ISBN 978-94-007-0256-1},
  publisher    = {Springer},
  abstract     = {Until the late 1980s, information processing was associated with large
	mainframe computers and huge tape drives. During the 1990s, this
	trend shifted toward information processing with personal computers,
	or PCs. The trend toward miniaturization continues and in the future
	the majority of information processing systems will be small mobile
	computers, many of which will be embedded into larger products and
	interfaced to the physical environment. Hence, these kinds of systems
	are called embedded systems. Embedded systems together with their
	physical environment are called cyber-physical systems. Examples
	include systems such as transportation and fabrication equipment.
	It is expected that the total market volume of embedded systems will
	be significantly larger than that of traditional information processing
	systems such as PCs and mainframes. Embedded systems share a number
	of common characteristics. For example, they must be dependable,
	efficient, meet real-time constraints and require customized user
	interfaces (instead of generic keyboard and mouse interfaces). Therefore,
	it makes sense to consider common principles of embedded system design.
	Embedded System Design starts with an introduction into the area
	and a survey of specification models and languages for embedded and
	cyber-physical systems. It provides a brief overview of hardware
	devices used for such systems and presents the essentials of system
	software for embedded systems, like real-time operating systems.
	The book also discusses evaluation and validation techniques for
	embedded systems. Furthermore, the book presents an overview of techniques
	for mapping applications to execution platforms. Due to the importance
	of resource efficiency, the book also contains a selected set of
	optimization techniques for embedded systems, including special compilation
	techniques. The book closes with a brief survey on testing. Embedded
	System Design can be used as a text book for courses on embedded
	systems and as a source which provides pointers to relevant material
	in the area for PhD students and teachers. It assumes a basic knowledge
	of information processing hardware and software. Courseware related
	to this book is available at http://ls12-www.cs.tu-dortmund.de/~marwedel.},
  confidential = {n},
  groups       = {Books, Cyber-Physical Systems},
  owner        = {hilrob},
  read         = {unread},
  timestamp    = {2012.02.20},
}

@Misc{MathWorksSimulink,
  author       = {MathWorks},
  title        = {{SIMULINK} {R}2014a},
  year         = {2014},
  howpublished = {online},
  month        = mar,
  url          = {http://www.mathworks.de/products/simulink/},
  groups       = {Tools},
  owner        = {hilrob},
  timestamp    = {2014.04.25},
}

@Misc{Mattern2010,
  author    = {Friedemann Mattern and Christian Floerkemeier},
  editor    = {Kai Sachs and Ilia Petrov and Pablo Guerrero},
  title     = {{F}rom the {I}nternet of {C}omputers to the {I}nternet of {T}hings},
  year      = {2010},
  booktitle = {From Active Data Management to Event-Based Systems and More},
  file      = {Mattern2010.pdf:files\\Mattern2010.pdf:PDF},
  groups    = {Cyber-Physical Systems},
  owner     = {hilrob},
  pages     = {242--259},
  publisher = {Springer},
  read      = {unread},
  series    = {LNCS},
  timestamp = {2012.02.22},
  volume    = {6462},
}

@InBook{May2005,
  author        = {May, David},
  title         = {{CSP}, occam and {T}ransputers},
  booktitle     = {Communicating Sequential Processes},
  year          = {2005},
  publisher     = {Springer},
  pages         = {75--84},
  doi           = {http://dx.doi.org/10.1007/11423348\_5},
  url           = {http://www.springerlink.com/index/XE5PCLNWVDX3BT0Q.pdf},
  abstract      = {{T}he following is based on an after-dinner speech at the conference
	to celebrate the 25th anniversary of {CSP}. {I}t's an informal -
	and personal - account of the development of {CSP} and the related
	work on the occam language and the {I}nmos transputer. {T}his involved
	many exceptional people, and {I}'ve only been able to mention a few
	of them - but before {I} start - {I}rsquod like to thank them all.},
  annote        = {sehr interessanter Artikel, der einem mehr Motivation f\"{u}r das Einarbeiten in CSP gibt. Er beschreibt auch, dass Concurrency die eigentliche Form der Programmierung ist, sowie dass die zuk\"{u}nftigen Entwicklungen bei Programmiersprachen eher in die Richtung CSP gehen werden - insb. durch die ubiquit\"{a}re Verf\"{u}gbarkeit von Multi-core Prozessoren.},
  file          = {May2005.pdf:files\\May2005.pdf:PDF},
  keywords      = {CSP,OCCAM,THEORY,TRANSPUTER},
  mendeley-tags = {CSP,OCCAM,THEORY,TRANSPUTER},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@InProceedings{Mazzini2009,
  author    = {Mazzini, Silvia and Puri, Stefano and Vardanega, Tullio},
  title     = {{A}n {MDE} methodology for the development of high-integrity real-time systems},
  booktitle = {Proceedings of the Conference on Design, Automation and Test in Europe},
  year      = {2009},
  series    = {DATE '09},
  publisher = {European Design and Automation Association},
  location  = {Nice, France},
  isbn      = {978-3-9810801-5-5},
  pages     = {1154--1159},
  url       = {http://dl.acm.org/citation.cfm?id=1874620.1874899},
  acmid     = {1874899},
  address   = {3001 Leuven, Belgium, Belgium},
  file      = {Mazzini2009.pdf:files\\Mazzini2009.pdf:PDF},
  groups    = {Correctness by Construction},
  numpages  = {6},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.11.28},
}

@InProceedings{Medvidovic2007,
  author    = {Medvidovic, Nenad and Malek, Sam},
  title     = {{S}oftware deployment architecture and quality-of-service in pervasive environments},
  booktitle = {International workshop on Engineering of software services for pervasive environments: in conjunction with the 6th ESEC/FSE joint meeting},
  year      = {2007},
  series    = {ESSPE '07},
  publisher = {ACM},
  location  = {Dubrovnik, Croatia},
  isbn      = {978-1-59593-798-8},
  pages     = {47--51},
  doi       = {10.1145/1294904.1294911},
  url       = {http://doi.acm.org/10.1145/1294904.1294911},
  abstract  = {Over the past several years we have investigated two problems related
	to the domain of highly distributed, mobile, resource constrained,
	embedded, and pervasive environments: software deployment and quality
	of service (QoS). We have done so with the explicit focus on the
	role played by software architecture in deployment, and on its relationship
	to QoS. In the process, we have amassed a body of knowledge and experience,
	and assembled a suite of solutions for targeting different facets
	of the interplay among software architecture, deployment, and QoS.
	At the same time, the area we are addressing has proven to be multi-faceted
	and very complex, constantly presenting new challenges. In this paper
	we outline the contours of the problem of QoS in architecture-based
	deployment, our strategy for addressing it, and the challenges that
	remain. We view this as an important (and fruitful) area of research.},
  acmid     = {1294911},
  address   = {New York, NY, USA},
  file      = {Medvidovic2007.pdf:files\\Medvidovic2007.pdf:PDF},
  groups    = {Software Deployment},
  numpages  = {5},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2012.06.06},
}

@InProceedings{Metzner2006,
  author    = {Metzner, A. and Herde, C.},
  title     = {{RTSAT}-- {A}n {O}ptimal and {E}fficient {A}pproach to the {T}ask {A}llocation {P}roblem in {D}istributed {A}rchitectures},
  booktitle = {Real-Time Systems Symposium, 2006. RTSS '06. 27th IEEE International},
  year      = {2006},
  pages     = {147--158},
  doi       = {10.1109/RTSS.2006.44},
  abstract  = {We present an advanced SAT-based approach to the task and message
	allocation problem of distributed real-time systems. In contrast
	to the heuristic approaches usually applied to this problem, our
	approach is guaranteed to find an optimal allocation for realistic
	task systems running on complex target architectures. Our method
	is based on the transformation of such scheduling problems into nonlinear
	integer optimization problems. The core of the numerical optimization
	procedure we use to discharge those problems is a solver for arbitrary
	Boolean combinations of integer constraints. While the determination
	of the task and message placement is done within the satisfiability
	checking based solver, checking for feasibility w.r.t real-time requirements
	is performed in a specialized real-time engine under control of the
	satisfiability solver. Optimal solutions are obtained by imposing
	a binary search scheme on top of that solver. Experiments show the
	applicability of our approach to industrial-size task systems},
  file      = {Metzner2006.pdf:files\\Metzner2006.pdf:PDF},
  groups    = {Software Deployment},
  issn      = {1052-8725},
  keywords  = {computability;integer programming;nonlinear programming;processor scheduling;real-time systems;resource allocation;search problems;SAT-based message allocation;SAT-based task allocation;arbitrary Boolean combinations;binary search;distributed architectures;distributed real-time systems;feasibility checking;integer constraints;nonlinear integer optimization;numerical optimization;real-time engine;satisfiability checking based solver;scheduling;Constraint optimization;Cost function;Delay;Electrical equipment industry;Engines;Job shop scheduling;Optimization methods;Processor scheduling;Real time systems;Runtime},
  owner     = {hilrob},
  timestamp = {2014.01.13},
}

@Article{Meyer1970,
  author    = {Meyer, R. A. and Seawright, L. H.},
  title     = {{A} virtual machine time-sharing system},
  journal   = {IBM Systems Journal},
  year      = {1970},
  volume    = {9},
  number    = {3},
  pages     = {199--218},
  issn      = {0018-8670},
  doi       = {10.1147/sj.93.0199},
  abstract  = {{T}ime-sharing systems are now an important factor in the computer
	industry. {B}ecause they allow a multiplicity of users to have access
	to a computer by means of a terminal, they encourage increasing numbers
	of people to utilize computers. {T}hus, various ways of increasing
	the capability of a computer in this area are being sought. {O}ne
	such system is the {C}ontrol {P}rogram-67/{C}ambridge {M}onitor {S}ystem
	({CP}-67/{CMS}), a multi-access system that manages the resources
	of a computer set up for time-sharing such that each (remote) user
	appears to have a complete, dedicated computer at his disposal. {T}his
	concept is known as a virtual machine and allows each user to select
	the operating system he wishes to run because concurrent operation
	of several operating systems is possible.},
  file      = {Meyer1970.pdf:files\\Meyer1970.pdf:PDF},
  groups    = {(RT-) Scheduling},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2010.07.29},
}

@InProceedings{Micheli2002,
  author    = {de Micheli, G. and Benini, L.},
  title     = {{N}etworks on {C}hip: {A} {N}ew {P}aradigm for {S}ystems on {C}hip {D}esign},
  booktitle = {DATE '02: Proceedings of the conference on Design, automation and test in Europe},
  year      = {2002},
  publisher = {IEEE Computer Society},
  pages     = {418},
  address   = {Washington, DC, USA},
  groups    = {On-Chip Interconnect / NoC},
  keywords  = {NoC},
  owner     = {hilrob},
  read      = {unread},
  review    = {In systems on chip the interconnections are becoming a limiting factor
	which leads to communication-centric design. To provide quality of
	service it is proposed to use networks on a chip. Those have unique
	characteristics that distinct them from off-chip networks, namely
	energy constraints and design-time specialization.},
  timestamp = {2010.02.01},
}

@InProceedings{Mignolet2003,
  author    = {Mignolet, J.-Y. and Nollet, V. and Coene, P. and Verkest, D. and Vernalde, S. and Lauwereins, R.},
  title     = {{I}nfrastructure for design and management of relocatable tasks in a heterogeneous reconfigurable system-on-chip},
  booktitle = {Proc. Design, Automation and Test in Europe Conf. and Exhibition},
  year      = {2003},
  pages     = {986--991},
  file      = {Mignolet2003.pdf:files\\Mignolet2003.pdf:PDF},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.06.09},
}

@Article{Milojicic2000,
  author    = {Milojicic, Dejan S. and Douglis, Fred and Paindaveine, Yves and Wheeler, Richard and Zhou, Songnian},
  title     = {{P}rocess migration},
  journal   = {ACM Comput. Surv.},
  year      = {2000},
  volume    = {32},
  number    = {3},
  pages     = {241--299},
  issn      = {0360-0300},
  doi       = {http://doi.acm.org/10.1145/367701.367728},
  address   = {New York, NY, USA},
  file      = {Milojicic2000.pdf:files\\Milojicic2000.pdf:PDF},
  owner     = {hilrob},
  publisher = {ACM},
  read      = {next},
  timestamp = {2010.06.09},
}

@InProceedings{Molnos2010,
  author        = {Molnos, Anca and Milutinovic, Aleksandar and She, Dongrui and Goossens, Kees},
  title         = {{C}omposable {P}rocessor {V}irtualization for {E}mbedded {S}ystems},
  booktitle     = {Proc. Workshop on Computer Architecture and Operating System Co-Design (CAOS)},
  year          = {2010},
  publisher     = {Springer},
  file          = {Molnos2010.pdf:files\\Molnos2010.pdf:PDF},
  keywords      = {EMBEDDED SYSTEMS,MPSOC,MULTI-CORE,SOC,VIRTUALIZATION},
  mendeley-tags = {EMBEDDED SYSTEMS,MPSOC,MULTI-CORE,SOC,VIRTUALIZATION},
  owner         = {hilrob},
  read          = {next},
  timestamp     = {2010.05.28},
}

@Article{Monot2012,
  author    = {Monot, A. and Navet, N. and Bavoux, B. and Simonot-Lion, F.},
  title     = {{M}ultisource {S}oftware on {M}ulticore {A}utomotive {ECU}s - {C}ombining {R}unnable {S}equencing {W}ith {T}ask {S}cheduling},
  journal   = {Industrial Electronics, IEEE Transactions on},
  year      = {2012},
  volume    = {59},
  number    = {10},
  month     = oct,
  pages     = {3934--3942},
  issn      = {0278-0046},
  doi       = {10.1109/TIE.2012.2185913},
  abstract  = {As the demand for computing power is quickly increasing in the automotive
	domain, car manufacturers and tier-one suppliers are gradually introducing
	multicore electronic control units (ECUs) in their electronic architectures.
	In addition, these multicore ECUs offer new features such as higher
	levels of parallelism, which ease the compliance with safety requirements
	such as the International Organization for Standardization (ISO)
	26262 and the implementation of other automotive use cases. These
	new features involve greater complexity in the design, development,
	and verification of the software applications. Hence, car manufacturers
	and suppliers will require new tools and methodologies for deployment
	and validation. In this paper, we address the problem of sequencing
	numerous elementary software modules, called runnables, on a limited
	set of identical cores. We show how this problem can be addressed
	as the following two subproblems, which cannot optimally be solved
	due to their algorithmic complexity: 1) partitioning the set of runnables
	and 2) building the sequencing of the runnables on each core. We
	then present low-complexity heuristics to partition and build sequencer
	tasks that execute the runnable set on each core. Finally, we globally
	address the scheduling problem, at the ECU level, by discussing how
	we can extend this approach in cases where other OS tasks are scheduled
	on the same cores as the sequencer tasks.},
  file      = {Monot2012.pdf:files\\Monot2012.pdf:PDF},
  groups    = {Domänen-spezifisch, Konsolidierung & Integration, Embedded Multi-Core, (RT-) Scheduling},
  keywords  = {ISO 26262;International Organization for Standardization;algorithmic complexity;car manufacturers;design complexity;electronic architectures;multicore automotive ECU;multicore electronic control units;multisource software;runnable sequencing;safety requirements;software application development;software application verification;software modules;task scheduling;tier-one suppliers;automobile manufacture;automotive electronics;computational complexity;multiprocessing systems;processor scheduling;program verification;road safety;software tools;},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2012.06.04},
}

@InProceedings{Monot2010,
  author      = {Monot, Aur{\'e}lien and Navet, Nicolas and Bavoux, Bernard and Simonot-Lion, Fran{\c{c}}oise},
  title       = {{M}ulticore scheduling in automotive {ECU}s},
  booktitle   = {{E}mbedded {R}eal {T}ime {S}oftware and {S}ystems - {ERTSS} 2010},
  year        = {2010},
  month       = may,
  url         = {http://hal.inria.fr/inria-00543179/PDF/ERTS2010_0097_final.pdf},
  abstract    = {{A}s the demand for computing power is quickly increasing in the automotive
	domain, car manufacturers and tier-one suppliers are gradually introducing
	multicore {ECU}s in their electronic architectures. {A}dditionally,
	these multicore {ECU}s offer new features such as higher levels of
	parallelism which eases the espect of the safety requirements introduced
	by the {ISO} 26262 and can be taken advantage of in various other
	automotive use-cases. {T}hese new features involve also more complexity
	in the design, development and verification of the software applications.
	{H}ence, {OEM}s and suppliers will require new tools and methodologies
	for eployment and validation. {I}n this paper, we present the main
	use-cases for multicore {ECU}s and then focus on one of them. {P}recisely,
	we address the problem of scheduling numerous elementary software
	components (called runnables) on a limited set of identical cores.
	{I}n the context of an automotive design, we assume the use of the
	static task partitioning scheme which provides simplicity and better
	predictability for the {ECU} designers by comparison with a global
	scheduling approach. {W}e show how the global scheduling problem
	can be addressed as two sub problems: partitioning the set of runnables
	and building the schedule on each core. {A}t that point, we prove
	that each of the sub-problems cannot be solved optimally due to their
	algorithmic complexity. {W}e then present low complexity heuristics
	to partition and build a schedule of the runnable set on each core
	before discussing schedulability verification methods. {F}inally,
	we assess the performance of our approach on realistic case-studies.},
  address     = {{T}oulouse {F}rance},
  affiliation = {{TRIO} - {INRIA} {L}orraine - {LORIA} - {INRIA} - {CNRS} : {UMR}7503 - {U}niversit{\'e} {H}enri {P}oincar{\'e} - {N}ancy {I} - {U}niversit{\'e} {N}ancy {II} - {I}nstitut {N}ational {P}olytechnique de {L}orraine - {PSA} {P}eugeot - {C}itro{\"e}n - {PSA} - {P}eugeot-{C}itro{\"e}n },
  file        = {Monot2010.pdf:files\\Monot2010.pdf:PDF},
  groups      = {Domänen-spezifisch, (RT-) Scheduling},
  keywords    = {AUTOSAR; AUTOMOTIVE; SCHEDULING; STATIC SCHEDULING; ECU;},
  owner       = {hilrob},
  read        = {next},
  timestamp   = {2011.03.21},
}

@Article{Moore1965,
  author    = {Moore, G. E.},
  title     = {{C}ramming {M}ore {C}omponents onto {I}ntegrated {C}ircuits},
  journal   = {Electronics},
  year      = {1965},
  volume    = {38},
  number    = {8},
  month     = apr,
  pages     = {114--117},
  issn      = {0018-9219},
  doi       = {10.1109/JPROC.1998.658762},
  url       = {http://dx.doi.org/10.1109/JPROC.1998.658762},
  abstract  = {With unit cost falling as the number of components per circuit rises,
	by 1975 economics may dictate squeezing as many as 65,000 components
	on a single silicon chip.},
  day       = {19},
  file      = {Moore1965.pdf:files\\Moore1965.pdf:PDF},
  groups    = {Multi-Core Allgemein, Embedded Multi-Core},
  owner     = {hilrob},
  publisher = {IEEE},
  read      = {done},
  timestamp = {2012.06.12},
}

@Article{Morgan1991,
  author    = {Morgan, M. J.},
  title     = {{I}ntegrated modular avionics for next generation commercial airplanes},
  journal   = {Aerospace and Electronic Systems Magazine, IEEE},
  year      = {1991},
  volume    = {6},
  number    = {8},
  pages     = {9--12},
  doi       = {10.1109/62.90950},
  abstract  = {{T}he avionics industry has long recognized the substantial cost benefits
	which could be realized using a large-scale integrated computing
	architecture for airborne avionics. {R}ecent technology achievements
	by airframe, avionics and semi-conductor manufacturers now allow
	implementation of these integrated avionics architectures resulting
	in substantial acquisition and life cycle cost benefits.{T}his paper
	is intended to present the goals and objectives of integrated modular
	avionics ({IMA}) and to present one candidate architecture for {IMA}
	as applied to the {B}oeing 777 airplane. {I}t is hoped that this
	information will stimulate industry thinking on the role of next-generation
	airborne "mainframe" avionics architectures and how these new architectures
	may further evolve to better support the airframe manufacturers,
	airline operators, and the air travel industry.},
  file      = {Morgan1991.pdf:files\\Morgan1991.pdf:PDF},
  groups    = {Domänen-spezifisch},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2012.01.03},
}

@Misc{Morgan1994,
  author       = {Morgan, Reed and Lachenmaier, Ralph},
  title        = {{J}oint {A}dvanced {S}trike {T}echnology {P}rogram - {A}vionics {A}rchitecture {D}efinition {A}ppendices},
  year         = {1994},
  howpublished = {online},
  month        = aug,
  url          = {http://leonardodaga.insyde.it/Corsi/AD/Documenti/JAS%20-%20AVIONICS%20ARCHITECTURE%20DEFINITION%20APPENDIX.pdf},
  file         = {Morgan1994.pdf:files\\Morgan1994.pdf:PDF},
  groups       = {Domänen-spezifisch},
  keywords     = {avionics; architecture; federated architecture;},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2012.07.16},
}

@Article{Nadesakumar1995,
  author    = {Nadesakumar, A and Crowder, R M and Harris, C J},
  title     = {{A}dvanced {S}ystem {C}oncepts for {C}ivil {A}ircraft: {A}n overview of {A}vionic {A}rchitectures},
  journal   = {Proc. Inst. Mech. Engrs., Part G., J. Aerospace},
  year      = {1995},
  volume    = {209},
  pages     = {265--272},
  url       = {http://eprints.ecs.soton.ac.uk/126/},
  abstract  = {{T}he avionics systems of state-of-the-art commercial aircraft have
	become increasingly complex and sophisticated, in order to meet the
	ever increasing performance and reliability requirements. {W}ith
	the capibility of the avionics technology improving by an order of
	magnitude every few years, it is envisaged that the current philosophy
	of one box-per-function will soon reach its limits in terms of cost,
	functionality, reliability and certification. {T}he proposed solution
	is the integrated systems configurationm, using distributed processing,
	where the computational resources are shared between many functions,
	therefore improving the reliability, availability, survivability
	and extensibility of the overall system. {F}urthermore, this approach
	will also provide the potential for reducing the acquisition, maintenance
	and operating costs. {T}he paper discusses the limitations of the
	current avionic system's architecture in dealing with the high levels
	of functionality required by the state-of-the-art aircraft, and discusses
	the philosophy of the integrated modular avionics, which represents
	a change in philosophy of avionics design to a decentralized, distributed
	architecture that allows interchangeable components within a distributed
	aircraft avionic system. {T}he paper also addresses a number of specific
	issues considered necessary for the implementation of a decentralized,
	distributed architecture such as data bus requirements, electromagnetic
	and radio frequency prevention, and fault tolerance. {B}ut it also
	argues that for true systems integration, a new culture is required
	based on open systems with a set of inherent quality features such
	as conformance, robustness, extendibility, compatibility, and reusability
	built into the architecture.},
  groups    = {Domänen-spezifisch},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2012.01.03},
}

@Misc{Nagarajan2010,
  author        = {Nagarajan, Rajagopal},
  title         = {{M}ulticore {T}echnologies and {S}oftware {C}hallenges},
  year          = {2010},
  url           = {http://www.embedded.com/design/multicore/222100218},
  abstract      = {{M}ulticore processors, which are basically processors with more than
	one core, are entering mainstream. {T}oday, even desktops are having
	two or four cores and this trend is picking up and will only accelerate
	in coming years. {T}his article looks at the drivers for the multicore,
	the challenges posed to the software community by the emergence of
	multicore technologies, the different options available in software
	and how the software community is likely to react to the challenges.},
  annote        = {ein relativ flacher \"{U}berblick \"{u}ber die Multicore Technologie, mit verschiedenen Einblick in Programmiermodelle, Tools und Programmiersprachen. Der einzig wirklich interessante Abschnitt behandelt ein paar Trends und Visionen zur Durchsetzung der Multicore Technologie in der Breite.},
  booktitle     = {http://www.embedded.com},
  file          = {Nagarajan2010.pdf:files\\Nagarajan2010.pdf:PDF;Nagarajan2010a.pdf:files\\Nagarajan2010a.pdf:PDF},
  groups        = {Misc},
  keywords      = {INTRODUCTION,MULTI-CORE,OVERVIEW,TRENDS,VISION},
  mendeley-tags = {INTRODUCTION,MULTI-CORE,OVERVIEW,TRENDS,VISION},
  owner         = {hilrob},
  pages         = {1--6},
  read          = {done},
  timestamp     = {2010.05.27},
}

@TechReport{Nagarajan2010a,
  author      = {Nagarajan, Shiv and Vulpe, Nicola},
  title       = {{P}rocessor {A}ffinity or {B}ound {M}ultiprocessing: {E}asing the {M}igration to {B}ound {M}ulticore {P}rocessing},
  institution = {QNX Software Systems},
  year        = {2010},
  type        = {Whitepaper},
  url         = {http://www.qnx.com/download/download/20412/qnx_bmp_vs_processor_affinity_RIM_MC411.21.pdf},
  abstract    = {{M}igrating systems designed for single core processors to multicore
	environments is still a challenge. {B}ound multiprocessing ({BMP})
	can help with these migrations. {I}t improves {SMP} processor affinity.
	{I}t allows developers to bind all threads (including dynamically
	created threads) in a process or even a subsystem to a specific processor
	without code changes.},
  file        = {Nagarajan2010a.pdf:files\\Nagarajan2010a.pdf:PDF},
  groups      = {Konsolidierung & Integration, Multi-Core Allgemein, Embedded Multi-Core, Parallel Programming Models},
  keywords    = {QNX;},
  owner       = {hilrob},
  read        = {done},
  timestamp   = {2011.02.09},
}

@InProceedings{Navet2010,
  author    = {Navet, N. and Monot, A. and Bavoux, B. and Simonot-Lion, F.},
  title     = {{M}ulti-source and multicore automotive {ECU}s - {OS} protection mechanisms and scheduling},
  booktitle = {Industrial Electronics (ISIE), 2010 IEEE International Symposium on},
  year      = {2010},
  month     = jul,
  pages     = {3734--3741},
  doi       = {10.1109/ISIE.2010.5637677},
  abstract  = {{A}s the demand for computing power is quickly increasing in the automotive
	domain, car manufacturers and tier-one suppliers are gradually introducing
	multicore {ECU}s in their electronic architectures. {A}dditionally,
	these multicore {ECU}s offer new features such as higher levels of
	parallelism which ease the respect of the safety requirements such
	as the {ISO} 26262 and the implementation of other automotive use-cases.
	{T}hese new features involve also more complexity in the design,
	development and verification of the software applications. {H}ence,
	{OEM}s and suppliers will require new tools and methodologies for
	deployment and validation. {I}n this paper, we review the operating
	system protection mechanisms (e.g., memory, timing), needed for multi-source
	software in a safety critical context, with a clear focus on {AUTOSAR}
	{OS} which is the upcoming defacto standard for automotive {ECU}s.
	{T}hen, we identify the main use-cases for automotive multicore {ECU}s
	and present solutions for the scheduling in a context where there
	are hundreds of software components and only a few {OS} tasks are
	allowed. {F}inally, experiments aim to assess the load level that
	can be reached on realistic case-studies.},
  file      = {Navet2010.pdf:files\\Navet2010.pdf:PDF},
  groups    = {Domänen-spezifisch, Konsolidierung & Integration, Reliability & Dependability, (RT-) Scheduling},
  keywords  = {AUTOSAR OS;OS protection mechanisms;OS scheduling;automotive electronics;electronic control unit;multicore automotive ECU;multisource software;operating system protection;automotive electronics;electronic engineering computing;operating systems (computers);},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2011.03.21},
}

@TechReport{Nelson2004,
  author      = {Nelson, Stacy},
  title       = {{S}urvey of {S}oftware {A}ssurance {T}echniques for {H}ighly {R}eliable {S}ystems},
  institution = {NASA},
  year        = {2004},
  file        = {Nelson2004.pdf:files\\Nelson2004.pdf:PDF},
  groups      = {Reliability & Dependability},
  owner       = {hilrob},
  read        = {next},
  timestamp   = {2010.10.01},
}

@Misc{Nemati2010,
  author    = {Farhang Nemati},
  title     = {{P}artitioned {S}cheduling of {R}eal-{T}ime {T}asks on {M}ulti-core {P}latforms},
  year      = {2010},
  month     = may,
  url       = {http://www.mrtc.mdh.se/index.php?choice=publications&id=2208},
  abstract  = {{I}n recent years multiprocessor architectures have become mainstream,
	and multi-core processors are found in products ranging from small
	portable cell phones to large computer servers. {I}n parallel, research
	on real-time systems has mainly focused on traditional single-core
	processors. {H}ence, in order for real-time systems to fully leverage
	on the extra capacity offered by new multi-core processors, new design
	techniques, scheduling approaches, and real-time analysis methods
	have to be developed. {I}n the multi-core and multiprocessor domain
	there are mainly two scheduling approaches, global and partitioned
	scheduling. {U}nder global scheduling each task can execute on any
	processor at any time while under partitioned scheduling tasks are
	statically allocated to processors and migration of tasks among processors
	is not allowed. {B}esides simplicity and efficiency of partitioned
	scheduling protocols, existing scheduling and synchronization methods
	developed for single-core processor platforms can more easily be
	extended to partitioned scheduling. {T}his also simplifies migration
	of existing systems to multi-cores. {A}n important issue related
	to partitioned scheduling is distribution of tasks among processors
	which is a bin-packing problem. {I}n this thesis we propose a partitioning
	framework for distributing tasks on the processors of multi-core
	platforms. {D}epending on the type of performance we desire to achieve,
	the framework may distribute a task set differently, e.g., in an
	application in which tasks process huge amounts of data the goal
	of the framework may be to decrease cache misses. {F}urthermore,
	we propose a blocking-aware partitioning heuristic algorithm to distribute
	tasks onto the processors of a multi-core architecture. {T}he objective
	of the proposed algorithm is to decrease blocking overhead of tasks
	which reduces the total utilization and has the potential to reduce
	the number of required processors. {F}inally, we have implemented
	a tool to facilitate evaluation and comparison of different multiprocessor
	scheduling and synchronization approaches, as well as different partitioning
	heuristics. {W}e have applied the tool in the evaluation of several
	partitioning heuristic algorithms, and the tool is flexible to which
	any new scheduling or synchronization protocol as well as any new
	partitioning heuristic can easily be added.},
  file      = {Nemati2010.pdf:files\\Nemati2010.pdf:PDF},
  groups    = {(RT-) Scheduling},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.09.01},
}

@InProceedings{Nemati2008,
  author        = {Nemati, Farhang and Kraft, Johan and Nolte, Thomas},
  title         = {{T}owards {M}igrating {L}egacy {R}eal-{T}ime {S}ystems to {M}ulti-{C}ore {P}latforms},
  booktitle     = {2008 IEEE International Conference on Emerging Technologies and Factory Automation},
  year          = {2008},
  publisher     = {IEEE},
  isbn          = {978-1-4244-1505-2},
  pages         = {717--720},
  doi           = {10.1109/ETFA.2008.4638477},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4638477},
  abstract      = {{P}ower consumption and thermal problems limit the single-core processors
	to be faster. {P}rocessor architects are therefore moving toward
	multi-core processors. {D}evelopers of embedded real-time systems
	however hesitates a shift to multi-core processors, especially for
	existing legacy systems which have been developed with single-core
	processor assumptions. {T}hese systems have been developed and maintained
	by many developers over many years, and can not easily be replaced
	due to the huge development investments they represent. {I}n this
	paper we investigate challenges of migrating complex legacy real-time
	systems to multi-core architectures. {W}e propose componentization
	and partitioning to prepare the migration. {C}omponentization groups
	logically related tasks into components (or subsystems). {T}his provides
	an abstraction layer from a scheduling perspective, which facilitates
	migration. {P}artitioning maps tasks to the different cores on the
	multi-core processor, maximizing system performance while ensuring
	correctness.},
  annote        = {Pr\"{a}sentation eines allgemeinen Ansatzes zur Migration von RT-Systemen auf Multicore Hardware. Erstellung zweier Modelle: Komponentenmodelle (logische Gruppierung) und Partitionierungsmodelle (welche Prozesse k\"{o}nnen parallel laufen). Ein kurzes \"{U}bersichtspaper, das erste Ans\"{a}tze zur Migration beschreibt. Allerdings glaube ich nicht, dass es ausreichend ist, Tasks mit unterschiedlichen Abh\"{a}ngigkeiten schlicht in eine Gruppe zu packen, in der alle "concurrent" laufen k\"{o}nnen.},
  file          = {Nemati2008.pdf:files\\Nemati2008.pdf:PDF},
  keywords      = {COMPONENTIZATION,FRAMEWORK,LEGACY SYSTEMS,MIGRATION,MODEL-BASED,MULTI-CORE,PROPOSAL,REAL-TIME SYSTEMS},
  mendeley-tags = {COMPONENTIZATION,FRAMEWORK,LEGACY SYSTEMS,MIGRATION,MODEL-BASED,MULTI-CORE,PROPOSAL,REAL-TIME SYSTEMS},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Book{Nicolescu2010,
  author        = {Nicolescu, Gabriela and Mosterman, Pieter J.},
  title         = {{M}odel-{B}ased {D}esign for {E}mbedded {S}ystems},
  year          = {2010},
  series        = {Computational Analysis, Synthesis, and Design of Dynamic Systems},
  publisher     = {CRC Press},
  isbn          = {9781420067842},
  pages         = {766},
  url           = {http://www.crcpress.com/product/isbn/9781420067842},
  abstract      = {{T}he demands of increasingly complex embedded systems and associated
	performance computations have resulted in the development of heterogeneous
	computing architectures that often integrate several types of processors,
	analog and digital electronic components, and mechanical and optical
	components-all on a single chip. {A}s a result, now the most prominent
	challenge for the design automation community is to efficiently plan
	for such heterogeneity and to fully exploit its capabilities. {A}
	compilation of work from internationally renowned authors, {M}odel-{B}ased
	{D}esign for {E}mbedded {S}ystems elaborates on related practices
	and addresses the main facets of heterogeneous {M}odel-{B}ased {D}esign
	for embedded systems, including the current state of the art, important
	challenges, and the latest trends. {F}ocusing on computational models
	as the core design artifact, this book presents the cutting-edge
	results that have helped establish {M}odel-{B}ased {D}esign and continue
	to expand its parameters. {T}he book is organized into three sections:
	{R}eal-{T}ime and {P}erformance {A}nalysis in {H}eterogeneous {E}mbedded
	{S}ystems, {D}esign {T}ools and {M}ethodology for {M}ultiprocessor
	{S}ystem-on-{C}hip, and {D}esign {T}ools and {M}ethodology for {M}ultidomain
	{E}mbedded {S}ystems. {T}he respective contributors share their considerable
	expertise on the automation of design refinement and how to relate
	properties throughout this refinement while enabling analytic and
	synthetic qualities. {T}hey focus on multi-core methodological issues,
	real-time analysis, and modeling and validation, taking into account
	how optical, electronic, and mechanical components often interface.
	{M}odel-{B}ased {D}esign is emerging as a solution to bridge the
	gap between the availability of computational capabilities and our
	inability to make full use of them yet. {T}his approach enables teams
	to start the design process using a high-level model that is gradually
	refined through abstraction levels to ultimately yield a prototype.
	{W}hen executed well, {M}odel-{B}ased {D}esign encourages enhanced
	performance and quicker time to market for a product. {I}llustrating
	a broad and diverse spectrum of applications such as in the automotive
	aerospace, health care, consumer electronics, this volume provides
	designers with practical, readily adaptable modeling solutions for
	their own practice.},
  annote        = {angefangen zu lesen, um einen Einblick in theoretische Verfahren zu bekommen. Insbesondere der Abschnitt zum Scheduling mit mit Hilfe von UPPAAL ist sehr spannend!},
  file          = {Nicolescu2010.pdf:files\\Nicolescu2010.pdf:PDF},
  groups        = {Books},
  keywords      = {BASICS,EMBEDDED SYSTEMS,INTRODUCTION,MODEL-BASED DESIGN,MPSOC,OVERVIEW,PERFORMANCE ANALYSIS,REAL-TIME-SYSTEMS},
  mendeley-tags = {BASICS,EMBEDDED SYSTEMS,INTRODUCTION,MODEL-BASED DESIGN,MPSOC,OVERVIEW,PERFORMANCE ANALYSIS,REAL-TIME-SYSTEMS},
  owner         = {hilrob},
  read          = {done},
  review        = {angefangen zu lesen, um einen Einblick in theoretische Verfahren zu
	bekommen. Insbesondere der Abschnitt zum Scheduling mit mit Hilfe
	von UPPAAL ist sehr spannend!},
  timestamp     = {2010.05.27},
}

@Misc{MINIZINCCHALL2012,
  author    = {{NICTA - Optimisation Research Group}},
  title     = {{M}ini{Z}inc {C}hallenge 2012 {R}esults},
  year      = {2012},
  url       = {http://www.minizinc.org/challenge2012/results2012.html},
  groups    = {Misc},
  owner     = {hilrob},
  timestamp = {2014.10.02},
}

@InProceedings{Nikolov2008,
  author    = {Nikolov, H. and Thompson, M. and Stefanov, T. and Pimentel, A. and Polstra, S. and Bose, R. and Zissulescu, C. and Deprettere, E.},
  title     = {{D}aedalus: {T}oward {C}omposable {M}ultimedia {MP}-{S}o{C} {D}esign},
  booktitle = {Proceedings of the 45th Annual Design Automation Conference},
  year      = {2008},
  series    = {DAC '08},
  publisher = {ACM},
  location  = {Anaheim, California},
  isbn      = {978-1-60558-115-6},
  pages     = {574--579},
  doi       = {10.1145/1391469.1391615},
  url       = {http://doi.acm.org/10.1145/1391469.1391615},
  acmid     = {1391615},
  address   = {New York, NY, USA},
  file      = {Nikolov2008.pdf:files\\Nikolov2008.pdf:PDF},
  groups    = {MPSoC Synthese},
  keywords  = {design space exploration, system-level design and synthesis},
  numpages  = {6},
  owner     = {hilrob},
  timestamp = {2014.05.15},
}

@InProceedings{Nollet2005a,
  author    = {Nollet, V. and Avasare, P. and Mignolet, J.-Y. and Verkest, D.},
  title     = {{L}ow cost task migration initiation in a heterogeneous {MP}-{S}o{C}},
  booktitle = {Proc. Design, Automation and Test in Europe},
  year      = {2005},
  pages     = {252--253},
  doi       = {10.1109/DATE.2005.201},
  file      = {Nollet2005a.pdf:files\\Nollet2005a.pdf:PDF},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.06.09},
}

@InProceedings{Nollet2005,
  author    = {Nollet, V. and Marescaux, T. and Avasare, P. and Verkest, D. and Mignolet, J.-Y.},
  title     = {{C}entralized run-time resource management in a network-on-chip containing reconfigurable hardware tiles},
  booktitle = {Proc. Design, Automation and Test in Europe},
  year      = {2005},
  pages     = {234--239},
  doi       = {10.1109/DATE.2005.91},
  file      = {Nollet2005.pdf:files\\Nollet2005.pdf:PDF;Nollet2005a.pdf:files\\Nollet2005a.pdf:PDF},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.06.09},
}

@InProceedings{Nowotsch2012,
  author    = {Nowotsch, Jan and Paulitsch, Michael},
  title     = {{L}everaging {M}ulti-{C}ore {C}omputing {A}rchitectures in {A}vionics},
  booktitle = {2012 European Dependable Computing Conference},
  year      = {2012},
  abstract  = {Multi-core computer architectures are on the forefront in consumer
	electronics and adaptation in safety-critical applications such as
	avionics could be beneficial due to their potential increased performance.
	Yet, there are challenges to deploy cutting edge multi-core architectures
	for safety-critical applications. New computing architectures are
	more integrated and optimized for average cases. On the other side,
	safetycritical applications need to be designed for the worst case.
	For example, the impact of integrating critical applications is not
	fully understood yet; especially with respect to execution times
	of critical paths.
	
	
	This paper proposes and argues an approach to quantify the impact
	of integration of multiple independent applications onto multi-core
	platforms and evaluates the approach on a specific potential future
	avionics computing platform. Evaluation results focusing on execution
	estimates show that multi-core computers may be used for safety-critical
	applications, but the worst-case execution time (WCET) can be multiple
	times slower than the same application running on a single core without
	other cores running interfering applications. The actual factor is
	very dependent on the application's use of shared resources like
	memory.},
  comment   = {noch nicht publiziert, ist nur akzeptiert},
  file      = {Nowotsch2012.pdf:files\\Nowotsch2012.pdf:PDF},
  groups    = {Domänen-spezifisch, Konsolidierung & Integration, Virtualisierung & Partitionierung, WCET},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2012.03.08},
}

@Misc{SYSML13,
  author       = {{Object Management Group}},
  title        = {{OMG} {S}ystems {M}odeling {L}anguage ({OMG} {S}ys{ML}) -- {V}ersion 1.3},
  year         = {2012},
  howpublished = {online},
  month        = jun,
  url          = {http://www.omg.org/spec/SysML/1.3/PDF/},
  groups       = {Standards & Normen},
  owner        = {hilrob},
  timestamp    = {2014.04.24},
}

@TECHREPORT{ObjectManagementGroup2003,
  author = {{Object Management Group}},
  title = {{T}echnical {G}uide to {M}odel {D}riven {A}rchitecture: {T}he {MDA}
	{G}uide v1.0.1},
  institution = {Object Management Group (OMG)},
  year = {2003},
  number = {omg/2003-06-01},
  month = jun,
  note = {online},
  citeulike-article-id = {2642436},
  citeulike-linkout-0 = {http://www.omg.org/cgi-bin/apps/doc?omg/03-06-01.pdf},
  day = {01},
  owner = {hilrob},
  posted-at = {2008-04-08 18:55:06},
  priority = {2},
  timestamp = {2014.04.17},
  url = {http://www.omg.org/cgi-bin/doc?omg/03-06-01.pdf}
}

@Book{Olderog2008a,
  author    = {Olderog, Ernst-Rüdiger and Dierks, Henning},
  title     = {{R}eal-{T}ime {S}ystems: {F}ormal {S}pecification and {A}utomatic {V}erification},
  year      = {2008},
  publisher = {Cambridge University Press},
  pages     = {344},
  url       = {http://www.cambridge.org/uk/catalogue/catalogue.asp?isbn=9780521883337},
  abstract  = {{R}eal-time systems need to react to certain input stimuli within
	given time bounds. {F}or example, an airbag in a car has to unfold
	within 300 milliseconds in a crash. {T}here are many embedded safety-critical
	applications and each requires real-time specification techniques.
	{T}his text introduces three of these techniques, based on logic
	and automata: duration calculus, timed automata, and {PLC}-automata.
	{T}he techniques are brought together to form a seamless design flow,
	from real-time requirements specified in the duration calculus; via
	designs specified by {PLC}-automata; and into source code for hardware
	platforms of embedded systems. {T}he syntax, semantics, and proof
	methods of the specification techniques are introduced; their most
	important properties are established; and real-life examples illustrate
	their use. {D}etailed case studies and exercises conclude each chapter.
	{I}deal for students of real-time systems or embedded systems, this
	text will also be of great interest to researchers and professionals
	in transportation and automation.},
  groups    = {Books},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.05.27},
}

@Misc{OpenMP40,
  author    = {{OpenMP Architecture Review Board}},
  title     = {{OpenMP} {A}pplication {P}rogram {I}nterface {V}ersion 4.0},
  year      = {2008},
  month     = may,
  url       = {http://www.openmp.org/mp-documents/OpenMP4.0.0.pdf},
  groups    = {Tools},
  owner     = {hilrob},
  timestamp = {2014.01.14},
}

@MISC{VIRTUOS_PROJECT,
  author = {{OpenSynergy GmbH} and {Fraunhofer FIRST} and {TU Berlin - Lehrstuhl
	SWT}},
  title = {{V}irtuelle {A}rchitekturen für sichere automotive {S}oftwaresysteme
	mit domänenübergreifender, sicherheitsrelevanter {K}ommunikation},
  howpublished = {online},
  month = dec,
  year = {2012},
  note = {Forschungsprojekt mit Finanzierung der Technologiestiftung Berlin
	(TSB)},
  owner = {hilrob},
  timestamp = {2014.08.28},
  url = {http://www.tsb-berlin.de/media/uploads/zukunfsfonds/VirtuOS_-_Virtuelle_Architekturen_für_sichere_automotive_Softwaresysteme_mit_domänenübergreifender,_sicherheitsrelevanter_Kommunikation.pdf}
}

@Misc{JavaFX,
  author    = {Oracle},
  title     = {{J}ava{FX} - {T}he {R}ich {C}lient {P}latform},
  year      = {2013},
  month     = oct,
  url       = {http://www.oracle.com/technetwork/java/javafx/overview/index.html},
  abstract  = {JavaFX is the next step in the evolution of Java as a rich client
	platform. It is designed to provide a lightweight, hardware-accelerated
	Java UI platform for enterprise business applications. With JavaFX,
	developers can preserve existing investments by reusing Java libraries
	in their applications. They can even access native system capabilities,
	or seamlessly connect to server-based middleware applications.},
  groups    = {Tools},
  owner     = {hilrob},
  timestamp = {2013.10.21},
}

@Article{Ousterhout1982,
  author    = {Ousterhout, John Kenneth},
  title     = {{S}cheduling {T}echniques for {C}oncurrent {S}ystems},
  journal   = {Proc. of 3rd International Conf. on Distributed Computing systems},
  year      = {1982},
  volume    = {-},
  pages     = {22--30},
  url       = {http://www.stanford.edu/~ouster/cgi-bin/papers/coscheduling.pdf},
  file      = {Ousterhout1982.pdf:files\\Ousterhout1982.pdf:PDF},
  groups    = {(RT-) Scheduling},
  owner     = {hilrob},
  read      = {unread,},
  timestamp = {2012.02.02},
}

@PhdThesis{Ousterhout1980,
  author    = {Ousterhout, John Kenneth},
  title     = {{P}artitioning and {C}ooperation in a {D}istributed {M}ultiprocessor {O}perating {S}ystem: {M}edusa},
  year      = {1980},
  note      = {AAI8020166},
  url       = {http://portal.acm.org/citation.cfm?id=909418},
  abstract  = {{T}his dissertation is an analysis of the design of {M}edusa, an operating
	system with a highly distributed control structure that runs on the
	{C}m* multimicroprocessor. {I}n order to gain an understanding of
	how to exploit distributed hardware, the system's structure was allowed
	to derive directly from the constraints of the underlying machine.
	{T}he {C}m* hardware is distributed, yet extremely flexible in the
	kinds of interprocessor communication it permits. {T}hus {M}edusa's
	structure arose from a consideration of two issues: partitioning
	and cooperation. {H}ow should the system be partitioned in order
	to enhance its modularity and make use of the distributed hardware?
	{H}ow should the separate subunits communicate so as to function
	together in a robust way as a single logical entity? {T}he resulting
	system combines several structural features that make it unique among
	existing operating systems. {I}n order to provide modularity and
	to capitalize on the distributed hardware, {M}edusa consists of five
	relatively independent utilities that execute on different processors.
	{E}ach utility provides one abstraction for the rest of the system
	and communicates with user programs and other utilities via messages.
	{F}unctions are distributed between utilities at a very low abstract
	level (for example, no one utility contains enough functionality
	to create and execute a new program without assistance from other
	utilities). {T}he message communication mechanism plays a central
	role in the system; it is discussed in detail and compared to other
	existing or proposed mechanisms. {T}he distribution of the utilities
	presents a deadlock danger. {I}t is shown how a coroutine-based utility
	structure avoids deadlock. {S}ince processors in {C}m* are plentiful
	but small, all programs, including the utilities, are organized as
	task forces that contain several concurrent, cooperating activities.
	{M}edusa attempts to make cooperation between activities of a task
	force both powerful and efficient. {O}n mechanism for this is coscheduling,
	which attempts to ensure that if one activity of a task force is
	executing, all runnable activities of the task force are also executing,
	each on a different processor. {T}hree algorithms for coscheduling
	are presented, and simulation results are used to evaluate their
	effectiveness. {M}edusa also attempts to capitalize on the distribution
	and modularity of the system to achieve reliability. {S}everal techniques
	are described for detecting inconsistencies in data structures and
	for preventing misuse of the communication mechanism. {A} novel mechanism
	for exception reporting is presented, by means of which one activity
	in a task force, called a buddy, may assist another activity of the
	same task force, called a victim, in handling exceptions that occur
	in the victim.},
  address   = {Pittsburgh, PA, USA},
  groups    = {Betriebssysteme, Virtualisierung & Partitionierung},
  owner     = {hilrob},
  publisher = {Carnegie Mellon University},
  read      = {unread},
  school    = {Carnegie-Mellon University},
  timestamp = {2011.05.10},
}

@Article{Owre1995,
  author    = {Sam Owre and John Rushby and Natarajan Shankar and Friedrich von Henke},
  title     = {{F}ormal {V}erification for {F}ault-{T}olerant {A}rchitectures: {P}rolegomena to the {D}esign of {PVS}},
  journal   = {{IEEE} Transactions on Software Engineering},
  year      = {1995},
  volume    = {21},
  number    = {2},
  month     = feb,
  pages     = {107--125},
  url       = {http://www.csl.sri.com/papers/tse95/},
  abstract  = {PVS is the most recent in a series of verification systems developed
	at SRI. Its design was strongly influenced, and later refined, by
	our experiences in developing formal specifications and mechanically
	checked verifications for the fault-tolerant architecture, algorithms,
	and implementations of a model ``reliable computing platform'' (RCP)
	for life-critical digital flight-control applications, and by a collaborative
	project to formally verify the design of a commercial avionics processor
	called AAMP5. Several of the formal specifications and verifications
	performed in support of RCP and AAMP5 are individually of considerable
	complexity and difficulty. But in order to contribute to the overall
	goal, it has often been necessary to modify completed verifications
	to accommodate changed assumptions or requirements, and people other
	than the original developer have often needed to understand, review,
	build on, modify, or extract part of an intricate verification. In
	this paper, we outline the verifications performed, present the lessons
	learned, and describe some of the design decisions taken in PVS to
	better support these large, difficult, iterative, and collaborative
	verifications.},
  file      = {Owre1995.pdf:files\\Owre1995.pdf:PDF},
  groups    = {Formale Methoden, Reliability & Dependability},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.01.16},
}

@InProceedings{Ozturk2006,
  author    = {Ozturk, O. and Kandemir, M. and Son, S. W. and Karakoy, M.},
  title     = {{S}elective code/data migration for reducing communication energy in embedded {M}p{S}o{C} architectures},
  booktitle = {GLSVLSI '06: Proceedings of the 16th ACM Great Lakes symposium on VLSI},
  year      = {2006},
  publisher = {ACM},
  location  = {Philadelphia, PA, USA},
  isbn      = {1-59593-347-6},
  pages     = {386--391},
  doi       = {http://doi.acm.org/10.1145/1127908.1127997},
  address   = {New York, NY, USA},
  file      = {Ozturk2006.pdf:files\\Ozturk2006.pdf:PDF},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.06.09},
}

@Article{Pankratius2011,
  author       = {Victor Pankratius and Walter Tichy},
  title        = {{T}ruck {S}cheduling on {M}ulticore},
  journal      = {it -- Information Technology},
  year         = {2011},
  volume       = {53},
  number       = {2},
  month        = mar,
  pages        = {60--65},
  url          = {http://www.ipd.kit.edu/Tichy/uploads/publikationen/253/itit.TruckScheduling2011.0626.pdf},
  abstract     = {{S}peditionsunternehmen reduzieren {K}osten, indem sie die {R}outenpläne
	für ihre {F}ahrzeuge optimieren. {D}ie {E}rmittlung optimaler {T}ransportpläne
	ist jedoch berechnungsintensiv und kann auf sequenziellen {R}echnern
	mehrere {S}tunden dauern. {D}ieser {A}rtikel beschreibt {E}rfahrungen
	mit der {P}arallelisierung des "{V}ehicle {S}cheduling and {R}outing
	{O}ptimizer" der {F}irma {SAP} auf {M}ehrkernrechnern mit gemeinsamen
	{S}peicher. {D}ie {P}arallelisierung dieser komplexen {A}nwendung
	hat auf einem {M}ehrkernrechner mit 24 {K}ernen die typische {O}ptimierungszeit
	für reale {D}aten von 1,5 {S}tunden auf 5 {M}inuten reduziert. {D}er
	{A}rtikel beschreibt erfolgreiche und nicht erfolgreiche {P}arallelisierungsansätze
	und fasst abschließend wichtige {E}rkenntnisse zusammen.},
  file         = {Pankratius2011.pdf:files\\Pankratius2011.pdf:PDF},
  groups       = {Parallel Programming Models},
  howpublished = {http://it-information-technology.de/},
  owner        = {hilrob},
  publisher    = {Oldenburg Verlagsgruppe},
  read         = {next},
  timestamp    = {2011.05.28},
  type         = {publikation},
}

@Book{Pasricha2008,
  author        = {Pasricha, Sudeep and Dutt, Nikil},
  title         = {{O}n-{C}hip {C}ommunication {A}rchitectures: {S}ystem on {C}hip {I}nterconnect},
  year          = {2008},
  series        = {Systems on Silicon},
  publisher     = {Morgan Kaufmann},
  isbn          = {012373892X},
  pages         = {522},
  abstract      = {{O}ver the past decade, system-on-chip ({S}o{C}) designs have evolved
	to address the ever increasing complexity of applications, fueled
	by the era of digital convergence. {I}mprovements in process technology
	have effectively shrunk board-level components so they can be integrated
	on a single chip. {N}ew on-chip communication architectures have
	been designed to support all inter-component communication in a {S}o{C}
	design. {T}hese communication architecture fabrics have a critical
	impact on the power consumption, performance, cost and design cycle
	time of modern {S}o{C} designs. {A}s application complexity strains
	the communication backbone of {S}o{C} designs, academic and industrial
	{R}\&{D} efforts and dollars are increasingly focused on communication
	architecture design. {T}his book is a comprehensive reference on
	concepts, research and trends in on-chip communication architecture
	design. {I}t will provide readers with a comprehensive survey, not
	available elsewhere, of all current standards for on-chip communication
	architectures. {KEY} {FEATURES} * {A} definitive guide to on-chip
	communication architectures, explaining key concepts, surveying research
	efforts and predicting future trends * {D}etailed analysis of all
	popular standards for on-chip communication architectures * {C}omprehensive
	survey of all research on communication architectures, covering a
	wide range of topics relevant to this area, spanning the past several
	years, and up to date with the most current research efforts * {F}uture
	trends that with have a significant impact on research and design
	of communication architectures over the next several years},
  file          = {Pasricha2008.pdf:files\\Pasricha2008.pdf:PDF},
  groups        = {Books},
  keywords      = {BASICS,INTRODUCTION,NOC,ON-CHIP COMMUNICATION ARCHITECTURES,OVERVIEW,SOC},
  mendeley-tags = {BASICS,INTRODUCTION,NOC,ON-CHIP COMMUNICATION ARCHITECTURES,OVERVIEW,SOC},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.27},
}

@Book{Penczek2006,
  author        = {Penczek, Wojciech and Polrola, Agata},
  title         = {{A}dvances in {V}erification of {T}ime {P}etri {N}ets and {T}imed {A}utomata},
  year          = {2006},
  volume        = {20},
  series        = {Studies in Computational Intelligence},
  publisher     = {Springer},
  isbn          = {978-3-540-32869-8},
  doi           = {10.1007/978-3-540-32870-4},
  url           = {http://www.springerlink.com/index/10.1007/978-3-540-32870-4},
  address       = {Berlin, Heidelberg},
  annote        = {Time Petri Nets Kapitel bearbeitet und als Vortrag auf der VINO 2009 vorgestellt.},
  file          = {Penczek2006.pdf:files\\Penczek2006.pdf:PDF},
  groups        = {Books},
  keywords      = {ADVANCES,BASICS,FORMAL METHODS,FORMAL SPECIFICATION,PETRI NETS NETS,THEORY,TIME PETRI NETS,TIMED AUTOMATA,VERIFICATION},
  mendeley-tags = {ADVANCES,BASICS,FORMAL METHODS,FORMAL SPECIFICATION,PETRI NETS NETS,THEORY,TIME PETRI NETS,TIMED AUTOMATA,VERIFICATION},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Article{Peng1997,
  author    = {Peng, D.-T. and Shin, K.G. and Abdelzaher, T.F.},
  title     = {{A}ssignment and scheduling communicating periodic tasks in distributed real-time systems},
  journal   = {Software Engineering, IEEE Transactions on},
  year      = {1997},
  volume    = {23},
  number    = {12},
  pages     = {745--758},
  issn      = {0098-5589},
  doi       = {10.1109/32.637388},
  abstract  = {Presents an optimal solution to the problem of allocating communicating
	periodic tasks to heterogeneous processing nodes (PNs) in a distributed
	real-time system. The solution is optimal in the sense of minimizing
	the maximum normalized task response time, called the system hazard,
	subject to the precedence constraints resulting from intercommunication
	among the tasks to be allocated. Minimization of the system hazard
	ensures that the solution algorithm allocates tasks so as to meet
	all task deadlines under an optimal schedule, whenever such an allocation
	exists. The task system is modeled with a task graph (TG), in which
	computation and communication modules, communication delays and intertask
	precedence constraints are clearly described. Tasks described by
	this TG are assigned to PNs by using a branch-and-bound (B&B) search
	algorithm. The algorithm traverses a search tree whose leaves correspond
	to potential solutions to the task allocation problem. We use a bounding
	method that prunes, in polynomial time, nonleaf vertices that cannot
	lead to an optimal solution, while ensuring that the search path
	leading to an optimal solution will never be pruned. For each generated
	leaf vertex, we compute the exact cost using the algorithm developed
	by Peng and Shin (1993). The lowest-cost leaf vertex (one with the
	least system hazard) represents an optimal task allocation. Computational
	experiences and examples are provided to demonstrate the concept,
	utility and power of the proposed approach},
  file      = {Peng1997.pdf:files\\Peng1997.pdf:PDF},
  groups    = {Software Deployment},
  keywords  = {delays;distributed processing;minimisation;processor scheduling;real-time systems;resource allocation;tree searching;bounding method;branch-and-bound search algorithm;communicating periodic tasks;communication delays;communication modules;computation modules;distributed real-time systems;exact cost computation;heterogeneous processing nodes;intertask precedence constraints;lowest-cost leaf vertex;maximum normalized task response time minimization;nonleaf vertex pruning;optimal schedule;polynomial time algorithm;search tree traversal;system hazard;task assignment;task deadlines;task graph;task intercommunication;task scheduling;Computer Society;Costs;Delay;Hazards;Minimization methods;Optimal scheduling;Processor scheduling;Real time systems;Scheduling algorithm;Tree graphs},
  owner     = {hilrob},
  timestamp = {2014.01.14},
}

@Book{Pepper2006,
  author        = {Pepper, Peter and Hofstedt, Petra},
  title         = {{F}unktionale {P}rogrammierung},
  year          = {2006},
  series        = {eXamen.press Series},
  publisher     = {Springer},
  isbn          = {354020959X},
  pages         = {492},
  url           = {http://books.google.com/books?hl=en\&amp;lr=\&amp;id=cTRzVig53aYC\&amp;oi=fnd\&amp;pg=PA2\&amp;dq=Funktionale+Programmierung\&amp;ots=qnO91zyWVX\&amp;sig=SnRZrRGILwGeEMcJhGqIUJxXysk},
  abstract      = {{G}egenstand dieses {W}erkes sind die {T}heorie und {P}raxis der modernen
	funktionalen {P}rogrammierung. {D}abei betrachten die {A}utoren aber
	nicht nur das, was mittels der heute implementierten {S}prachen wie
	{HASKELL}, {OPAL}, {ML} usw. machbar ist, sondern weisen auch auf
	aktuelle {E}ntwicklungen hin. {Z}um einen werden fortgeschrittene
	{P}rogrammiertechniken vorgestellt, wie z.{B}. die {V}erwendung unendlicher
	{D}atenstrukturen, {P}arser als {F}unktionen h\"{o}herer {O}rdnung,
	{A}pproximations-{A}lgorithmen, {L}\"{o}sung von {G}leichungssystemen
	usw. {Z}um anderen werden aber auch {S}prachkonzepte diskutiert,
	wie z.{B}. eine systematische {F}orm der {M}odularisierung oder besonders
	ausdrucksstarke und flexible {F}ormen der {T}ypisierung. {E}in besonderes
	{G}ewicht wird generell auf die {I}ntegration verschiedener {P}aradigmen
	gelegt, wie etwa die {V}erbindung mit {K}onzepten der objektorientierten,
	der nebenl\"{a}ufigen oder der {C}onstraint-basierten {P}rogrammierung.
	{I}n diesem {Z}usammenhang wird speziell auch die {B}edeutung von
	{M}onaden analysiert und kritisch hinterfragt. {TOC}:{F}unktionen.-
	{F}unktionale und unendliche {D}atenstrukturen.- {S}trukturierung:
	{M}odule, {T}upel, {S}chnittstellen.- {T}ypen, {T}ypklassen und mehr.-
	{F}ixpunkte.- {G}leichungssysteme und {A}pproximationsalgorithmen.-
	{U}mgang mit {Z}eit und {Z}ustand: {M}onaden und {M}aschinen.- {E}ffiziente
	{I}mplementierung: {L}ineare {T}ypen, {S}ingle-{T}hreadedness und
	{S}tructure {S}haring.- {F}unktionale {A}genten und {K}ommunikation.-
	{G}raphische {B}enutzerschnittstellen.},
  file          = {Pepper2006.pdf:files\\Pepper2006.pdf:PDF},
  groups        = {Books},
  keywords      = {FUNCTIONAL PROGRAMMING,HASKELL,INTRODUCTION,ML,OPAL,OVERVIEW},
  mendeley-tags = {FUNCTIONAL PROGRAMMING,HASKELL,INTRODUCTION,ML,OPAL,OVERVIEW},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.27},
}

@Misc{Perrone2011,
  author       = {Perrone, Michael P.},
  title        = {{P}arallel {D}rivers in the {N}ext {D}ecade},
  year         = {2011},
  howpublished = {Keynote for IWMSE2011 at ICSE2011},
  month        = may,
  url          = {http://www.ipd.uni-karlsruhe.de/multicore/iwmse2011/IWMSE-2011-Keynote-Perrone-publicversion.pdf},
  file         = {Perrone2011.pdf:files\\Perrone2011.pdf:PDF},
  groups       = {Misc, Many-Core},
  keywords     = {MANY-CORE;},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2011.05.21},
}

@Book{Pinedo2008,
  author        = {Pinedo, Michael L.},
  title         = {{S}cheduling: {T}heory, {A}lgorithms, and {S}ystems},
  year          = {2008},
  edition       = {3},
  publisher     = {Springer},
  isbn          = {0387789340},
  pages         = {671},
  url           = {http://books.google.de/books?id=EkpDak9kEs0C\&printsec=frontcover\&dq=0387789340\&cd=1\#v=onepage\&q\&f=false},
  abstract      = {{T}his book on scheduling covers theoretical models as well as scheduling
	problems in the real world. {A}uthor {M}ichael {P}inedo also includes
	a {CD} that contains slide-shows from industry and movies dealing
	with implementations of scheduling systems. {T}he book consists of
	three parts. {T}he first part focuses on deterministic scheduling
	with the associated combinatorial problems. {T}he second part covers
	probabilistic scheduling models. {I}n this part it is assumed that
	processing times and other problem data are not known in advance.
	{T}he third part deals with scheduling in practice. {I}t covers heuristics
	that are popular with practitioners and discusses system design and
	development issues. {E}ach chapter contains a series of computational
	and theoretical exercises. {T}his book is of interest to theoreticians
	and practitioners alike. {G}raduate students in operations management,
	operations research, industrial engineering and computer science
	will find the book to be an accessible and invaluable resource. {S}cheduling
	will serve as an essential reference for professionals working on
	scheduling problems in manufacturing and computing environments.
	{M}ichael {P}inedo is the {J}ulius {S}chlesinger {P}rofessor of {O}perations
	{M}anagement at {N}ew {Y}ork {U}niversity.},
  groups        = {Books},
  keywords      = {ADVANCES,BASICS,INTRODUCTION,REAL-TIME-SYSTEMS,SCHEDULING},
  mendeley-tags = {ADVANCES,BASICS,INTRODUCTION,REAL-TIME-SYSTEMS,SCHEDULING},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.27},
}

@Article{Pinello2008,
  author    = {Pinello, C. and Carloni, L.P. and Sangiovanni-Vincentelli, A.L.},
  title     = {{F}ault-{T}olerant {D}istributed {D}eployment of {E}mbedded {C}ontrol {S}oftware},
  journal   = {Computer-Aided Design of Integrated Circuits and Systems, IEEE Transactions on},
  year      = {2008},
  volume    = {27},
  number    = {5},
  month     = may,
  pages     = {906--919},
  issn      = {0278-0070},
  doi       = {10.1109/TCAD.2008.917971},
  abstract  = {Safety-critical feedback-control applications may suffer faults in
	the controlled plant as well as in the execution platform, i.e.,
	the controller. Control theorists design the control laws to be robust
	with respect to the former kind of faults while assuming an idealized
	scenario for the latter. The execution platforms supporting modern
	real-time embedded systems, however, are distributed architectures
	made of heterogeneous components that may incur transient or permanent
	faults. Making the platform fault tolerant involves the introduction
	of design redundancy with obvious impact on the final cost. We present
	a design flow that enables the efficient exploration of redundancy/cost
	tradeoffs. After providing a system-level specification of the target
	platform and the fault model, designers can rely on the synthesis
	of the low-level fault-tolerance mechanisms. This is performed automatically
	as part of the embedded software deployment through the combination
	of the following three steps: replication, mapping, and scheduling.
	Our approach has a sound foundation in fault-tolerant data flow,
	a novel model of computation that simplifies the integration of formal
	validation techniques. Finally, we report on the application of our
	design flow to two case studies from the automotive industry: a steer-by-wire
	system from General Motors and a drive-by-wire system from BMW.},
  file      = {Pinello2008.pdf:files\\Pinello2008.pdf:PDF},
  groups    = {Domänen-spezifisch, Konsolidierung & Integration},
  keywords  = {BMW;General Motors;automotive industry;distributed architectures;drive-by-wire system;embedded control software;embedded software deployment;fault-tolerant distributed deployment;feedback-control;real-time embedded systems;steer-by-wire system;control engineering computing;control system synthesis;distributed control;embedded systems;fault tolerance;feedback;},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2012.06.04},
}

@InProceedings{Pinello2004,
  author    = {Pinello, Claudio and Carloni, Luca P. and Sangiovanni-Vincentelli, Alberto L.},
  title     = {{F}ault-{T}olerant {D}eployment of {E}mbedded {S}oftware for {C}ost-{S}ensitive {R}eal-{T}ime {F}eedback-{C}ontrol {A}pplications},
  booktitle = {Proceedings of the conference on Design, automation and test in Europe - Volume 2},
  year      = {2004},
  series    = {DATE '04},
  publisher = {IEEE Computer Society},
  isbn      = {0-7695-2085-5},
  pages     = {21164--},
  url       = {http://dl.acm.org/citation.cfm?id=968879.969135},
  abstract  = {Designing cost-sensitive real-time control systems for safety-critical
	applications requires a careful analysis of the cost/coverage trade-offs
	of fault-tolerant solutions. This further complicates the difficult
	task of deploying the embedded software that implements the control
	algorithms on the execution platform that is often distributed around
	the plant (as it is typical, for instance, in automotive applications).
	We propose a synthesis-based design methodology that relieves the
	designers from the burden of specifying detailed mechanisms for addressing
	platform faults, while involving them in the definition of the overall
	fault-tolerance strategy. Thus, they can focus on addressing plant
	faults within their control algorithms, selecting the best components
	for the execution platform, and de.ning an accurate fault model.
	Our approach is centered on a new model of computation, Fault Tolerant
	Data Flows (FTDF), that enables the integration of formal validation
	techniques.},
  acmid     = {969135},
  address   = {Washington, DC, USA},
  file      = {Pinello2004.pdf:files\\Pinello2004.pdf:PDF},
  groups    = {Domänen-spezifisch, Konsolidierung & Integration, (RT-) Scheduling},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.06.06},
}

@InProceedings{Pnueli1977,
  author    = {Pnueli, Amir},
  title     = {{T}he temporal logic of programs},
  booktitle = {Foundations of Computer Science, 1977., 18th Annual Symposium on},
  year      = {1977},
  pages     = {46--57},
  doi       = {10.1109/SFCS.1977.32},
  abstract  = {A unified approach to program verification is suggested, which applies
	to both sequential and parallel programs. The main proof method suggested
	is that of temporal reasoning in which the time dependence of events
	is the basic concept. Two formal systems are presented for providing
	a basis for temporal reasoning. One forms a formalization of the
	method of intermittent assertions, while the other is an adaptation
	of the tense logic system Kb, and is particularly suitable for reasoning
	about concurrent programs.},
  file      = {Pnueli1977.pdf:files\\Pnueli1977.pdf:PDF},
  groups    = {Formale Methoden},
  issn      = {0272-5428},
  keywords  = {Clocks;Logic;Operating systems;Power system modeling;Programming profession;Real time systems;Reasoning about programs;Safety;Stress;System recovery},
  owner     = {hilrob},
  timestamp = {2013.06.13},
}

@Book{Pohl2008,
  author    = {Pohl, Klaus},
  title     = {{R}equirements {E}ngineering: {G}rundlagen, {P}rinzipien,{T}echniken},
  year      = {2008},
  edition   = {2},
  publisher = {dpunkt.Verlag GmbH},
  isbn      = {3898645509},
  ean       = {9783898645508},
  groups    = {Books},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2008-09-30},
}

@Article{Popek1974,
  author    = {Popek, Gerald J. and Goldberg, Robert P.},
  title     = {{F}ormal requirements for virtualizable third generation architectures},
  journal   = {Commun. ACM},
  year      = {1974},
  volume    = {17},
  issue     = {7},
  month     = jul,
  pages     = {412--421},
  issn      = {0001-0782},
  doi       = {http://doi.acm.org/10.1145/361011.361073},
  url       = {http://doi.acm.org/10.1145/361011.361073},
  abstract  = {{V}irtual machine systems have been implemented on a limited number
	of third generation computer systems, e.g. {CP}-67 on the {IBM} 360/67.
	{F}rom previous empirical studies, it is known that certain third
	generation computer systems, e.g. the {DEC} {PDP}-10, cannot support
	a virtual machine system. {I}n this paper, model of a third-generation-like
	computer system is developed. {F}ormal techniques are used to derive
	precise sufficient conditions to test whether such an architecture
	can support virtual machines.},
  acmid     = {361073},
  address   = {New York, NY, USA},
  file      = {Popek1974.pdf:files\\Popek1974.pdf:PDF},
  groups    = {Betriebssysteme, Formale Methoden, Virtualisierung & Partitionierung},
  keywords  = {abstract model, formal requirements, hypervisor, operating system, proof, sensitive instruction, third generation architecture, virtual machine, virtual machine monitor, virtual memory},
  numpages  = {10},
  owner     = {hilrob},
  publisher = {ACM},
  read      = {unread},
  timestamp = {2011.05.13},
}

@InProceedings{Prisaznuk2008,
  author        = {Prisaznuk, Paul J.},
  title         = {{ARINC} 653 role in {I}ntegrated {M}odular {A}vionics ({IMA})},
  booktitle     = {2008 IEEE/AIAA 27th Digital Avionics Systems Conference},
  year          = {2008},
  publisher     = {IEEE},
  isbn          = {978-1-4244-2207-4},
  pages         = {1.E.5-1 -- 1.E.5--10},
  doi           = {10.1109/DASC.2008.4702770},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4702770},
  abstract      = {{T}he air transport industry has developed {ARINC} {S}pecification
	653 as a standardized {R}eal-{T}ime {O}perating {S}ystem ({RTOS})
	interface definition. {T}he document specifies the interface boundary
	between avionics software applications and the core executive software.
	{T}he standardization effort was sponsored by the airline user community
	and involved many interested parties, including airframe manufacturers,
	avionics suppliers, {RTOS} suppliers, government and academia. {ARINC}
	653 is a key enabler in the development of {I}ntegrated {M}odular
	{A}vionics ({IMA}). {I}n many ways it represents a paradigm shift
	for avionics development; in particular it recognizes the {RTOS}
	as key component of an {IMA} system. {T}he commitment shown by industry
	to {IMA} could not be more evident than that shown by the {A}irbus
	{A}380 and the {B}oeing 787 avionics suites. {T}his paper will provide
	top-level overview of {IMA} software architecture, the key elements
	of the {ARINC} 653 standard and its current development status.},
  file          = {Prisaznuk2008.pdf:files\\Prisaznuk2008.pdf:PDF},
  groups        = {Domänen-spezifisch, Virtualisierung & Partitionierung},
  keywords      = {ARINC 653,AVIONICS,IMA,OPERATING SYSTEMS,PARTITIONING,REAL-TIME OPERATING SYSTEMS,REAL-TIME-SYSTEMS,RESOURCE PARTITIONING, MODE-BASED SCHEDULING,},
  mendeley-tags = {ARINC 653,AVIONICS,IMA,OPERATING SYSTEMS,PARTITIONING,REAL-TIME OPERATING SYSTEMS,REAL-TIME-SYSTEMS,RESOURCE PARTITIONING},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.28},
}

@Article{Qin2007,
  author     = {Qin, Xiao},
  title      = {{D}esign and {A}nalysis of a {L}oad {B}alancing {S}trategy in {D}ata {G}rids},
  journal    = {Future Gener. Comput. Syst.},
  year       = {2007},
  volume     = {23},
  number     = {1},
  month      = jan,
  pages      = {132--137},
  issn       = {0167-739X},
  doi        = {10.1016/j.future.2006.06.008},
  url        = {http://dx.doi.org/10.1016/j.future.2006.06.008},
  acmid      = {1276065},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  groups     = {Load Balancing / Clusters},
  issue_date = {January 2007},
  keywords   = {data-intensive, datagrids, load balancing, performance evaluation},
  numpages   = {6},
  owner      = {hilrob},
  publisher  = {Elsevier Science Publishers B. V.},
  timestamp  = {2014.05.19},
}

@Article{Qin2010,
  author    = {Xiao Qin and Hong Jiang and Manzanares, A. and Xiaojun Ruan and Shu Yin},
  title     = {{C}ommunication-{A}ware {L}oad {B}alancing for {P}arallel {A}pplications on {C}lusters},
  journal   = {Computers, IEEE Transactions on},
  year      = {2010},
  volume    = {59},
  number    = {1},
  month     = jan,
  pages     = {42--52},
  issn      = {0018-9340},
  doi       = {10.1109/TC.2009.108},
  abstract  = {Cluster computing has emerged as a primary and cost-effective platform
	for running parallel applications, including communication-intensive
	applications that transfer a large amount of data among the nodes
	of a cluster via the interconnection network. Conventional load balancers
	have proven effective in increasing the utilization of CPU, memory,
	and disk I/O resources in a cluster. However, most of the existing
	load-balancing schemes ignore network resources, leaving an opportunity
	to improve the effective bandwidth of networks on clusters running
	parallel applications. For this reason, we propose a communication-aware
	load-balancing technique that is capable of improving the performance
	of communication-intensive applications by increasing the effective
	utilization of networks in cluster environments. To facilitate the
	proposed load-balancing scheme, we introduce a behavior model for
	parallel applications with large requirements of network, CPU, memory,
	and disk I/O resources. Our load-balancing scheme can make full use
	of this model to quickly and accurately determine the load induced
	by a variety of parallel applications. Simulation results generated
	from a diverse set of both synthetic bulk synchronous and real parallel
	applications on a cluster show that our scheme significantly improves
	the performance, in terms of slowdown and turn-around time, over
	existing schemes by up to 206 percent (with an average of 74 percent)
	and 235 percent (with an average of 82 percent), respectively.},
  file      = {Qin2010.pdf:files\\Qin2010.pdf:PDF},
  groups    = {Load Balancing / Clusters},
  keywords  = {parallel processing;resource allocation;cluster computing;communication-aware load balancing;interconnection network;parallel computing;Bandwidth;Central Processing Unit;Computational modeling;Data mining;Load management;Load modeling;Software;Cluster;communication-aware computing;load balancing.;parallel computing},
  owner     = {Robert Hilbrich},
  timestamp = {2014.04.15},
}

@Book{Rauber2008a,
  author    = {Rauber, Thomas and Rünger, Gudula},
  title     = {{M}ulticore: {P}arallele {P}rogrammierung},
  year      = {2008},
  series    = {Informatik im Fokus},
  publisher = {Springer},
  pages     = {164},
  url       = {http://books.google.de/books?id=XKTBQ3SAlE8C\&pg=PR4\&dq=978-3-540-73113-9\&cd=1\#v=onepage\&q=978-3-540-73113-9\&f=false},
  abstract  = {{M}ulticore-{P}rozessoren mit zwei oder mehreren {P}rozessorkernen
	bieten eine immense {E}rh\"{o}hung der potentiellen {L}eistungsf\"{a}higkeit
	von {C}omputern aller {B}ereiche, vom {PC} bis hin zum {H}ochleistungsrechner.
	{Z}ur {A}usnutzung dieser {L}eistungsf\"{a}higkeit f\"{u}r eine tats\"{a}chlich
	schnellere {P}rogrammbearbeitung sind jedoch spezielle {P}rogramme
	und {P}rogrammiertechniken erforderlich, die mehrere {B}erechnungen
	in {F}orm von {T}hreads zur gleichzeitigen {A}barbeitung auf den
	{K}ernen des {P}rozessors bereitstellen. {D}ieses {B}uch f\"{u}hrt
	in alle {A}spekte der {P}rogrammierung von {M}ulticore-{P}rozessoren
	ein, die den {S}oftware-{E}ntwickler bef\"{a}higen, parallele {P}rogramme
	mit {S}oftware-{T}hreads zur schnellen {A}usf\"{u}hrung auf {M}ulticore-{P}rozessoren
	zu erstellen. {V}orgestellt werden parallele {P}rogrammiermodelle,
	{K}onzepte der {T}hread-{P}rogrammierung, die {P}rogrammierumgebungen
	{P}threads, {J}ava-{T}hreads und {O}pen{MP} sowie {S}prachkonstrukte
	und neuere {P}rogrammierans\"{a}tze zur {P}rogrammierung von {M}ulticore-{P}rozessoren.},
  groups    = {Books},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.05.27},
}

@Book{Rauber2007,
  author        = {Rauber, Thomas and Rünger, Gudula},
  title         = {{P}arallele {P}rogrammierung},
  year          = {2007},
  edition       = {2},
  series        = {eXamen.press},
  publisher     = {Springer},
  isbn          = {3540465499},
  pages         = {485},
  url           = {http://books.google.de/books?id=BH15iUftTPUC\&printsec=frontcover\#v=onepage\&q\&f=false},
  abstract      = {{D}urch kosteng\"{u}nstige {M}ultiprozessor-{D}esktoprechner, {C}luster
	von {PC}s und {I}nnovationen wie die {H}yperthreading-{T}echnologie
	oder {M}ulticore-{P}rozessoren sind parallele {R}echenressourcen
	allgegenw\"{a}rtig. {D}ie effiziente {A}usnutzung dieser parallelen
	{R}echenleistung ist jedoch nur durch den {E}insatz paralleler {P}rogrammiertechniken
	m\"{o}glich, die sich damit in alle {B}ereiche der {S}oftwareerstellung
	ausbreiten. {D}ieses {B}uch stellt die parallele {P}rogrammierung
	f\"{u}r herk\"{o}mmliche {P}arallelrechner und f\"{u}r die neuartigen
	parallelen {P}lattformen umfassend dar. {N}eben den {G}rundlagen
	der parallelen {P}rogrammierung werden portable {P}rogrammierumgebungen
	wie {P}threads, {J}ava-{T}hreads, {O}pen{MP}, {MPI}, {PVM} oder {UPC}
	und die zugeh\"{o}rigen {P}rogrammiermodelle ausf\"{u}hrlich behandelt.
	{P}arallele {P}rogammiertechniken, die zur erfolgreichen {R}ealisierung
	effizienter paralleler {P}rogramme f\"{u}hren, werden mit einer {V}ielzahl
	von {B}eispielen dargestellt. {D}as {B}uch ist f\"{u}r {A}nf\"{a}nger
	und fortgeschrittene {P}rogrammierer geeignet.},
  file          = {Rauber2007.pdf:files\\Rauber2007.pdf:PDF},
  groups        = {Books},
  keywords      = {BASICS,INTRODUCTION,JAVA THREADS,MPI,MULTI-CORE,OPENMP,OVERVIEW,PARALLEL PROGRAMMING,PARALLELIZATION,PROGRAMMING MODELS,PTHREADS,PVM,SOFTWARE DEVELOPMENT,UPC},
  mendeley-tags = {BASICS,INTRODUCTION,JAVA THREADS,MPI,MULTI-CORE,OPENMP,OVERVIEW,PARALLEL PROGRAMMING,PARALLELIZATION,PROGRAMMING MODELS,PTHREADS,PVM,SOFTWARE DEVELOPMENT,UPC},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Booklet{Reisig2008,
  author        = {Reisig, Wolfgang},
  title         = {{P}etrinetze - {M}odellierungstechnik, {A}nalysemethoden, {F}allstudien},
  year          = {2008},
  pages         = {331},
  address       = {Berlin},
  file          = {Reisig2008.pdf:files\\Reisig2008.pdf:PDF},
  institution   = {Humboldt Universit\"{a}t zu Berlin, Department of Computer Science},
  keywords      = {MODELING,PETRI NETS,THEORY},
  mendeley-tags = {MODELING,PETRI NETS,THEORY},
  number        = {September},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@InProceedings{Reitan2007,
  author    = {Reitan, O.},
  title     = {{G}uidelines {D}eveloped and {L}essons {L}earned while {I}mplementing {H}azard {L}og {A}ccording {T}o {EN} 50126},
  booktitle = {Proc. FORMS/FORMAT 2007, the 6th Symposium on Formal Methods for Automation and Safety in Railway and Automotive Systems},
  year      = {2007},
  pages     = {268--307},
  file      = {Reitan2007.pdf:files\\Reitan2007.pdf:PDF},
  groups    = {Domänen-spezifisch, Formale Methoden},
  issn      = {9783937655093},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2010.10.27},
}

@InProceedings{Resmerita2011,
  author    = {Resmerita, Stefan and Butts, Kenneth and Derler, Patricia and Naderlinger, Andreas and Pree, Wolfgang},
  title     = {{M}igration of legacy software towards correct-by-construction timing behavior},
  booktitle = {Proceedings of the 16th Monterey conference on Foundations of computer software: modeling, development, and verification of adaptive systems},
  year      = {2011},
  series    = {FOCS'10},
  publisher = {Springer-Verlag},
  location  = {Redmond, WA},
  isbn      = {978-3-642-21291-8},
  pages     = {55--76},
  url       = {http://dl.acm.org/citation.cfm?id=2023011.2023015},
  abstract  = {{T}his paper presents an approach for incrementally adjusting the
	timing behavior of legacy real-time software according to explicit
	timing specifications expressed in the {T}iming {D}efinition {L}anguage
	({TDL}). {T}he main goals of such a migration are ensuring predictability
	of the timing behavior, and enabling adaptivity of the system. {T}he
	latter is particularly important for embedded control systems which
	adapt their computational load in accordance to parameters of the
	physical environment in which they operate. {O}ur approach entails
	a minimal instrumentation of the original code combined with an automatically
	generated runtime system, which ensures that the executions of designated
	periodic computations in the legacy software satisfy the logical
	execution time specifications of the {TDL} model. {T}he presented
	approach has been applied to a complex legacy controller system in
	the automotive domain.},
  acmid     = {2023015},
  address   = {Berlin, Heidelberg},
  file      = {Resmerita2011.pdf:files\\Resmerita2011.pdf:PDF},
  groups    = {Domänen-spezifisch, Methodik, Correctness by Construction},
  numpages  = {22},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2011.10.23},
}

@InProceedings{Richardson2009,
  author    = {Richardson, J. and Massie, C. and Lam, H. and Gosrani, K. and George, A.},
  title     = {{S}pace {A}pplications on {T}ilera},
  booktitle = {Workshop for Multicore Processors For Space - Opportunities and Challenges, IEEE International Conference on Space Mission Challenges for Information Technology (SMC-IT)},
  year      = {2009},
  url       = {http://www.chrec.org/pubs/SMCIT09_F5all.pdf},
  abstract  = {{T}his extended abstract summarizes our presentation for the "{M}ulticore
	{P}rocessors {F}or {S}pace - {O}pportunities and {C}hallenges" workshop,
	at the {IEEE} {S}pace {M}ission {C}hallenges for {I}nformation {T}echnology
	({SMC}-{IT}) 2009 conference. {T}he presentation begins with an overview
	of the {NSF} {C}enter for {H}igh-{P}erformance {R}econfigurable {C}omputing
	({CHREC}) at the {U}niversity of {F}lorida and its research activities
	in reconfigurable computing ({RC}) and {RC} applications for space.
	{I}n particular, we will focus on space applications being implemented
	on the {T}ilera {TILE}64 processor. {T}hese applications include:
	1) {A} case study of a {S}um of {A}bsolute {D}ifferences ({SAD})
	algorithm for a comparative analysis of the vector-based operations
	provided by the {TILE}64 2) {A} steganography application for the
	{TILE}64 processor, highlighting alternative parallelization strategies
	3) {A} {H}yper-spectral imaging ({HSI}) application to compare the
	{TILE}64's shared memory and {DMA} operations with respect to memory
	homing},
  file      = {Richardson2009.pdf:files\\Richardson2009.pdf:PDF},
  groups    = {Domänen-spezifisch, Many-Core, Embedded Multi-Core},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.10.28},
}

@InProceedings{Richter2007,
  author    = {Richter, K.},
  title     = {{T}he {AUTOSAR} {T}iming {M}odel - {S}tatus and {C}hallenges -},
  booktitle = {Proc. FORMS/FORMAT 2007, the 6th Symposium on Formal Methods for Automation and Safety in Railway and Automotive Systems},
  year      = {2007},
  pages     = {213--219},
  file      = {Richter2007.pdf:files\\Richter2007.pdf:PDF},
  groups    = {Domänen-spezifisch, (RT-) Embedded Systems, Formale Methoden, (RT-) Scheduling},
  issn      = {9783937655093},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.10.27},
}

@MastersThesis{Rijk2009,
  author    = {van Rijk,Erick Martijn},
  title     = {{D}evelopment of a {W}orkload {S}et for {M}ulti-{C}ore {A}rchitectures},
  year      = {2009},
  abstract  = {{W}ith the rise of multi-core chips in commodity hardware, the need
	for specialized workloads to evaluate the performance of multi-core
	systems has become apparent. {T}he current generation of workloads
	used for evaluating multi-core systems often consist of sequential
	programs not capable of running on multiple processors and are therefore
	of limited use for evaluating multi-core hardware. {S}uch sequential
	programs fail to show the benets of adding additional cores to a
	system, since the programs are not capable of using all of the available
	resources concurrently. {A}pple {I}nc. requested the development
	of a workload suite that would clearly show the benefits of increasing
	the number of cores, while stressing the main parts of the system.
	{K}ey requirements for the workload are: {S}calability, {R}eproducibility
	and {V}erifiability. {I}n this thesis report, we present the whole
	process of workload development for multi-core systems, starting
	from selecting the programs to be included in the workload, till
	the application of the workload to actual hardware. {I}n addition,
	this report discusses the classification of different programs based
	on fundamental algorithm classes called {D}warfs, which is the basis
	for selecting possible workload components. {T}he thesis also presents
	the relevant technologies used for the parallelization of selected
	workload components. {F}inally, a case study is discussed showing
	how to use the developed workload in practice.},
  address   = {Mekelweg 4, 2628 CD Delft, The Netherlands},
  file      = {Rijk2009.pdf:files\\Rijk2009.pdf:PDF},
  groups    = {Multi-Core Allgemein, Parallel Programming Models},
  owner     = {hilrob},
  read      = {next},
  school    = {TU Delft, Faculty of Electrical Engineering, Mathematics and Computer Science},
  timestamp = {2010.09.06},
}

@TechReport{Rose2004,
  author      = {Robert Rose},
  title       = {{S}urvey of {S}ystem {V}irtualization {T}echniques},
  institution = {Oregon State University (OSU)},
  year        = {2004},
  url         = {http://ir-dev.library.oregonstate.edu/handle/1957/9907},
  abstract    = {{T}his paper discusses two main trends in the development of virtual
	machine systems: full system virtualization, where an entire hardware
	architecture is replicated virtually, and paravirtualization, where
	an operating system is modified so that it can be run concurrently
	with other operating systems that have also been designed for paravirtualization.},
  file        = {Rose2004.pdf:files\\Rose2004.pdf:PDF},
  groups      = {Betriebssysteme, Virtualisierung & Partitionierung},
  keywords    = {VIRTUALIZATION; PARAVIRTUALIZATION; OPERATING SYSTEMS; VIRTUAL MACHINES;},
  owner       = {hilrob},
  read        = {unread},
  timestamp   = {2011.05.13},
}

@Article{Rosenblum2005,
  author    = {Rosenblum, Mendel and Garfinkel, Tal},
  title     = {{V}irtual {M}achine {M}onitors: {C}urrent {T}echnology and {F}uture {T}rends},
  journal   = {Computer},
  year      = {2005},
  volume    = {38},
  issue     = {5},
  month     = may,
  pages     = {39--47},
  issn      = {0018-9162},
  doi       = {10.1109/MC.2005.176},
  url       = {http://portal.acm.org/citation.cfm?id=1069588.1069633},
  abstract  = {{D}eveloped more than 30 years ago to address mainframe computing
	problems, virtual machine monitors have resurfaced on commodity platforms,
	offering novel solutions to challenges in security, reliability,
	and administration.},
  acmid     = {1069633},
  address   = {Los Alamitos, CA, USA},
  file      = {Rosenblum2005.pdf:files\\Rosenblum2005.pdf:PDF},
  groups    = {Virtualisierung & Partitionierung},
  keywords  = {VIRTUALIZATION TECHNOLOGY, VIRTUAL MACHINES},
  numpages  = {9},
  owner     = {hilrob},
  publisher = {IEEE Computer Society Press},
  read      = {next},
  timestamp = {2011.05.28},
}

@Misc{DO-297,
  author      = {RTCA},
  title       = {{I}ntegrated {M}odular {A}rchitecture -- {D}evelopment {G}uidance and {C}ertification {C}onsiderations},
  year        = {2005},
  url         = {http://www.rtca.org/},
  address     = {Washington, USA},
  file        = {DO-297.pdf:files\\DO-297.pdf:PDF},
  groups      = {Standards & Normen},
  institution = {Radio Technical Commission for Aeronautics},
  number      = {DO-297},
  owner       = {hilrob},
  read        = {done},
  timestamp   = {2011.01.10},
}

@Misc{DO-254,
  author    = {RTCA},
  title     = {{D}esign {A}ssurance {G}uidance for {A}irborne {E}lectronic {H}ardware},
  year      = {2000},
  month     = apr,
  url       = {http://www.rtca.org/onlinecart/product.cfm?id=194},
  abstract  = {This document is intended to help aircraft manufacturers and the suppliers
	of aircraft electronic systems assure that electronic airborne equipment
	safely performs its intended function. The document identifies design
	life cycle processes for hardware that includes line replaceable
	units, circuit board assemblies, application specific integrated
	circuits (ASICs), programmable logic devices, etc. It also characterizes
	the objective of the design life cycle processes and offers a means
	of complying with certification requirements.},
  groups    = {Domänen-spezifisch, Standards & Normen},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2013.02.14},
}

@Misc{DO-178B,
  author      = {RTCA},
  title       = {{S}oftware {C}onsiderations in {A}irborne {S}ystems and {E}quipment {C}ertification},
  year        = {1994},
  url         = {http://www.rtca.org/},
  address     = {Washington, USA},
  file        = {DO-178B.pdf:files\\DO-178B.pdf:PDF},
  groups      = {Standards & Normen},
  institution = {Radio Technical Commission for Aeronautics},
  number      = {DO-178B},
  owner       = {hilrob},
  read        = {done},
  timestamp   = {2011.01.10},
}

@MISC{ASRA,
  author = {RUAG and Astrium and Thales and OHB},
  title = {{A}vionics {S}ystem {R}eference {A}rchitecture - {SAVOIR} {F}unctional
	{R}eference {A}rchitecture},
  month = oct,
  year = {2011},
  note = {TEC-SW/11-477/JLT},
  owner = {hilrob},
  timestamp = {2014.08.25}
}

@InProceedings{Ruocco2008,
  author        = {Ruocco, Sergio},
  title         = {{A} {R}eal-{T}ime {P}rogrammer's {T}our of {G}eneral-{P}urpose {L}4 {M}icrokernels},
  booktitle     = {EURASIP Journal on Embedded Systems},
  year          = {2008},
  volume        = {2008},
  number        = {ii},
  pages         = {1--15},
  doi           = {10.1155/2008/234710},
  url           = {http://www.hindawi.com/journals/es/2008/234710.html},
  abstract      = {{L}4-embedded is a microkernel successfully deployed in mobile devices
	with soft real-time requirements. {I}t now faces the challenges of
	tightly integrated systems, in which user interface, multimedia,
	{OS}, wireless protocols, and even software-defined radios must run
	on a single {CPU}. {I}n this paper we discuss the pros and cons of
	{L}4-embedded for real-time systems design, focusing on the issues
	caused by the extreme speed optimisations it inherited from its general-purpose
	ancestors. {S}ince these issues can be addressed with a minimal performance
	loss, we conclude that, overall, the design of real-time systems
	based on {L}4-embedded is possible, and facilitated by a number of
	design features unique to microkernels and the {L}4 family.},
  file          = {Ruocco2008.pdf:files\\Ruocco2008.pdf:PDF},
  issn          = {1687-3955},
  keywords      = {EMBEDDED SYSTEMS,L4,MICROKERNELS,OPERATING SYSTEMS,REAL-TIME OPERATING SYSTEMS,REAL-TIME-SYSTEMS},
  mendeley-tags = {EMBEDDED SYSTEMS,L4,MICROKERNELS,OPERATING SYSTEMS,REAL-TIME OPERATING SYSTEMS,REAL-TIME-SYSTEMS},
  owner         = {hilrob},
  read          = {next},
  timestamp     = {2010.05.28},
}

@InProceedings{Ruocco2006,
  author        = {Ruocco, Sergio},
  title         = {{R}eal-time programming and {L}4 microkernels},
  booktitle     = {Proceedings of the 2006 Workshop on Operating System Platforms for Embedded Real-Time Applications, Dresden, Germany},
  year          = {2006},
  publisher     = {Citeseer},
  url           = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.61.5054\&amp;rep=rep1\&amp;type=pdf},
  abstract      = {{L}4-embedded is a microkernel successfully deployed in mobile devices
	with soft real-time requirements that now faces the challenges of
	tightly integrated systems, where user interface, multimedia, {OS},
	wireless protocols and even software-defined radios must run on a
	single {CPU}. {T}his paper discusses the various aspects of real-time
	programming on {L}4-embedded, focusing on the issues caused by the
	extreme speed optimisations it inherited from its ancestors. {W}e
	conclude that real-time programming on {L}4-embedded is facilitated
	by a number of design features unique to microkernels and {L}4, but
	a review of the tradeoffs between performance and predictability
	would ease priority-driven real-time programming.},
  file          = {Ruocco2006.pdf:files\\Ruocco2006.pdf:PDF},
  keywords      = {L4,MICROKERNELS,OPERATING SYSTEMS,REAL-TIME OPERATING SYSTEMS,REAL-TIME SYSTEMS},
  mendeley-tags = {L4,MICROKERNELS,OPERATING SYSTEMS,REAL-TIME OPERATING SYSTEMS,REAL-TIME SYSTEMS},
  owner         = {hilrob},
  read          = {next},
  timestamp     = {2010.05.28},
}

@TechReport{Rushby1999,
  author      = {John Rushby},
  title       = {{P}artitioning for {A}vionics {A}rchitectures:{R}equirements, {M}echanisms, and {A}ssurance},
  institution = {NASA Langley Research Center},
  year        = {1999},
  type        = {NASA Contractor Report},
  number      = {CR-1999-209347},
  note        = {Also to be issued by the FAA},
  month       = jun,
  pages       = {1--75},
  url         = {http://www.tc.faa.gov/its/worldpac/techrpt/ar99-58.pdf},
  abstract    = {{A}utomated aircraft control has traditionally been divided into distinct
	"functions" that are implemented separately (e.g., autopilot, autothrottle,
	flight management); each function has its own fault-tolerant computer
	system, and dependencies among different functions are generally
	limited to the exchange of sensor and control data. {A} by-product
	of this "federated" architecture is that faults are strongly contained
	within the computer system of the function where they occur and cannot
	readily propagate to affect the operation of other functions. {M}ore
	modern avionics architectures contemplate supporting multiple functions
	on a single, shared, fault-tolerant computer system where natural
	fault containment boundaries are less sharply defined. {P}artitioning
	uses appropriate hardware and software mechanisms to restore strong
	fault containment to such integrated architectures. {T}his report
	examines the requirements for partitioning, mechanisms for their
	realization, and issues in providing assurance for partitioning.
	{B}ecause partitioning shares some concerns with computer security,
	security models are reviewed and compared with the concerns of partitioning.},
  file        = {Rushby1999.pdf:files\\Rushby1999.pdf:PDF},
  groups      = {Domänen-spezifisch, (Embedded) Security, Virtualisierung & Partitionierung},
  keywords    = {ARINC 653; IMA;PARTITIONING; FEDERATED ARCHITECTURES; AVIONICS;},
  owner       = {hilrob},
  read        = {done},
  timestamp   = {2010.07.30},
}

@TechReport{Rushby1995,
  author      = {John Rushby},
  title       = {{F}ormal {M}ethods and their {R}ole in the {C}ertification of {C}ritical {S}ystems},
  institution = {Computer Science Laboratory, {SRI} International},
  year        = {1995},
  number      = {{SRI-CSL-95-1}},
  note        = {Also available as {NASA} Contractor Report 4673, August 1995, and to be issued as part of the {FAA} Digital Systems Validation Handbook (the guide for aircraft certification).},
  month       = mar,
  url         = {http://www.csl.sri.com/papers/csl-95-1/},
  abstract    = {{T}his report is based on one prepared as a chapter for the {FAA}
	{D}igital {S}ystems {V}alidation {H}andbook (a guide to assist {FAA}
	{C}ertification {S}pecialists with {A}dvanced {T}echnology {I}ssues).
	{I}ts purpose is to explain the use of formal methods in the specification
	and verification of software and hardware requirements, designs and
	implementations, to identify the benefits, weaknesses, and difficulties
	in applying these methods to digital systems used in critical applications,
	and to suggest factors for consideration when formal methods are
	offered in support of certification. {T}he presentation concentrates
	on the rationale for formal methods and on their contribution to
	assurance for critical applications within a context such as that
	provided by {DO}-178{B} (the guidelines for software used on board
	civil aircraft); it is intended as an introduction for those to whom
	these topics are new. {A} more technical discussion of formal methods
	is provided in a companion report.},
  address     = {Menlo Park, {CA}},
  file        = {Rushby1995.pdf:files\\Rushby1995.pdf:PDF},
  groups      = {Domänen-spezifisch, Formale Methoden},
  owner       = {hilrob},
  read        = {reading},
  timestamp   = {2010.07.28},
}

@TechReport{Rushby1993,
  author      = {John Rushby},
  title       = {{F}ormal {M}ethods and the {C}ertification of {C}ritical {S}ystems},
  institution = {Computer Science Laboratory, {SRI} International},
  year        = {1993},
  number      = {{SRI-CSL-93-7}},
  note        = {Also issued under the title "Formal Methods and Digital Systems Validation for Airborne Systems" as {NASA} Contractor Report 4551, December 1993.},
  month       = dec,
  url         = {http://www.csl.sri.com/papers/csl-93-7/},
  address     = {Menlo Park, {CA}},
  comment     = {Langfassung; für die Kurzfassung siehe auch [Rushby1995]},
  file        = {Rushby1993.pdf:files\\Rushby1993.pdf:PDF},
  groups      = {Domänen-spezifisch, Formale Methoden},
  keywords    = {FORMAL METHODS, CERTIFICATION},
  owner       = {hilrob},
  read        = {next},
  review      = {Geholt als Ergänzung zu Rushby1995 (Kurzfassung)},
  timestamp   = {2010.08.13},
}

@InProceedings{Rushby1981,
  author    = {John Rushby},
  title     = {{T}he {D}esign and {V}erification of {S}ecure {S}ystems},
  booktitle = {Eighth ACM Symposium on Operating System Principles ({SOSP})},
  year      = {1981},
  note      = {(ACM {\em Operating Systems Review\/}, Vol.\ 15, No.\ 5)},
  month     = dec,
  pages     = {12--21},
  abstract  = {This paper reviews some of the difficulties that arise in the verification
	of kernelized secure systems and suggests new techniques for their
	resolution. It is proposed that secure systems should be conceived
	as distributed systems in which security is achieved partly through
	the physical separation of their individual components and partly
	through the mediation of trusted functions performed within some
	of those components. The purpose of a security kernel is simply to
	allow such a `distributed' system to actually run within a single
	processor; policy enforcement is not the concern of a security kernel.
	This approach decouples verification of components which perform
	trusted functions from verification of the security kernel. This
	latter task may be accomplished by a new verification technique called
	`proof of separability' which explicitly addresses the security relevant
	aspects of interrupt handling and other issues ignored by present
	methods.},
  address   = {Asilomar, CA},
  file      = {Rushby1981.pdf:files\\Rushby1981.pdf:PDF},
  groups    = {(Embedded) Security},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.01.16},
}

@Article{Rushby1983,
  author    = {John Rushby and Brian Randell},
  title     = {{A} {D}istributed {S}ecure {S}ystem},
  journal   = {IEEE Computer},
  year      = {1983},
  volume    = {16},
  number    = {7},
  month     = jul,
  pages     = {55--67},
  abstract  = {We describe, in tutorial detail, the design of a distributed general-purpose
	computing system that enforces a multilevel security policy. The
	system is composed of standard UNIX systems and small trustworthy
	security mechanisms linked together in such a way as to provide a
	total system which is not only demonstrably secure, but also highly
	efficient and cost effective. Each UNIX system provides services
	to a single security partition and operates at full speed; security-critical
	tasks are performed by separate, specialised processors. These security
	processors control access to the different security partitions and
	mediate information flow between them. They also provide a multilevel
	secure file system and a facility for dynamically changing the security
	partition to which each UNIX system is assigned. Extensions to support
	controlled downgrading and multilevel objects are described as well.
	Despite the sophistication of the overall system, individual security
	processors employ only very simple, straightforward mechanisms; their
	construction and verification requires no more than already established
	technology. And despite the heterogeneity of its components, the
	system as a whole appears to be a single multilevel secure UNIX system,
	since the fact that it is actually a distributed system is completely
	hidden from its users and their programs. This is achieved through
	the use of the "Newcastle Connection", a software subsystem that
	links together multiple UNIX or UNIX-look-alike systems, without
	requiring any changes to the source code of either the operating
	system or any user programs. A first prototype system, providing
	multiple security partitions, and a multilevel secure file system,
	has already been successfully demonstrated--construction of a much
	more complete prototype is now planned.},
  file      = {Rushby1983.pdf:files\\Rushby1983.pdf:PDF},
  groups    = {Betriebssysteme, (Embedded) Security},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.01.16},
}

@InProceedings{Sabouri2012,
  author    = {Sabouri, H. and Jaghoori, M.M. and de Boer, F. and Khosravi, R.},
  title     = {{S}cheduling and {A}nalysis of {R}eal-{T}ime {S}oftware {F}amilies},
  booktitle = {Computer Software and Applications Conference (COMPSAC), 2012 IEEE 36th Annual},
  year      = {2012},
  pages     = {680--689},
  doi       = {10.1109/COMPSAC.2012.95},
  abstract  = {A software product line describes explicitly the commonalities of
	and differences between different products in a family of (software)
	systems. A formalization of these commonalities and differences amounts
	to reduced development, analysis and maintenance costs in the practice
	of software engineering. An important feature common to next-generation
	real-time software systems is the need of application-level control
	over scheduling for optimized utilization of resources provided by
	for example many-core and cloud infrastructures. In this paper, we
	introduce a formal model of real-time software product lines which
	supports variability in scheduling policies and rigorous and efficient
	techniques for modular schedulability analysis.},
  file      = {Sabouri2012.pdf:files\\Sabouri2012.pdf:PDF},
  groups    = {(RT-) Scheduling, Produktlinien / Softwarefamilien},
  issn      = {0730-3157},
  keywords  = {resource allocation;scheduling;software development management;software maintenance;application-level control;cloud infrastructures;maintenance costs;many-core infrastructures;modular schedulability analysis;next-generation real-time software systems;optimized resources utilization;real-time software families;software engineering;software product line;Automata;Clocks;Elevators;Numerical models;Object oriented modeling;Real-time systems;Software;Application-level Scheduling;Automata Theory;Formal Methods;Real-Time;Software Product Lines},
  owner     = {hilrob},
  timestamp = {2014.01.28},
}

@Misc{ARP4754a,
  author       = {{SAE International}},
  title        = {{A}erospace {R}ecommended {P}ractice ({ARP}) 4754{A}: {G}uidelines for {D}evelopment of {C}ivil {A}ircraft and {S}ystems},
  year         = {2010},
  organization = {Society of Automotive Engineers (SAE)},
  month        = dec,
  url          = {http://standards.sae.org/arp4754a/},
  abstract     = {This document discusses the development of aircraft systems taking
	into account the overall aircraft operating environment and functions.
	This includes validation of requirements and verification of the
	design implementation for certification and product assurance. It
	provides practices for showing compliance with the regulations and
	serves to assist a company in developing and meeting its own internal
	standards by considering the guidelines herein.},
  groups       = {Standards & Normen},
  institution  = {Society of Automotive Engineers (SAE)},
  number       = {ARP4754},
  owner        = {hilrob},
  read         = {done},
  revision     = {A},
  timestamp    = {2013.02.14},
}

@Misc{ARP4761,
  author       = {{SAE International}},
  title        = {{A}erospace {R}ecommended {P}ractice ({ARP}) 4761: {G}uidelines and {M}ethods for {C}onducting the {S}afety {A}ssessment {P}rocess on {C}ivil {A}irborne {S}ystems and {E}quipment},
  year         = {1996},
  organization = {Society of Automotive Engineers (SAE)},
  month        = dec,
  url          = {http://standards.sae.org/arp4761/},
  abstract     = {This document describes guidelines and methods of perfomring the safety
	assessment for certification of civil aircraft. It is primarily associated
	with showing compliance with FAR/JAR 25.1309. The methods outlined
	here identify a systematic means, but not the only means, to show
	compliance. A subset of this material may be applicable to non-25.1309
	equipment. The concept of Aircraft Level Safety Assessment is introduced
	and the tools to accomplish this task are outlined. The overall aircraft
	operating environment is considered. When aircraft derivatives or
	system changes are certified, the processes described herein are
	usually applicable only to the new designs or to existing designs
	that are affected by the changes. In the case of the implementation
	of existing designs in a new derivation, alternate means such as
	service experience may be used to show compliance.},
  file         = {ARP4761.pdf:files\\ARP4761.pdf:PDF},
  groups       = {Domänen-spezifisch, Standards & Normen},
  institution  = {Society of Automotive Engineers (SAE)},
  number       = {ARP4761},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2013.02.14},
}

@Book{Sander2011,
  author    = {Oliver Sander},
  title     = {{S}kalierbare {A}daptive {S}ystem-on-{C}hip-{A}rchitekturen für {I}nter-{C}ar und {I}ntra-{C}ar {K}ommunikationsgateways ({G}erman {E}dition)},
  year      = {2011},
  publisher = {KIT Scientific Publishing},
  isbn      = {3866446012},
  groups    = {Tools},
  owner     = {hilrob},
  timestamp = {2014.01.14},
}

@InProceedings{Sarkar2009,
  author        = {Sarkar, Abhik and Mueller, Frank and Ramaprasad, Harini and Mohan, Sibin},
  title         = {{P}ush-{A}ssisted {M}igration of {R}eal-{T}ime {T}asks in {M}ulti-{C}ore {P}rocessors},
  booktitle     = {Proceedings of the 2009 ACM SIGPLAN/SIGBED conference on Languages, compilers, and tools for embedded systems - LCTES '09},
  year          = {2009},
  publisher     = {ACM Press},
  isbn          = {9781605583563},
  pages         = {80},
  doi           = {10.1145/1542452.1542464},
  url           = {http://portal.acm.org/citation.cfm?doid=1542452.1542464},
  abstract      = {{M}ulticores are becoming ubiquitous, not only in general-purpose
	but also embedded computing. {T}his trend is a reflexion of contemporary
	embedded applications posing steadily increasing demands in processing
	power. {O}n such platforms, prediction of timing behavior to ensure
	that deadlines of real-time tasks can be met is becoming increasingly
	difficult. {W}hile real-time multicore scheduling approaches help
	to assure deadlines based on firm theoretical properties, their reliance
	on task migration poses a significant challenge to timing predictability
	in practice. {T}ask migration actually (a) reduces timing predictability
	for contemporary multicores due to cache warm-up overheads while
	(b) increasing traffic on the network-on-chip ({N}o{C}) interconnect.
	{T}his paper puts forth a fundamentally new approach to increase
	the timing predictability of multicore architectures aimed at task
	migration in embedded environments. {A} task migration between two
	cores imposes cache warm-up overheads on the migration target, which
	can lead to missed deadlines for tight real-time schedules. {W}e
	propose novel micro-architectural support to migrate cache lines.
	{O}ur scheme shows dramatically increased predictability in the presence
	of cross-core migration. {E}xperimental results for schedules demonstrate
	that our scheme enables real-time tasks to meet their deadlines in
	the presence of task migration. {O}ur results illustrate that increases
	in execution time due to migration is reduced by our scheme to levels
	that may prevent deadline misses of real-time tasks that would otherwise
	occur. {O}ur mechanism imposes an overhead at a fraction of the task's
	execution time, yet this overhead can be steered to fill idle slots
	in the schedule, i.e., it does not contribute to the execution time
	of the migrated task. {O}verall, our novel migration scheme provides
	a unique mechanism capable of significantly increasing timing predictability
	in the wake of task migration. },
  address       = {New York, New York, USA},
  annote        = {- Real-Time Scheduling ist wichtig, gerade bei embedded systemen - Real-Time Scheduling erfordert Task Migration - ==> Task Migration erschwert aber in der Praxis die Vorhersage des Systemverhaltens Gr\"{u}nde: o Cache Warm-Up o Increased NoC traffic Interessante Benchmarks werden benutzt: MatMult, Cnt SESC wird als Simulator f\"{u}r einen Dual-Core verwendet},
  file          = {Sarkar2009.pdf:files\\Sarkar2009.pdf:PDF},
  groups        = {Task Migration},
  keywords      = {CNT,DYNAMIC-RECONFIGURATION,MATMULT,MULTI-CORE,PUSH-ASSISTED MIGRATION,RUNTIME BEHAVIOUR,SESC,TASK-MIGRATION,TIMING ANALYSIS},
  mendeley-tags = {CNT,DYNAMIC-RECONFIGURATION,MATMULT,MULTI-CORE,PUSH-ASSISTED MIGRATION,RUNTIME BEHAVIOUR,SESC,TASK-MIGRATION,TIMING ANALYSIS},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Article{Sarkar1991,
  author    = {Sarkar, V.},
  title     = {{A}utomatic partitioning of a program dependence graph into parallel tasks},
  journal   = {IBM Journal of Research and Development},
  year      = {1991},
  volume    = {35},
  number    = {5.6},
  month     = sep,
  pages     = {779--804},
  issn      = {0018-8646},
  doi       = {10.1147/rd.355.0779},
  abstract  = {In this paper, we describe a general interprocedural framework for
	partitioning a program dependence graph into parallel tasks for execution
	on a multiprocessor system. Partitioning techniques are necessary
	to execute a parallel program at the appropriate granularity for
	a given target multiprocessor. The problem is to determine the best
	trade-off between parallelism and overhead. It is desirable for the
	partitioning to be performed automatically, so that the programmer
	can write a parallel program without being burdened by details of
	the overhead target multiprocessor, and so that the same parallel
	program can be made to execute efficiently on different multiprocessors.
	For each procedure, the partitioning algorithm attempts to minimize
	the estimated parallel execution time. The estimated parallel execution
	time reflects a trade-off between parallelism and overhead and is
	minimized at an optimal intermediate granularity of parallelism.
	Execution-profiling information is used to obtain accurate execution-time
	estimates. The partitioning framework has been completely implemented
	in the PTRAN system at the IBM Thomas J. Watson Research Center.
	Partitioned parallel programs generated by this prototype system
	have been executed on the IBM 3090 and RP3 multiprocessor systems.},
  file      = {Sarkar1991.pdf:files\\Sarkar1991.pdf:PDF},
  groups    = {Parallel Programming Models},
  owner     = {hilrob},
  timestamp = {2014.04.28},
}

@Article{Sarood2012,
  author  = {Sarood, O. and Miller, P. and Totoni, E. and Kale, L.V.},
  title   = {{C}ool {L}oad {B}alancing for {H}igh {P}erformance {C}omputing {D}ata {C}enters},
  journal = {Computers, IEEE Transactions on},
  year    = {2012},
  volume  = {61},
  number  = {12},
  month   = dec,
  pages   = {1752--1764},
  issn    = {0018-9340},
  doi     = {10.1109/TC.2012.143},
  file    = {Sarood2012.pdf:files\\Sarood2012.pdf:PDF},
  groups  = {Load Balancing / Clusters},
}

@Misc{Sato2010,
  author        = {Sato, Liria Matsumoto and Bellasi, Patrick and Fornaciari, William and Betz, Wolfgang},
  title         = {{M}ulti-core {S}cheduling {O}ptimizations for {S}oft {R}eal-{T}ime {A}pplications - a {C}ooperation {A}ware {A}pproach},
  year          = {2010},
  url           = {http://elinux.org/images/1/1b/Sched-optimization-2010.pdf},
  booktitle     = {Embedded Linux Conference 2010},
  file          = {Sato2010.pdf:files\\Sato2010.pdf:PDF},
  groups        = {Misc, Task Migration},
  keywords      = {LINUX,LINUX RT,LOCALITY,MIGRATION,MULTI-CORE,OPERATING SYSTEMS,REAL-TIME OPERATING SYSTEMS,REAL-TIME-SYSTEMS,TASK AFFINITY,TASK-MIGRATION,WAKEUP LOCALITY},
  mendeley-tags = {LINUX,LINUX RT,LOCALITY,MIGRATION,MULTI-CORE,OPERATING SYSTEMS,REAL-TIME OPERATING SYSTEMS,REAL-TIME-SYSTEMS,TASK AFFINITY,TASK-MIGRATION,WAKEUP LOCALITY},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@InProceedings{Savage2008,
  author        = {Savage, John E and Zubair, Mohammad},
  title         = {{A} {U}nified {M}odel for {M}ulticore {A}rchitectures},
  booktitle     = {Proceedings of the 1st international forum on Next-generation multicore/manycore technologies - IFMT '08},
  year          = {2008},
  publisher     = {ACM Press},
  isbn          = {9781605584072},
  pages         = {1},
  doi           = {10.1145/1463768.1463780},
  url           = {http://portal.acm.org/citation.cfm?doid=1463768.1463780},
  abstract      = {{W}ith the advent of multicore and many core architectures, we are
	facing a problem that is new to parallel computing, namely, the management
	of hierarchical parallel caches. {O}ne major limitation of all earlier
	models is their inability to model multicore processors with varying
	degrees of sharing of caches at different levels. {W}e propose a
	unified memory hierarchy model that addresses these limitations and
	is an extension of the {MHG} model developed for a single processor
	with multi-memory hierarchy. {W}e demonstrate that our unified framework
	can be applied to a number of multicore architectures for a variety
	of applications. {I}n particular, we derive lower bounds on memory
	traffic between different levels in the hierarchy for financial and
	scientific computations. {W}e also give a multicore algorithms for
	a financial application that exhibits a constant-factor optimal amount
	of memory traffic between different cache levels. {W}e implemented
	the algorithm on a multicore system with two {Q}uad-{C}ore {I}ntel
	{X}eon 5310 1.6{GH}z processors having a total of 8 cores. {O}ur
	algorithms outperform compiler optimized and auto-parallelized code
	by a factor of up to 7.3.},
  address       = {New York, New York, USA},
  annote        = {interessantes memory hierarchy model},
  file          = {Savage2008.pdf:files\\Savage2008.pdf:PDF},
  keywords      = {CASE-STUDY,IMPLEMENTATION,MEMORY HIERARCHIES,MODEL,MULTI-CORE,PEBBLE GAME,THEORY},
  mendeley-tags = {CASE-STUDY,IMPLEMENTATION,MEMORY HIERARCHIES,MODEL,MULTI-CORE,PEBBLE GAME,THEORY},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.28},
}

@InProceedings{Schaefer2010,
  author        = {Schaefer, Christoph A. and Pankratius, Victor and Tichy, Walter F.},
  title         = {{E}ngineering {P}arallel {A}pplications with {T}unable {A}rchitectures},
  booktitle     = {2010 International Conference on Software Engineering},
  year          = {2010},
  publisher     = {ACM Press},
  abstract      = {{C}urrent multicore computers differ in many hardware char- acteristics.
	{S}oftware developers thus hand-tune their par- allel programs for
	a specific platform to achieve the best performance; this is tedious
	and leads to non-portable code. {A}lthough the software architecture
	also requires adaptation to achieve best performance, it is rarely
	modified because of the additional implementation effort. {T}he {T}unable
	{A}rchitectures approach proposed in this paper automates the architecture
	adaptation of parallel programs and uses an autotuner to find the
	best-performing software architecture for a particular machine. {W}e
	introduce a new architecture description language based on parallel
	patterns and a framework to express architecture variants in a generic
	way. {S}everal case studies demonstrate significant performance im-
	provements due to architecture tuning and show the appli- cability
	of our approach to industrial applications. {S}oftware developers
	are exposed to less parallel programming complexity, thus making
	the approach attractive for experts as well as inexperienced parallel
	programmers.},
  annote        = {- Als Code-Instrumentierung zum Messen der Performance wird ATUNE-IL verwendet - Interessante Metriken um den Programmieraufwand zu messen - Woher wei\ss der Programmierer, dass die verschiedenen vorgeschlagenen Architekturvarianten semantisch gleichwertig sind? - Kann man hier vielleicht testen unterbringen? - Wo ist der Unterschied zu FluenC? - Die Explosion des Suchraumes k\"{o}nnte man vielleicht durch evolution\"{a}re Suche verhindern?},
  file          = {Schaefer2010.pdf:files\\Schaefer2010.pdf:PDF},
  keywords      = {ATUNE-IL,AUTOTUNING,CASE-STUDY,MULTI-CORE,SHARED-MEMORY,SOFTWARE ARCHITECTURE},
  mendeley-tags = {ATUNE-IL,AUTOTUNING,CASE-STUDY,MULTI-CORE,SHARED-MEMORY,SOFTWARE ARCHITECTURE},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Misc{Scheidemann2010,
  author      = {Scheidemann, Kathrin D. and Knapp, Michael and Stellwag, Claus},
  title       = {{L}oad {B}alancing in {AUTOSAR}-{M}ulticore-{S}ystemen ({T}eil 1 und 2)},
  year        = {2010},
  type        = {Report},
  url         = {http://www.elektroniknet.de/automotive/technik-know-how/test-entwicklungstools/article/26546/0/Load_Balancing_in_AUTOSAR-Multicore-Systemen_Teil_1/ http://www.elektroniknet.de/automotive/technik-know-how/test-entwicklungstools/article/26538/0/Load_Balancing_in_AUTOSAR-Multicore-Systemen_Teil_2/},
  abstract    = {{A}b {R}elease 4.0 bietet {AUTOSAR} erstmals eine standardisierte
	{U}nterstützung für die verteilte {A}usführung von {S}oftware auf
	{E}mbedded-{M}ulticore-{P}rozessoren. {B}ei der {V}erteilung von
	{S}oftware auf {R}echenkerne stehen im {V}ergleich zur {V}erteilung
	von {S}oftware auf unterschiedliche {S}teuergeräte oder auch {P}rozessoren
	eines einzelnen {S}teuergerätes wesentlich mehr {F}reiheitsgrade
	zur {V}erfügung, da der {O}verhead und die {D}esign-{E}inschränkungen
	durch {K}ommunikation geringer sind. {E}ine {H}erausforderung besteht
	darin, diese {F}reiheitsgrade zu nutzen, um die {R}echenleistung
	von {M}ulticore-{P}lattformen optimal einzusetzen.},
  file        = {Scheidemann2010.pdf:files\\Scheidemann2010.pdf:PDF},
  groups      = {Domänen-spezifisch, Konsolidierung & Integration, Embedded Multi-Core},
  institution = {elektroniknet},
  keywords    = {AUTOSAR; AUTOMOTIVE; MULTI-CORE; LOAD BALANCING;},
  owner       = {hilrob},
  read        = {done},
  timestamp   = {2011.02.14},
}

@Misc{Schieferdecker2007,
  author        = {Schieferdecker, Ina},
  title         = {{G}rundlagen des {S}oftware-{T}estens},
  year          = {2007},
  address       = {Berlin},
  file          = {Schieferdecker2007.pdf:files\\Schieferdecker2007.pdf:PDF},
  keywords      = {BASICS,INTRODUCTION,MODEL-BASED TESTING,SOFTWARE QUALITY,TESTING},
  mendeley-tags = {BASICS,INTRODUCTION,MODEL-BASED TESTING,SOFTWARE QUALITY,TESTING},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@InProceedings{Schild1998,
  author    = {Schild, Klaus and Würtz, Jörg},
  title     = {{O}ff-line {S}cheduling of a {R}eal-time {S}ystem},
  booktitle = {Proceedings of the 1998 ACM Symposium on Applied Computing},
  year      = {1998},
  series    = {SAC '98},
  publisher = {ACM},
  location  = {Atlanta, Georgia, USA},
  isbn      = {0-89791-969-6},
  pages     = {29--38},
  doi       = {10.1145/330560.330566},
  url       = {http://doi.acm.org/10.1145/330560.330566},
  acmid     = {330566},
  address   = {New York, NY, USA},
  file      = {Schild1998.pdf:files\\Schild1998.pdf:PDF},
  groups    = {(RT-) Scheduling},
  keywords  = {constraint programming, scheduling, time-triggered real-time ystems},
  numpages  = {10},
  owner     = {hilrob},
  timestamp = {2014.01.13},
}

@Misc{Schmidt2011,
  author       = {Schmidt, Adriaan and Prehofer, Christian},
  title        = {{I}n vier {S}chritten {E}mbedded-{S}oftware auf {M}ulticore-{S}ysteme portieren},
  year         = {2011},
  howpublished = {Elektronik Praxis},
  month        = may,
  url          = {http://www.elektronikpraxis.vogel.de/themen/embeddedsoftwareengineering/softwarekomponenten/articles/316550/index1.html},
  abstract     = {{W}ie lässt sich bestehende {S}oftware auf {M}ulticore-{P}lattformen
	migrieren? {W}ir stellen {I}hnen einen vierstufigen {A}nsatz aus
	{A}nalyse, {R}efactoring, {P}arallelisierung und {O}ptimierung vor.},
  file         = {Schmidt2011.pdf:files\\Schmidt2011.pdf:PDF},
  groups       = {Konsolidierung & Integration, Embedded Multi-Core, Optimierung, Parallel Programming Models},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2011.05.29},
}

@Article{Schmidt2012,
  author    = {Schmidt, Karsten and Buhlmann, Markus and Ficek, Christoph and Richter, Kai},
  title     = {{E}ntwurfsaspekte für hochintegrierte {S}teuergeräte mit unterschiedlichen {ASIL}-{S}tufen},
  journal   = {ATZ elektronik},
  year      = {2012},
  volume    = {1},
  month     = jan,
  pages     = {34--39},
  url       = {https://symtavision.com/downloads/Magazines/1201_ATZ_AUDI_Entwurfsaspekte_dt.pdf},
  abstract  = {Die Hochintegration von Fahrzeugfunktionen mit unterschiedlichen ASIL-Stufen
	bildet die Basis für viele Trends in der Fahrzeugelektronik, führt
	aber auch zu neuen Wechselwirkungen im Zeitverhalten dieser Systeme.
	Audi und Symtavision haben deshalb die bestehenden Entwurfsmuster
	an die geänderten Herausforderungen angepasst.},
  file      = {Schmidt2012.pdf:files\\Schmidt2012.pdf:PDF},
  groups    = {Domänen-spezifisch, Konsolidierung & Integration, (RT-) Scheduling},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2012.04.20},
}

@InProceedings{Schmidt2009,
  author    = {Karsten Schmidt and Philipp Janda},
  title     = {{E}rfahrungen bei der modellbasierten {E}ntwicklung von {F}ahrwerksregelfunktionen im {AUTOSAR}-{U}mfeld und notwendige {E}ntwicklungsschritte.},
  booktitle = {MBEES'09},
  year      = {2009},
  pages     = {67--74},
  doi       = {mbees-dagstuhl/MBEES2009_Proceedings_online_small.pdf},
  url       = {http://www.sse-tubs.de/mbees-dagstuhl/MBEES2009_Proceedings_online_small.pdf},
  abstract  = {{D}ie {N}utzung modellbasierter {E}ntwicklungsansätze ist im {A}utomobilbereich
	bei der {F}unktionsentwicklung stark verbreitet. {D}abei gilt es
	zu beachten, dass sich die {M}odelle, die in einem modellbasierten
	{E}ntwicklungsprozess eingesetzt werden, an der {P}roblem- statt
	an der {L}ösungsdomäne orientieren müssen. {D}ie {N}utzung von {AUTOSAR}
	als {E}ntwicklungsansatz, um die {S}oftwarekomplexität im {F}ahrzeug
	zu beherrschen, findet immer größere {V}erbreitung. {D}ie {N}utzung
	modellbasierter {A}nsätze im {AUTOSAR}-{U}mfeld gestattet neue {L}ösungsmöglichkeiten,
	erzeugt jedoch auch neue {H}erausforderungen. {D}ie dabei notwendige
	{U}mstellung der {E}ntwicklungsprozesse auf {AUTOSAR} eröffnet ideale
	{M}öglichkeiten, die {E}/{E}-{S}ystementwicklung an den für den {K}unden
	erlebbaren {F}unktionen auszurichten und {A}rchitekturaspekte frühzeitig
	zu berücksichtigen. {D}er vorliegende {A}ufsatz fasst den aktuellen
	{S}tand bei der {I}ntegration beider {A}nsätze zusammen und zeigt
	notwendige {A}ktivitäten auf.},
  file      = {Schmidt2009.pdf:files\\Schmidt2009.pdf:PDF},
  groups    = {Domänen-spezifisch, (RT-) Embedded Systems},
  owner     = {hilrob},
  read      = {reading},
  timestamp = {2011.08.31},
}

@Book{Schneider2004,
  author    = {Schneider, K.},
  title     = {{V}erification of {R}eactive {S}ystems: {F}ormal {M}ethods and {A}lgorithms},
  year      = {2004},
  series    = {Texts in Theoretical Computer Science. An EATCS Series},
  publisher = {Springer},
  isbn      = {9783540002963},
  groups    = {Formale Methoden},
  lccn      = {03066407},
  owner     = {hilrob},
  timestamp = {2013.06.13},
}

@Book{Scholz2007,
  author    = {Scholz, Peter},
  title     = {{S}oftwareentwicklung eingebetteter {S}ysteme: {G}rundlagen, {M}odellierung, {Q}ualit\&\#228;tssicherung ({X}pert.press)},
  year      = {2007},
  publisher = {Springer-Verlag New York, Inc.},
  isbn      = {3540234055},
  address   = {Secaucus, NJ, USA},
  groups    = {Books, (RT-) Embedded Systems, Software Modellierung, Systems Engineering},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.02.15},
}

@InProceedings{Schuele2009,
  author    = {Schuele, T.},
  title     = {{A} {C}oordination {L}anguage for {P}rogramming {E}mbedded {M}ulti-{C}ore {S}ystems},
  booktitle = {Parallel and Distributed Computing, Applications and Technologies, 2009 International Conference on},
  year      = {2009},
  pages     = {201--209},
  doi       = {10.1109/PDCAT.2009.38},
  abstract  = {We propose an implicitly parallel language for the coordination of
	sequential processes and present a translation scheme to dataflow
	process networks. Our language is well-suited for programming embedded
	systems and allows to benefit from the computational power offered
	by modern multi-core processors. Moreover, it facilitates the reuse
	of legacy code and can deal with side effects that may arise between
	functions written in the guest language by taking into account dependencies
	due to shared resources.},
  file      = {Schuele2009.pdf:files\\Schuele2009.pdf:PDF},
  groups    = {Parallel Programming Models},
  keywords  = {data flow computing;embedded systems;multiprocessing systems;parallel languages;parallel programming;software reusability;coordination language;dataflow process network;embedded multicore system programming;implicitly parallel language;legacy code reusing;sequential process coordination;translation scheme;Application software;Computational modeling;Concurrent computing;Distributed computing;Embedded computing;Embedded system;Multicore processing;Parallel programming;Programming profession;Yarn},
  owner     = {hilrob},
  timestamp = {2014.01.14},
}

@Article{Schwitzer2013,
  author      = {Schwitzer, Wolfgang and Schneider, Rolf and Reinhardt, Dominik and Hofstetter, Georg},
  title       = {{T}ackling the {C}omplexity of {T}iming-{R}elevant {D}eployment {D}ecisions in {M}ulticore-{B}ased {E}mbedded {A}utomotive {S}oftware {S}ystems},
  journal     = {SAE Int. J. Passeng. Cars - Electron. Electr. Syst.},
  year        = {2013},
  volume      = {6},
  number      = {2},
  month       = apr,
  pages       = {478--488},
  doi         = {10.4271/2013-01-1224},
  url         = {http://dx.doi.org/10.4271/2013-01-1224},
  abstract    = {Multicore-based ECUs are increasingly used in embedded automotive
	software systems to allow more demanding automotive applications
	at moderate cost and energy consumption. Using a high number of parallel
	processors together with a high number of executed software components
	results in a practically unmanageable number of deployment alternatives
	to choose from. However correct deployment is one important step
	for reaching timing goals and acceptable latency, both also a must
	to reach safety goals of safety-relevant automotive applications.
	In this paper we focus at reducing the complexity of deployment decisions
	during the phases of allocation and scheduling. We tackle this complexity
	of deployment decisions by a mixed constructive and analytic approach.
	On the constructive side, we model a multicore-based embedded automotive
	software system as a tuple S=(L,R) with a given architecture L of
	the system's software component network and a given architecture
	R of the system's platform component network. On the analytic side,
	we derive models of the system's deployment as a tuple D=(M,Z), where
	the relation M:L-->R describes the allocation mapping from software
	components to platform components and the relation Z:L-->N0 describes
	the scheduled start times of software components. The architectures
	L and R allow to describe hierarchically nested software- and platform-component
	networks. Hence, we are able to represent coarse-grain structures
	like domain functions and domain networks as well as fine-grain structures
	like individual driver-calls, algorithms, ECUs and CPU cores as well.
	With all this architectural information contained in precise models,
	deployment alternatives (allocations and schedules) can be automatically
	derived and analyzed for conformance with timing requirements, given
	by a set of timing constraints C. To demonstrate the usability of
	the approach, we implemented an architecture description language
	in the academic open source tool CADMOS together with a prototypical
	allocation and scheduling support. We are evaluating the practicability
	of the approach within a case study in the German national joint
	project ARAMiS using a close-to-production multicore-based system
	in cooperation with Technische Universitat Munchen, AUDI AG and BMW
	AG.},
  groups      = {Domänen-spezifisch, Konstruktive Synthese, Software Deployment},
  institution = {SAE International},
  owner       = {hilrob},
  timestamp   = {2014.01.13},
}

@InProceedings{Sibert1995,
  author    = {Sibert, O. and Porras, P.A. and Lindell, R.},
  title     = {{T}he {I}ntel 80x86 processor architecture: pitfalls for secure systems},
  booktitle = {Security and Privacy, 1995. Proceedings., 1995 IEEE Symposium on},
  year      = {1995},
  month     = {8-10},
  pages     = {211--222},
  doi       = {10.1109/SECPRI.1995.398934},
  abstract  = {{A}n in-depth analysis of the 80 times;86 processor families identifies
	architectural properties that may have unexpected, and undesirable,
	results in secure computer systems. {I}n addition, reported implementation
	errors in some processor versions render them undesirable for secure
	systems because of potential security and reliability problems. {W}e
	discuss the imbalance in scrutiny for hardware protection mechanisms
	relative to software, and why this imbalance is increasingly difficult
	to justify as hardware complexity increases. {W}e illustrate this
	difficulty with examples of architectural subtleties and reported
	implementation errors},
  file      = {Sibert1995.pdf:files\\Sibert1995.pdf:PDF},
  groups    = {(RT-) Embedded Systems},
  keywords  = { architectural subtleties; hardware complexity; hardware protection mechanisms; implementation errors; potential reliability problems; potential security problems; processor versions; scrutiny; secure computer systems; secure system pitfalls;Intel 80 times;86 processor architecture; computer architecture; fault tolerant computing; microcomputers; microprocessor chips; reliability; security;},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.07.23},
}

@Article{Sifakis2012,
  author    = {Sifakis, Joseph},
  title     = {{R}igorous {S}ystem {D}esign},
  journal   = {Foundations and TrendsR in Electronic Design Automation},
  year      = {2012},
  volume    = {6},
  number    = {4},
  pages     = {293--362},
  doi       = {10.1561/1000000034},
  url       = {http://infoscience.epfl.ch/record/185999/files/EDA-Sifakis-Vol6-EDA-034.pdf},
  file      = {Sifakis2012.pdf:files\\Sifakis2012.pdf:PDF},
  groups    = {Methodik, Systems Engineering, (Embedded) Model-driven Architecture},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2013.04.22},
}

@Book{Silberschatz2005a,
  author    = {Silberschatz, Abraham and Galvin, Peter B. and Gagne, Greg},
  title     = {{O}perating {S}ystem {C}oncepts},
  year      = {2005},
  edition   = {7},
  publisher = {J. Wiley \& Sons},
  pages     = {921},
  abstract  = {{A}nother defining moment in the evolution of operating systems {S}mall
	footprint operating systems, such as those driving the handheld devices
	that the baby dinosaurs are using on the cover, are just one of the
	cutting-edge applications you'll find in {S}ilberschatz, {G}alvin,
	and {G}agne's {O}perating {S}ystem {C}oncepts, {S}eventh {E}dition.
	{B}y staying current, remaining relevant, and adapting to emerging
	course needs, this market-leading text has continued to define the
	operating systems course. {T}his {S}eventh {E}dition not only presents
	the latest and most relevant systems, it also digs deeper to uncover
	those fundamental concepts that have remained constant throughout
	the evolution of today's operation systems. {W}ith this strong conceptual
	foundation in place, students can more easily understand the details
	related to specific systems. {N}ew {A}daptations * {I}ncreased coverage
	of user perspective in {C}hapter 1. * {I}ncreased coverage of {OS}
	design throughout. * {A} new chapter on real-time and embedded systems
	({C}hapter 19). * {A} new chapter on multimedia ({C}hapter 20). *
	{A}dditional coverage of security and protection. * {A}dditional
	coverage of distributed programming. * {N}ew exercises at the end
	of each chapter. * {N}ew programming exercises and projects at the
	end of each chapter. * {N}ew student-focused pedagogy and a new two-color
	design to enhance the learning process.},
  groups    = {Books},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.05.27},
}

@BOOK{Spitzer2000,
  title = {{D}igital {A}vionics {H}andbook},
  publisher = {Taylor \& Francis},
  year = {2000},
  author = {Spitzer, C.R. and Spitzer, C.},
  series = {The electrical engineering handbook series},
  isbn = {9781420036879},
  owner = {hilrob},
  timestamp = {2014.09.23}
}

@InProceedings{Srinivasan2004,
  author    = {Srinivasan, J. and Adve, S.V. and Bose, P. and Rivers, J.A.},
  title     = {{T}he impact of technology scaling on lifetime reliability},
  booktitle = {Dependable Systems and Networks, 2004 International Conference on},
  year      = {2004},
  month     = jun,
  pages     = {177--186},
  doi       = {10.1109/DSN.2004.1311888},
  abstract  = {{T}he relentless scaling of {CMOS} technology has provided a steady
	increase in processor performance for the past three decades. {H}owever,
	increased power densities (hence temperatures) and other scaling
	effects have an adverse impact on long-term processor lifetime reliability.
	{T}his paper represents a first attempt at quantifying the impact
	of scaling on lifetime reliability due to intrinsic hard errors,
	taking workload characteristics into consideration. {F}or our quantitative
	evaluation, we use {RAMP} ({S}rinivasan et al., 2004), a previously
	proposed industrial-strength model that provides reliability estimates
	for a workload, but for a given technology. {W}e extend {RAMP} by
	adding scaling specific parameters to enable workload-dependent lifetime
	reliability evaluation at different technologies. {W}e show that
	(1) scaling has a significant impact on processor hard failure rates
	- on average, with {SPEC} benchmarks, we find the failure rate of
	a scaled 65nm processor to be 316% higher than a similarly pipelined
	180nm processor; (2) time-dependent dielectric breakdown and electromigration
	have the largest increases; and (3) with scaling, the difference
	in reliability from running at worst-case vs. typical workload operating
	conditions increases significantly, as does the difference from running
	different workloads. {O}ur results imply that leveraging a single
	microarchitecture design for multiple remaps across a few technology
	generations will become increasingly difficult, and motivate a need
	for workload specific, microarchitectural lifetime reliability awareness
	at an early design stage.},
  file      = {Srinivasan2004.pdf:files\\Srinivasan2004.pdf:PDF},
  groups    = {Reliability & Dependability},
  journal   = {Dependable Systems and Networks, 2004 International Conference on},
  keywords  = {CMOS TECHNOLOGY; RAMP; ELECTROMIGRATION; INDUSTRIAL-STRENGTH MODEL; MICROARCHITECTURAL LIFETIME RELIABILITY; PROCESSOR LIFETIME RELIABILITY; PROCESSOR PERFORMANCE; RELIABILITY ESTIMATION; TECHNOLOGY SCALING; TIME-DEPENDENT DIELECTRIC BREAKDOWN; CMOS INTEGRATED CIRCUITS; BENCHMARK TESTING; INTEGRATED CIRCUIT RELIABILITY; MICROPROCESSOR CHIPS;},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2010.08.25},
}

@BOOK{Stahl2007,
  title = {{M}odellgetriebene {S}oftwareentwicklung - {T}echniken, {E}ngineering,
	{M}anagement},
  publisher = {Dpunkt.verlag Gmbh},
  year = {2007},
  author = {Stahl, Thomas and Völter, Markus and Efftinge, Sven},
  isbn = {3898644480},
  owner = {hilrob},
  timestamp = {2014.04.24}
}

@Article{Stankovic2005,
  author    = {Stankovic, J.A. and Lee, I. and Mok, A. and Rajkumar, R.},
  title     = {{O}pportunities and obligations for physical computing systems},
  journal   = {Computer},
  year      = {2005},
  volume    = {38},
  number    = {11},
  month     = nov,
  pages     = {23--31},
  issn      = {0018-9162},
  doi       = {10.1109/MC.2005.386},
  abstract  = {The recent confluence of embedded and real-time systems with wireless,
	sensor, and networking technologies is creating a nascent infrastructure
	for a technical, economic, and social revolution. Based on the seamless
	integration of computing with the physical world via sensors and
	actuators, this revolution will accrue many benefits. Potentially,
	its impact could be similar to that of the current Internet. We believe
	developers must focus on the physical, real-time, and embedded aspects
	of pervasive computing. We refer to this domain as physical computing
	systems. For pervasive computing to achieve its promise, developers
	must create not only high-level system software and application solutions,
	but also low-level embedded systems solutions. To better understand
	physical computing's advantages, we consider three application areas:
	assisted living, emergency response systems for natural or man-made
	disasters, and protecting critical infrastructures at the national
	level.},
  file      = {Stankovic2005.pdf:files\\Stankovic2005.pdf:PDF},
  groups    = {Cyber-Physical Systems, (RT-) Embedded Systems},
  keywords  = { actuators; assisted living; critical infrastructures; emergency response systems; man-made disasters; natural disasters; networking; physical computing systems; real-time systems; sensors; disasters; emergency services; home automation; real-time systems; security; ubiquitous computing;},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.02.09},
}

@Misc{Steele2009,
  author        = {Steele, Guy},
  title         = {{T}he {F}uture is {P}arallel: {W}hat's a {P}rogrammer to {D}o? {B}reaking {S}equential {H}abits of {T}hought},
  year          = {2009},
  url           = {http://groups.csail.mit.edu/mac/users/gjs/6.945/readings/MITApril2009Steele.pdf},
  annote        = {Eine Pr\"{a}sentation von SUN, die die verschiedenen Aspekte der Parallelen Programmierung behandelt! interessanter high-level Vortrag \"{u}ber die zuk\"{u}nftigen Herausforderungen im parallel-computing},
  file          = {Steele2009.pdf:files\\Steele2009.pdf:PDF},
  groups        = {Misc},
  keywords      = {CHALLENGES,MULTI-CORE,PARALLEL PROGRAMMING},
  mendeley-tags = {CHALLENGES,MULTI-CORE,PARALLEL PROGRAMMING},
  owner         = {hilrob},
  pages         = {1--67},
  publisher     = {SUN Microsystems Laboratories},
  read          = {read},
  timestamp     = {2010.05.27},
}

@InProceedings{Steindl2010,
  author    = {Steindl, M. and Mottok, J. and Meier, H.},
  title     = {{SES}-based framework for fault-tolerant systems},
  booktitle = {Intelligent Solutions in Embedded Systems (WISES), 2010 8th Workshop on},
  year      = {2010},
  pages     = {12--16},
  doi       = {10.1109/WISES.2010.5548427},
  abstract  = {{E}mbedded real-time systems are often used in harsh environments,
	for example engine control systems in automotive vehicles. {I}n such
	{ECU}s ({E}ngine {C}ontrol {U}nit) faults can lead to serious accidents.
	{I}n this paper we propose a safety embedded architecture based on
	coded processing. {T}his framework only needs two channels to provide
	fault tolerance and allows the detection and identification of permanent
	and transient faults. {O}nce a fault is detected by an observer unit
	the {SES} guard makes it visible and initiates a suitable failure
	reaction.},
  file      = {Steindl2010.pdf:files\\Steindl2010.pdf:PDF},
  groups    = {Reliability & Dependability},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2011.11.28},
}

@InProceedings{Stoess2007,
  author    = {Stoess, Jan and Lang, Christian and Bellosa, Frank},
  title     = {{E}nergy management for hypervisor-based virtual machines},
  booktitle = {2007 USENIX Annual Technical Conference on Proceedings of the USENIX Annual Technical Conference},
  year      = {2007},
  publisher = {USENIX Association},
  location  = {Santa Clara, CA},
  isbn      = {999-8888-77-6},
  pages     = {11--114},
  url       = {http://portal.acm.org/citation.cfm?id=1364385.1364386},
  acmid     = {1364386},
  address   = {Berkeley, CA, USA},
  articleno = {1},
  file      = {Stoess2007.pdf:files\\Stoess2007.pdf:PDF},
  groups    = {Energy & Power, Virtualisierung & Partitionierung},
  numpages  = {14},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2011.02.23},
}

@InCollection{Streichert2012,
  author    = {Streichert, Thilo and Traub, Matthias},
  title     = {{G}rundlagen der {E}lektrik/{E}lektronik-{A}rchitekturen},
  booktitle = {Elektrik/Elektronik-Architekturen im Kraftfahrzeug},
  year      = {2012},
  language  = {German},
  series    = {VDI-Buch},
  publisher = {Springer Berlin Heidelberg},
  isbn      = {978-3-642-25477-2},
  pages     = {15--51},
  doi       = {10.1007/978-3-642-25478-9},
  url       = {http://dx.doi.org/10.1007/978-3-642-25478-9_2},
  owner     = {hilrob},
  timestamp = {2014.08.26},
}

@Article{Sutter2005,
  author    = {Herb Sutter},
  title     = {{T}he {F}ree {L}unch {I}s {O}ver: {A} {F}undamental {T}urn {T}oward {C}oncurrency in {S}oftware},
  journal   = {Dr. Dobb's Journal},
  year      = {2005},
  volume    = {30},
  number    = {3},
  pages     = {202--210},
  url       = {http://www.gotw.ca/publications/concurrency-ddj.htm},
  file      = {Sutter2005.pdf:files\\Sutter2005.pdf:PDF},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2011.09.14},
}

@Misc{INCOSE2000,
  author       = {{Systems Engineering Applications Technical Committee (INCOSE)}},
  title        = {{F}ramework for the {A}pplication of {SE} to the {C}ommercial {A}ircraft {D}omain},
  year         = {2000},
  howpublished = {online},
  month        = jul,
  url          = {http://www.incose.org/productspubs/pdf/techdata/SEApps-TC/FrameworkForApplicOfSEToCommercialAircraftDomain.pdf},
  abstract     = {This document is intended to span the gap between Systems Engineering
	Standards which are not industry specific (which include ISO 15288,
	EIA 632, and IEEE 1220), and Commercial Air Transport domain guidelines
	which have generally focused on safety and certification considerations
	(SAE ARP 4754/4761, DO-178B, and the FAR and JAR regulations).},
  file         = {INCOSE2000.pdf:files\\INCOSE2000.pdf:PDF},
  groups       = {Domänen-spezifisch, Systems Engineering},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2013.02.14},
}

@InProceedings{Szeder2009,
  author        = {Szeder, Gábor},
  title         = {{U}nit {T}esting for {M}ulti-{T}hreaded {J}ava {P}rograms},
  booktitle     = {Proceedings of the 7th Workshop on Parallel and Distributed Systems Testing, Analysis, and Debugging - PADTAD '09},
  year          = {2009},
  publisher     = {ACM Press},
  isbn          = {9781605586557},
  pages         = {1--8},
  doi           = {10.1145/1639622.1639626},
  url           = {http://portal.acm.org/citation.cfm?doid=1639622.1639626},
  abstract      = {{U}nit testing focuses on testing the smallest units that comprise
	a software system and allows developers to detect bugs early in the
	development process. {H}owever, unit testing is unsuitable for detecting
	concurrency bugs in multi-threaded programs. {M}ost concurrency bug
	detection tools work only with full programs. {H}ence, they can only
	be used at a later phase of development, thus postponing the detection
	of concurrency bugs. {T}his paper presents a unit testing framework
	for detecting concurrency bugs in multi-threaded {J}ava programs.
	{C}oncurrency bugs are uncovered by applying model checking techniques
	to explore all possible execution paths of concurrent unit tests.
	{W}e have implemented our approach based on the {JU}nit unit testing
	framework and the {J}ava {P}ath{F}inder software model checker. {C}oncurrent
	unit tests can be integrated seamlessly into existing unit test suites.
	{O}ur approach does not report false positives.},
  address       = {New York, New York, USA},
  file          = {Szeder2009.pdf:files\\Szeder2009.pdf:PDF},
  keywords      = {CONCURRENCY,CONCURRENCY BUGS,FRAMEWORK,JAVA,MULTI-CORE,PARALLELIZATION,TESTING,UNIT TESTING},
  mendeley-tags = {CONCURRENCY,CONCURRENCY BUGS,FRAMEWORK,JAVA,MULTI-CORE,PARALLELIZATION,TESTING,UNIT TESTING},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.28},
}

@BOOK{Tanenbaum2007,
  title = {{V}erteilte {S}ysteme - {P}rinzipien und {P}aradigmen},
  publisher = {Pearson Studium},
  year = {2007},
  author = {Tanenbaum, Andrew S. AND Steen, Maarten van},
  address = {München},
  edition = {2. aktualisierte Auflage},
  isbn = {978-3-827-37293-2},
  owner = {hilrob},
  timestamp = {2014.08.29}
}

@Book{Taylor2009,
  author    = {Taylor, Richard N. and Medvidovic, Nenad and Dashofy, Eric},
  title     = {{S}oftware {A}rchitecture: {F}oundations, {T}heory, and {P}ractice},
  year      = {2009},
  publisher = {Wiley},
  abstract  = {Software architecture is foundational to the development of large,
	practical software-intensive applications. This brand-new text covers
	all facets of software architecture and how it serves as the intellectual
	centerpiece of software development and evolution. Critically, this
	text focuses on supporting creation of real implemented systems.
	Hence the text details not only modeling techniques, but design,
	implementation, deployment, and system adaptation -- as well as a
	host of other topics -- putting the elements in context and comparing
	and contrasting them with one another. Rather than focusing on one
	method, notation, tool, or process, this new text/reference widely
	surveys software architecture techniques, enabling the instructor
	and practitioner to choose the right tool for the job at hand. Software
	Architecture is intended for upper-division undergraduate and graduate
	courses in software architecture, software design, component-based
	software engineering, and distributed systems; the text may also
	be used in introductory as well as advanced software engineering
	courses.},
  comment   = {Hardcover: ISBN 978-0-470-16774-8, February 2009, ©2009, Hardcover, 712 pages Ebook: ISBN 978-0-470-47322-1, September 2010, ©2009, E-Book},
  groups    = {Software Deployment},
  keywords  = {architektur, adl},
  month     = feb,
  owner     = {hilrob},
  timestamp = {2013.05.30},
}

@InProceedings{Terzopoulos2013,
  author    = {Terzopoulos, G. and Karatza, H.},
  title     = {{P}ower-aware load balancing in heterogeneous clusters},
  booktitle = {Performance Evaluation of Computer and Telecommunication Systems (SPECTS), 2013 International Symposium on},
  year      = {2013},
  month     = jul,
  pages     = {148--154},
  abstract  = {Minimizing energy consumption of computing systems is a complex problem
	with many parameters. Clusters have been studied from a performance
	perspective and more recently from a power consumption angle. Since
	clusters are usually composed of different hardware with different
	performance and energy consumption, we propose load balancing policies
	that take into account servers' computational power and power consumption.
	These policies are applied on a heterogeneous power-aware DVFS cluster
	running hard real-time CPU intensive tasks. Proposed policies are
	compared to the Earliest Deadline First policy. Simulation results
	show that these policies achieve higher energy savings and less task
	transfers at the same time.},
  file      = {Terzopoulos2013.pdf:files\\Terzopoulos2013.pdf:PDF},
  groups    = {Load Balancing / Clusters},
  keywords  = {energy conservation;power aware computing;real-time systems;resource allocation;workstation clusters;computational power;computing systems;earliest deadline first policy;energy consumption;heterogeneous clusters;heterogeneous power-aware DVFS cluster;load balancing policy;power consumption angle;power-aware load balancing;proposed policy;real-time CPU intensive tasks;task transfers;Energy consumption;Energy efficiency;Load management;Load modeling;Program processors;Quality of service;Real-time systems},
}

@Misc{TheEconomist2011,
  author       = {{The Economist Newspaper Limited}},
  title        = {3{D} printing - {T}he printed world},
  year         = {2011},
  howpublished = {online},
  month        = feb,
  url          = {http://www.economist.com/node/18114221},
  groups       = {Domänen-spezifisch},
  owner        = {hilrob},
  timestamp    = {2013.10.21},
}

@InProceedings{Trivunovic2010,
  author    = {Trivunovic, B. and Popovic, M. and Vrtunski, V.},
  title     = {{A}n {A}pplication {L}evel {P}arallelization of {C}omplex {R}eal-{T}ime {S}oftware},
  booktitle = {Engineering of Computer Based Systems (ECBS), 2010 17th IEEE International Conference and Workshops on},
  year      = {2010},
  month     = mar,
  pages     = {253--257},
  doi       = {10.1109/ECBS.2010.34},
  abstract  = {Modern hardware infrastructure of complex computer based systems is
	based on multiprocessors and/or multi cores. Therefore, application
	software has to be executed in parallel on many processors/cores
	rather than sequentially on a single processor computer. This paper
	contributes to the overall research effort in the area by proposing
	an original approach to application level parallelization of complex
	real time software. In our previous work on parallelization of legacy
	software we have used the Task Tree Executor, a runtime engine for
	parallelization of Distribution Management System application functions.
	In this paper we present another solution, in the form of an architecture,
	which parallelizes a set of Distribution Management System application
	functions, controls their execution, and improves robustness of the
	system. The software architecture presented in this paper is named
	the Calculation Engine. The paper also presents the results of the
	performance evaluation based on a series of experiments made on the
	dual-core symmetric multiprocessor and NUMA machines.},
  file      = {Trivunovic2010.pdf:files\\Trivunovic2010.pdf:PDF},
  groups    = {Parallel Programming Models},
  keywords  = {multiprocessing systems;performance evaluation;software architecture;software maintenance;NUMA machines;application level parallelization;calculation engine;complex computer based systems;complex real-time software;distribution management system application functions;dual-core symmetric multiprocessor;legacy software;performance evaluation;software architecture;task tree executor;Application software;Computer architecture;Concurrent computing;Control systems;Engines;Real time systems;Robust control;Robustness;Scheduling;Software architecture;DMS;complex real-time software;parallelization},
  owner     = {hilrob},
  timestamp = {2014.04.28},
}

@InProceedings{Tutsch2009,
  author    = {Tutsch, Dietmar and Malek, Miroslaw},
  title     = {{C}omparison of network-on-chip topologies for multicore systems considering multicast and local traffic},
  booktitle = {Proceedings of the 2nd International Conference on Simulation Tools and Techniques},
  year      = {2009},
  series    = {Simutools '09},
  publisher = {ICST (Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering)},
  location  = {Rome, Italy},
  isbn      = {978-963-9799-45-5},
  pages     = {231--239},
  doi       = {http://dx.doi.org/10.4108/ICST.SIMUTOOLS2009.5590},
  url       = {http://dx.doi.org/10.4108/ICST.SIMUTOOLS2009.5590},
  acmid     = {1537645},
  address   = {ICST, Brussels, Belgium, Belgium},
  articleno = {23},
  file      = {Tutsch2009.pdf:files\\Tutsch2009.pdf:PDF},
  groups    = {Many-Core, On-Chip Interconnect / NoC},
  keywords  = {multicast, multicore processor, network-on-chip, performance, simulation},
  numpages  = {9},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2010.11.30},
}

@Article{Ulversoy2010,
  author    = {Ulversoy, T.},
  title     = {{S}oftware {D}efined {R}adio: {C}hallenges and {O}pportunities},
  journal   = {Communications Surveys Tutorials, IEEE},
  year      = {2010},
  volume    = {12},
  number    = {4},
  month     = {Fourth},
  pages     = {531--550},
  issn      = {1553-877X},
  doi       = {10.1109/SURV.2010.032910.00019},
  abstract  = {Software Defined Radio (SDR) may provide flexible, upgradeable and
	longer lifetime radio equipment for the military and for civilian
	wireless communications infrastructure. SDR may also provide more
	flexible and possibly cheaper multi-standard-terminals for end users.
	It is also important as a convenient base technology for the future
	context-sensitive, adaptive and learning radio units referred to
	as cognitive radios. SDR also poses many challenges, however, some
	of them causing SDR to evolve slower than otherwise anticipated.
	Transceiver development challenges include size, weight and power
	issues such as the required computing capacity, but also SW architectural
	challenges such as waveform application portability. SDR has demanding
	implications for regulators, security organizations and business
	developers.},
  file      = {Ulversoy2010.pdf:files\\Ulversoy2010.pdf:PDF},
  groups    = {Domänen-spezifisch},
  keywords  = {cognitive radio;software radio;transceivers;SDR;cognitive radios;software defined radio;transceivers;Application software;Cognitive radio;Computer architecture;Context;FCC;Field programmable gate arrays;Military communication;Military equipment;Software radio;Wireless communication;Software defined radio;radio communication equipment;software engineering},
  owner     = {hilrob},
  timestamp = {2014.02.14},
}

@Article{Ungerer2010,
  author    = {Ungerer, Theo},
  title     = {{T}he {M}ulti-{C}ore {C}hallenge},
  journal   = {it - Information Technology},
  year      = {2010},
  volume    = {52},
  pages     = {142--146},
  doi       = {10.1524/itit.2010.0583},
  url       = {http://dx.doi.org/10.1524/itit.2010.0583},
  abstract  = {{M}ulti-cores are the contemporary solution to reach a high performance
	without the need of increasing the clock frequency. {M}ulti-cores
	integrate two or more cores, i. e., processors, on a single die.
	{F}uture multi-cores may comprise hundreds or even thousands of cores
	and arouse challenges for processor design, system architecture,
	programming languages, and application programs.},
  groups    = {Multi-Core Allgemein, Embedded Multi-Core},
  keywords  = {MULTI-CORE; CHALLENGES; OVERVIEW; INTRODUCTION},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2010.08.23},
}

@Book{Utting2007,
  author        = {Utting, Mark and Legeard, Bruno},
  title         = {{P}ractical model-based testing: a tools approach},
  year          = {2007},
  edition       = {1},
  publisher     = {Elsevier},
  isbn          = {0123725011},
  pages         = {456},
  url           = {http://www.elsevier.com/wps/find/bookdescription.cws\_home/709817/description},
  abstract      = {{T}his book gives a practical introduction to model-based testing,
	showing how to write models for testing purposes and how to use model-based
	testing tools to generate test suites. {I}t is aimed at testers and
	software developers who wish to use model-based testing, rather than
	at tool-developers or academics. {T}he book focuses on the mainstream
	practice of functional black-box testing and covers different styles
	of models, especially transition-based models ({UML} state machines)
	and pre/post models ({UML}/{OCL} specifications and {B} notation).
	{T}he steps of applying model-based testing are demonstrated on examples
	and case studies from a variety of software domains, including embedded
	software and information systems. {F}rom this book you will learn:
	* {T}he basic principles and terminology of model-based testing *
	{H}ow model-based testing differs from other testing processes *
	{H}ow model-based testing fits into typical software lifecycles such
	as agile methods and the {U}nified {P}rocess * {T}he benefits and
	limitations of model-based testing, its cost effectiveness and how
	it can reduce time-to-market * {A} step-by-step process for applying
	model-based testing * {H}ow to write good models for model-based
	testing * {H}ow to use a variety of test selection criteria to control
	the tests that are generated from your models * {H}ow model-based
	testing can connect to existing automated test execution platforms
	such as {M}ercury {T}est {D}irector, {J}ava {JU}nit, and proprietary
	test execution environments},
  file          = {Utting2007.pdf:files\\Utting2007.pdf:PDF},
  groups        = {Books},
  keywords      = {BASICS,CASE-STUDY,INTRODUCTION,MODEL-BASED TESTING,OCL,OVERVIEW,STATE MACHINES,TESTING,UML},
  mendeley-tags = {BASICS,CASE-STUDY,INTRODUCTION,MODEL-BASED TESTING,OCL,OVERVIEW,STATE MACHINES,TESTING,UML},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Book{Vajda2011,
  author    = {Vajda, A.},
  title     = {{P}rogramming {M}any-{C}ore {C}hips},
  year      = {2011},
  publisher = {Springer},
  isbn      = {9781441997388},
  abstract  = {{T}his book presents new concepts, techniques and promising programming
	models for designing software for chips with "many" (hundreds to
	thousands) processor cores. {G}iven the scale of parallelism inherent
	to these chips, software designers face new challenges in terms of
	operating systems, middleware and applications. {T}his will serve
	as an invaluable, single-source reference to the state-of-the-art
	in programming many-core chips. {C}overage includes many-core architectures,
	operating systems, middleware, and programming models.},
  groups    = {Books, Betriebssysteme, Many-Core, Parallel Programming Models},
  owner     = {hilrob},
  read      = {reading},
  timestamp = {2011.08.18},
}

@InProceedings{Vajda2010,
  author    = {Vajda, Andr\'{a}s},
  title     = {{F}ollow the data: concurrent execution pattern},
  booktitle = {Proceedings of the 2010 Workshop on Parallel Programming Patterns},
  year      = {2010},
  series    = {ParaPLoP '10},
  publisher = {ACM},
  location  = {Carefree, Arizona},
  isbn      = {978-1-4503-0127-5},
  pages     = {11--15},
  doi       = {http://doi.acm.org/10.1145/1953611.1953612},
  url       = {http://doi.acm.org/10.1145/1953611.1953612},
  abstract  = {{I}n this paper, we describe the "{F}ollow the {D}ata" pattern, which
	provides a method for implementing shared memory semantics in a multi-processor
	or multi-core environment. {I}t relies on locking data down to certain
	cores and move the execution of programs to that core whenever needed,
	as opposed to traditional methods that rely on data copying.},
  acmid     = {1953612},
  address   = {New York, NY, USA},
  articleno = {1},
  file      = {Vajda2010.pdf:files\\Vajda2010.pdf:PDF},
  groups    = {Many-Core, Parallel Programming Models},
  keywords  = {locks and mutual exclusion, middleware, parallel programming, shared memory, transactional memory},
  numpages  = {5},
  owner     = {hilrob},
  read      = {reading},
  timestamp = {2011.08.18},
}

@InProceedings{Vangal2007,
  author    = {Vangal, S. and Howard, J. and Ruhl, G. and Dighe, S. and Wilson, H. and Tschanz, J. and Finan, D. and Iyer, P. and Singh, A. and Jacob, T. and Jain, S. and Venkataraman, S. and Hoskote, Y. and Borkar, N.},
  title     = {{A}n 80-{T}ile 1.28{TFLOPS} {N}etwork-on-{C}hip in 65nm {CMOS}},
  booktitle = {Solid-State Circuits Conference, 2007. ISSCC 2007. Digest of Technical Papers. IEEE International},
  year      = {2007},
  month     = feb,
  pages     = {98--589},
  doi       = {10.1109/ISSCC.2007.373606},
  abstract  = {{A} 275mm2 network-on-chip architecture contains 80 tiles arranged
	as a 10 times 8 2{D} array of floating-point cores and packet-switched
	routers, operating at 4{GH}z. {T}he 15-{F}04 design employs mesochronous
	clocking, fine-grained clock gating, dynamic sleep transistors, and
	body-bias techniques. {T}he 65nm 100{M} transistor die is designed
	to achieve a peak performance of 1.0{TFLOPS} at 1{V} while dissipating
	98{W}.},
  file      = {Vangal2007.pdf:files\\Vangal2007.pdf:PDF},
  groups    = {On-Chip Interconnect / NoC},
  issn      = {0193-6530},
  journal   = {Solid-State Circuits Conference, 2007. ISSCC 2007. Digest of Technical Papers. IEEE International},
  keywords  = {1 V;1.28TFLOPS network-on-chip;100M transistor die;15-F04 design;4 GHz;65 nm;98 W;CMOS integrated circuits;body-bias techniques;dynamic sleep transistors;fine-grained clock gating;floating-point cores;mesochronous clocking;packet-switched routers;CMOS integrated circuits;floating point arithmetic;integrated circuit design;logic design;microprocessor chips;network-on-chip;},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.09.01},
}

@Misc{VectorPreeVision,
  author       = {Vector},
  title        = {{PREEVision 6.5}},
  howpublished = {online},
  url          = {http://vector.com/vi_preevision_en.html},
  groups       = {Tools},
  owner        = {hilrob},
  timestamp    = {2014.04.25},
}

@Misc{VFPareon,
  author    = {VectorFabrics},
  title     = {{P}areon - {I}nstant {M}ulticore {I}nsights},
  year      = {2014},
  month     = jan,
  url       = {http://www.vectorfabrics.com/products},
  groups    = {Tools},
  owner     = {hilrob},
  timestamp = {2014.01.14},
}

@Article{Verdoolaege2007,
  author     = {Verdoolaege, Sven and Nikolov, Hristo and Stefanov, Todor},
  title      = {{P}n: {A} {T}ool for {I}mproved {D}erivation of {P}rocess {N}etworks},
  journal    = {EURASIP J. Embedded Syst.},
  year       = {2007},
  volume     = {2007},
  number     = {1},
  month      = jan,
  pages      = {19--19},
  issn       = {1687-3955},
  doi        = {10.1155/2007/75947},
  url        = {http://dx.doi.org/10.1155/2007/75947},
  acmid      = {1287524},
  address    = {New York, NY, United States},
  file       = {Verdoolaege2007.pdf:files\\Verdoolaege2007.pdf:PDF},
  groups     = {Parallel Programming Models},
  issue_date = {January 2007},
  numpages   = {1},
  owner      = {hilrob},
  publisher  = {Hindawi Publishing Corp.},
  timestamp  = {2014.04.28},
}

@Misc{Verhulst2012,
  author       = {Verhulst, Eric},
  title        = {{H}ard real-time on multicores: shared resources are the challenge},
  year         = {2012},
  howpublished = {online},
  month        = may,
  url          = {http://www.altreonic.com/sites/default/files/Hard%20real%20time%20on%20multicore_0.pdf},
  abstract     = {Altreonic recently completed a first port of its network-centric OpenComRTOS
	to two advanced multicore chips. One is the Single-Chip Cloud Computer
	(SCC), an experimental processor created by Intel Labs, the other
	is the Texas Instruments 8-core floating point DSP. Both chips are
	remarkable pieces of engineering with a potentially very high performance.
	Our measurements however indicate that such complex chips pose serious
	challenges for the real-time developer. The complexity of the shared
	resources requires a substantial runtime support, careful analysis
	and profiling. Moreover, the shared hardware resources increase the
	statistical response of the system. The conclusion is that developers
	are better off with multicore designs that simplify the interfaces
	and avoid shared resources as much as possible. And yes, small code
	size still matters.},
  file         = {Verhulst2012.pdf:files\\Verhulst2012.pdf:PDF},
  groups       = {Betriebssysteme, (RT-) Embedded Systems, Many-Core, Embedded Multi-Core, Formale Methoden, On-Chip Interconnect / NoC},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2012.05.22},
}

@InProceedings{Vito1999,
  author    = {Ben L. Di Vito},
  title     = {{A} {M}odel of {C}ooperative {N}oninterference for {I}ntegrated {M}odular {A}vionics},
  booktitle = {IN DEPENDABLE COMPUTING FOR CRITICAL APPLICATIONS (DCCA-7},
  year      = {1999},
  publisher = {Press},
  pages     = {269--286},
  file      = {DiVito1999.pdf:files\\DiVito1999.pdf:PDF;Vito1999.pdf:files\\Vito1999.pdf:PDF},
  groups    = {Konsolidierung & Integration},
  owner     = {hilrob},
  timestamp = {2014.05.05},
}

@Misc{OMACS4S,
  author       = {Vogel, Torsten and Schüttauf, Andreas},
  title        = {{O}pen {M}odular {A}vionics {A}rchitecture {F}or {S}pace {A}pplications},
  year         = {2014},
  howpublished = {online},
  month        = aug,
  url          = {http://www.sysgo.com/fileadmin/user_upload/PDF/ProductFlyer2_v1-1.pdf},
  file         = {OMACS4S.pdf:files\\OMACS4S.pdf:PDF},
  owner        = {hilrob},
  timestamp    = {2014.08.25},
}

@InProceedings{Voss2013,
  author    = {Voss, S. and Schatz, B.},
  title     = {{D}eployment and {S}cheduling {S}ynthesis for {M}ixed-{C}ritical {S}hared-{M}emory {A}pplications},
  booktitle = {Engineering of Computer Based Systems (ECBS), 2013 20th IEEE International Conference and Workshops on the},
  year      = {2013},
  pages     = {100--109},
  doi       = {10.1109/ECBS.2013.23},
  abstract  = {This paper presents an efficient approach for generating suitable
	system architectures for embedded systems efficiently. Thereby, we
	focus on a joint generation of schedules and deployment for mixed-criticality
	multicore architectures using shared memory. The presented approach
	computes task and message schedules that are optimized with respect
	to a global discrete time base. As part of the solution, our approach
	generates an optimized assignment of tasks to computation resources
	(cores) concerning local memory constraints of cores and criticality
	constraints of tasks.This approach is integrated into the Auto FOCUS3
	tool-chain, using a formally defined model of computation with explicit
	data-flow and discrete-time semantics to develop multi-criticality
	embedded systems. Our approach relies on a symbolic encoding scheme,
	based on a system model that is derived from the system architecture.
	This paper provides a formalization describing the scheduling problem
	as a satisfiability problem using boolean formulas and linear arithmetic
	constraints. A state-of-the-art satisfiability modulo theory (SMT)
	solver is used to compute the joint schedule and deployment for such
	architectures. This paper demonstrates that state-of-the art satisfiability
	modulo theory solvers can be used to efficiently compute (safety-oriented)
	deployments including real-time task and communication schedules
	for mixed-criticality applications.},
  file      = {Voss2013.pdf:files\\Voss2013.pdf:PDF},
  groups    = {Software Deployment},
  keywords  = {Boolean functions;computability;embedded systems;processor scheduling;programming language semantics;shared memory systems;Auto FOCUS3 tool-chain;Boolean formulas;SMT;computation resources;deployment synthesis;discrete-time semantics;explicit data-flow semantics;global discrete time;linear arithmetic constraints;local memory constraints;message schedules;mixed-critical shared-memory applications;mixed-criticality multicore architectures;multicriticality embedded systems;satisfiability modulo theory solver;satisfiability problem;scheduling synthesis;system architecture;system architectures generation;task assignment optimization;task criticality constraints;task schedules;Computational modeling;Multicore processing;Processor scheduling;Resource management;Schedules;Scheduling;Deployment Synthesis;Mapping;SMT;Scheduling;Shared-Memory Applications},
  owner     = {hilrob},
  timestamp = {2014.01.14},
}

@InProceedings{Wahbe1993,
  author    = {Wahbe, Robert and Lucco, Steven and Anderson, Thomas E. and Graham, Susan L.},
  title     = {{E}fficient software-based fault isolation},
  booktitle = {SOSP '93: Proceedings of the fourteenth ACM symposium on Operating systems principles},
  year      = {1993},
  publisher = {ACM},
  location  = {Asheville, North Carolina, United States},
  isbn      = {0-89791-632-8},
  pages     = {203--216},
  doi       = {http://doi.acm.org/10.1145/168619.168635},
  address   = {New York, NY, USA},
  file      = {Wahbe1993.pdf:files\\Wahbe1993.pdf:PDF},
  groups    = {Virtualisierung & Partitionierung},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.07.23},
}

@Misc{Wahlster2008,
  author      = {Wahlster, Wolfgang and Raffler, Hartmut},
  title       = {{F}orschen für die {I}nternet-{G}esellschaft: {T}rends, {T}echnologien, {A}nwendungen: {T}rends und {H}andlungsempfehlungen 2008 des {F}eldafinger {K}reises},
  year        = {2008},
  type        = {Studie},
  url         = {http://www.feldafinger-kreis.de/Feldafinger-Kreis_Studie_2008.pdf},
  file        = {Wahlster2008.pdf:files\\Wahlster2008.pdf:PDF},
  groups      = {Cyber-Physical Systems, (RT-) Embedded Systems},
  institution = {Feldafinger Kreis},
  owner       = {hilrob},
  read        = {done},
  timestamp   = {2012.02.16},
}

@InProceedings{Wang2009,
  author    = {Zhonglei Wang and Herkersdorf, A. and Haberl, W. and Wechs, M.},
  title     = {{S}ys{COLA}: {A} framework for co-development of automotive software and system platform},
  booktitle = {Design Automation Conference, 2009. DAC '09. 46th ACM/IEEE},
  year      = {2009},
  pages     = {37--42},
  abstract  = {A modeling language with formal semantics is able to capture a system's
	functionality unambiguously, without concerning implementation details.
	Such a formal language is well-suited for a design process that employs
	formal techniques and supports hardware/software synthesis. On the
	other hand, SystemC is a widely used system level design language
	with hardware-oriented modeling features. It provides a desirable
	simulation framework for system architecture design and exploration.
	This paper presents a design framework, called SysCOLA, that makes
	use of the unique advantages of both a new formal modeling language,
	COLA, and SystemC, and allows for parallel development of application
	software and system platform. In SysCOLA, function design and architecture
	exploration are done in the COLA based modeling environment and the
	SystemC based virtual prototyping environment, respectively. Our
	concepts of abstract platform and virtual platform abstraction layer
	facilitate the orthogonalization of functionality and architecture
	by means of mapping and integration in the respective environments.
	As SysCOLA is targeted at the automotive domain, the whole design
	approach is showcased using a case study of designing an automotive
	system.},
  file      = {Wang2009.pdf:files\\Wang2009.pdf:PDF},
  groups    = {Software Deployment, Tools},
  issn      = {0738-100X},
  keywords  = {automotive engineering;formal specification;hardware-software codesign;software architecture;software prototyping;specification languages;traffic engineering computing;virtual prototyping;SysCOLA;SystemC;application software;automotive software development;formal language;formal semantics;formal techniques;hardware-oriented modeling;hardware-software synthesis;modeling language;parallel development;system architecture design;system architecture exploration;system functionality;system level design language;system platform development;virtual platform abstraction layer;virtual prototyping;Application software;Automotive engineering;Computer architecture;Embedded system;Hardware;Modeling;Permission;Process design;Software systems;Virtual prototyping;COLA;System modeling;SystemC;Virtual prototyping},
  owner     = {hilrob},
  timestamp = {2014.01.13},
}

@InProceedings{Watkins2007,
  author    = {Watkins, C.B. and Walter, R.},
  title     = {{T}ransitioning from federated avionics architectures to {I}ntegrated {M}odular {A}vionics},
  booktitle = {Digital Avionics Systems Conference, 2007. DASC '07. IEEE/AIAA 26th},
  year      = {2007},
  pages     = {2.A.1-1-2.A.1-10},
  doi       = {10.1109/DASC.2007.4391842},
  abstract  = {This paper identifies considerations for transitioning from a federated
	avionics architecture to an integrated modular avionics (IMA) architecture.
	Federated avionics architectures make use of distributed avionics
	functions that are packaged as self-contained units (LRUs and LRMs).
	IMA architectures employ a high-integrity, partitioned environment
	that hosts multiple avionics functions of different criticalities
	on a shared computing platform. This provides for weight and power
	savings since computing resources can be used more efficiently. This
	paper establishes the benefits of transitioning to IMA. To aid in
	the planning process, the paper also identifies factors to consider
	before transitioning to IMA. The approach to resource management
	(computing, communication, and I/O) is identified as the fundamental
	architectural difference between federated and IMA systems. The paper
	describes how this difference changes the development process and
	benefits the systems integrator. This paper also addresses misconceptions
	about the resource management mechanisms that can occur during a
	transition to IMA and concludes that resources are not inherently
	constrained by IMA architectures. Guidance is provided for transitioning
	to both "open" and "closed" IMA architectures. Open IMA architectures
	utilize open interface standards that are available in the public
	domain. Closed IMA architectures utilize proprietary interfaces that
	can be customized. The analysis of these avionics architectures is
	based upon the authors' experience in developing platform computing
	systems at GE Aviation. GE Aviation has developed open system IMA
	architectures for commercial aircraft (Boeing 787 Dreamliner), as
	well as military aircraft (Boeing C-130 combat aircraft, and Boeing
	KC-767 Tanker).},
  groups    = {Domänen-spezifisch},
  keywords  = {aerospace industry;avionics;Boeing 787 Dreamliner;Boeing C-130 combat aircraft;Boeing KC-767 Tanker;GE Aviation;closed IMA architectures;distributed avionics functions;federated avionics architectures;fundamental architectural difference;integrated modular avionics;open IMA architectures;platform computing systems;resource management;self-contained units;shared computing platform;systems integrator;Aerospace electronics;Communication channels;Communication system control;Computer architecture;Military aircraft;Packaging;Power system planning;Process planning;Resource management;User interfaces},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2010.02.05},
}

@Article{Weidner2013,
  author    = {Weidner, Thomas and Stüker, Dirk and Wender, Stefan and Katzwinkel, Reiner},
  title     = {{S}kalierbare {E}/{E}-{A}rchitekturen für {F}ahrerassistenzfunktionen},
  journal   = {ATZelektronik},
  year      = {2013},
  language  = {German},
  volume    = {8},
  number    = {6},
  pages     = {428--433},
  issn      = {1862--1791},
  doi       = {10.1365/s35658-013-0361-9},
  url       = {http://dx.doi.org/10.1365/s35658-013-0361-9},
  owner     = {hilrob},
  publisher = {Springer Automotive Media},
  timestamp = {2014.10.14},
}

@Book{Weilkiens2006,
  author        = {Weilkiens, Tim},
  title         = {{S}ystems engineering mit {S}ys{ML}/{UML}: {M}odellierung, {A}nalyse, {D}esign},
  year          = {2006},
  edition       = {1},
  publisher     = {Dpunkt Verlag},
  isbn          = {3-89864-409-X},
  pages         = {1--360},
  url           = {http://www.amazon.de/gp/product/3898645770},
  abstract      = {{D}ie {S}oftwareentwicklung steht zunehmend vor der {A}ufgabe, die
	{K}omplexit\"{a}t von {S}ystemen, in denen immer mehr {S}oftwarebausteine
	enthalten sind, beherrschbar zu machen. {H}ierf\"{u}r wird eine neue
	{G}eneration von {E}ntwicklungswerkzeugen eingesetzt. {D}as {B}uch
	f\"{u}hrt in die {M}ethoden des {S}ystems {E}ngineering ein, die
	losgel\"{o}st sind von konkreten {D}isziplinen wie z.{B}. {S}oftware-
	oder {H}ardwareentwicklung. {A}nhand eines {F}allbeispiels wird aufgezeigt,
	wie ein komplexes, heterogenes {S}ystem ganzheitlich beschrieben
	und modelliert wird. {D}ie hierbei verwendete {S}ystems {M}odeling
	{L}anguage ({S}ys{ML}), die auf der {UML} basiert, wird im {D}etail
	erl\"{a}utert. {D}abei werden die {G}renzen zur {UML} klar herausgestellt,
	so dass die {M}odellierung auch mit der {UML} durchgef\"{u}hrt werden
	kann. {I}m {A}nhang: das {V}orgehensmodell im \"{U}berblick, eine
	\"{U}bersetzung der englischen {B}egriffe und ein {G}lossar. {A}lle
	{I}nformationen stammen aus erster {H}and. {D}er {A}utor ist {K}oautor
	der {S}ys{ML}-{S}pezifikation und arbeitet an der {UML}-{S}pezifikation
	mit.},
  address       = {Heidelberg},
  groups        = {Books},
  keywords      = {MODEL,MODEL-BASED,MODEL-BASED DESIGN,MODELING,SYSML,UML},
  mendeley-tags = {MODEL,MODEL-BASED,MODEL-BASED DESIGN,MODELING,SYSML,UML},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Article{Welch2000,
  author    = {Welch, LonnieR. and Werme, PaulV. and Shirazi, BehroozA. and Cavanaugh, CharlesD. and Fontenot, Larry and Huh, Eui-Nam and Masters, MichaelW.},
  title     = {{L}oad balancing for dynamic real-time systems},
  journal   = {Cluster Computing},
  year      = {2000},
  language  = {English},
  volume    = {3},
  number    = {2},
  pages     = {125--138},
  issn      = {1386-7857},
  doi       = {10.1023/A:1019028120001},
  url       = {http://dx.doi.org/10.1023/A%3A1019028120001},
  file      = {Welch2000.pdf:files\\Welch2000.pdf:PDF},
  groups    = {Load Balancing / Clusters},
  owner     = {hilrob},
  publisher = {Kluwer Academic Publishers},
  timestamp = {2014.05.19},
}

@Article{Wentzlaff2007,
  author        = {Wentzlaff, David and Griffin, Patrick and Hoffmann, Henry and Bao, Liewei and Edwards, Bruce and Ramey, Carl and Mattina, Matthew and Miao, Chyi-chang and {Brown III}, John F. and Agarwal, Anant},
  title         = {{O}n-{C}hip {I}nterconnection {A}rchitecture of the {T}ile {P}rocessor},
  journal       = {IEEE Micro},
  year          = {2007},
  volume        = {27},
  number        = {5},
  pages         = {15--31},
  issn          = {0272-1732},
  doi           = {10.1109/MM.2007.4378780},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4378780},
  abstract      = {{IM}esh, the tile processor architecture's on-chip interconnection
	network, connects the multicore processor's tiles with five 2{D}
	mesh networks, each specialized for a different use. taking advantage
	of the five networks, the {C}-based {ILIB} interconnection library
	efficiently maps program communication across the on-chip interconnect.
	the tile processor's first implementation, the tile64, contains 64
	cores and can execute 192 billion 32-bit operations per second at
	1 {G}hz.},
  annote        = {- Beschreibt sehr gut den Hardware-Aufbau des Tile64 Prozessors - Geht auf die iLib zum Programmieren ein - Beschreibt Applikationen, die als Benchmarks f\"{u}r das NoC dienen k\"{o}nnen},
  file          = {Wentzlaff2007.pdf:files\\Wentzlaff2007.pdf:PDF},
  keywords      = {CONCEPT,ILIB,IMESH,MULTI-CORE,NOC,ON-CHIP-INTERCONNECT,TILE64,TILERA},
  mendeley-tags = {CONCEPT,ILIB,IMESH,MULTI-CORE,NOC,ON-CHIP-INTERCONNECT,TILE64,TILERA},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Article{White2011,
  author    = {Jules White and Brian Dougherty and Chris Thompson and Douglas C. Schmidt},
  title     = {{S}catter{D}: {S}patial deployment optimization with hybrid heuristic/evolutionary algorithms},
  journal   = {TAAS},
  year      = {2011},
  volume    = {6},
  number    = {3},
  pages     = {18},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  ee        = {http://doi.acm.org/10.1145/2019583.2019585},
  file      = {White2011.pdf:files\\White2011.pdf:PDF},
  groups    = {Software Deployment},
  owner     = {hilrob},
  timestamp = {2014.01.13},
}

@InProceedings{White2010,
  author    = {White, Jules and Schmidt, Douglas C.},
  title     = {{R}\&\#38;{D} {C}hallenges and {E}merging {S}olutions for {M}ulticore {D}eployment/{C}onfiguration {O}ptimization},
  booktitle = {Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research},
  year      = {2010},
  series    = {FoSER '10},
  publisher = {ACM},
  location  = {Santa Fe, New Mexico, USA},
  isbn      = {978-1-4503-0427-6},
  pages     = {407--410},
  doi       = {10.1145/1882362.1882445},
  url       = {http://doi.acm.org/10.1145/1882362.1882445},
  acmid     = {1882445},
  address   = {New York, NY, USA},
  file      = {White2010.pdf:files\\White2010.pdf:PDF},
  groups    = {Software Deployment},
  keywords  = {deployment optimization, multicore processors},
  numpages  = {4},
  owner     = {hilrob},
  timestamp = {2014.01.13},
}

@Book{Wiener1973,
  author    = {Wiener, N.},
  title     = {{C}ybernetics: or control and communication in the animal and the machine...},
  year      = {1973},
  publisher = {M.I.T. press},
  isbn      = {9780262730099},
  groups    = {Books, Cyber-Physical Systems},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2012.02.13},
}

@InProceedings{Wilding1999,
  author    = {Wilding, Matthew M. and Hardin, David S. and Greve, David A.},
  title     = {{I}nvariant {P}erformance: {A} {S}tatement of {T}ask {I}solation {U}seful for {E}mbedded {A}pplication {I}ntegration},
  booktitle = {Proceedings of the conference on Dependable Computing for Critical Applications},
  year      = {1999},
  series    = {DCCA '99},
  publisher = {IEEE Computer Society},
  isbn      = {0-7695-0284-9},
  pages     = {287--},
  url       = {http://dl.acm.org/citation.cfm?id=555298.789914},
  abstract  = {We describe the challenge of embedded application integration and
	argue that the conventional formal verification approach of proving
	abstract behavior is not useful in this domain. We introduce invariant
	performance, a formulation of task isolation useful for application
	integration. We demonstrate invariant performance by formalizing
	it in the logic of PVS for a simple yet realistic embedded system.},
  acmid     = {789914},
  address   = {Washington, DC, USA},
  file      = {Wilding1999.pdf:files\\Wilding1999.pdf:PDF},
  groups    = {Konsolidierung & Integration, Formale Methoden, Virtualisierung & Partitionierung},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2012.01.16},
}

@Article{Wilhelm2008,
  author    = {Wilhelm, Reinhard and Engblom, Jakob and Ermedahl, Andreas and Holsti, Niklas and Thesing, Stephan and Whalley, David and Bernat, Guillem and Ferdinand, Christian and Heckmann, Reinhold and Mitra, Tulika and Mueller, Frank and Puaut, Isabelle and Puschner, Peter and Staschulat, Jan and Stenstr\"{o}m, Per},
  title     = {{T}he worst-case execution-time problem - overview of methods and survey of tools},
  journal   = {ACM Trans. Embed. Comput. Syst.},
  year      = {2008},
  volume    = {7},
  issue     = {3},
  month     = may,
  pages     = {361--3653},
  issn      = {1539-9087},
  doi       = {http://doi.acm.org/10.1145/1347375.1347389},
  url       = {http://doi.acm.org/10.1145/1347375.1347389},
  acmid     = {1347389},
  address   = {New York, NY, USA},
  articleno = {36},
  file      = {Wilhelm2008.pdf:files\\Wilhelm2008.pdf:PDF},
  groups    = {WCET},
  keywords  = {Hard real time, worst-case execution times},
  numpages  = {53},
  owner     = {hilrob},
  publisher = {ACM},
  read      = {unread},
  timestamp = {2012.02.21},
}

@Article{Wilhelm2009,
  author        = {Wilhelm, Reinhard and Grund, Daniel and Reineke, Jan and Schlickling, Marc and Pister, Markus and Ferdinand, Christian},
  title         = {{M}emory {H}ierarchies, {P}ipelines, and {B}uses for {F}uture {A}rchitectures in {T}ime-{C}ritical {E}mbedded {S}ystems},
  journal       = {IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
  year          = {2009},
  volume        = {28},
  number        = {7},
  month         = jul,
  pages         = {966--978},
  issn          = {0278-0070},
  doi           = {10.1109/TCAD.2009.2013287},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5075820},
  abstract      = {{E}mbedded hard real-time systems need reliable guarantees for the
	satisfaction of their timing constraints. {E}xperience with the use
	of static timing-analysis methods and the tools based on them in
	the automotive and the aeronautics industries is positive. {H}owever,
	both the precision of the results and the efficiency of the analysis
	methods are highly dependent on the predictability of the execution
	platform. {I}n fact, the architecture determines whether a static
	timing analysis is practically feasible at all and whether the most
	precise obtainable results are precise enough. {R}esults contained
	in this paper also show that measurement-based methods still used
	in industry are not useful for quite commonly used complex processors.
	{T}his dependence on the architectural development is of growing
	concern to the developers of timing-analysis tools and their customers,
	the developers in industry. {T}he problem reaches a new level of
	severity with the advent of multicore architectures in the embedded
	domain. {T}his paper describes the architectural influence on static
	timing analysis and gives recommendations as to profitable and unacceptable
	architectural features.},
  annote        = {- Welche Auswirkungen hat die Hardware Architekture auf die Anwendbarkeit von Timing Analyse Tools f\"{u}r Echtzeit-Systeme},
  file          = {Wilhelm2009.pdf:files\\Wilhelm2009.pdf:PDF},
  keywords      = {AUTOMOTIVE,AVIONICS,MULTI-CORE,PREDICTABILIY,REAL-TIME-SYSTEMS,RECOMMENDATIONS,STATIC TIMING ANALYSIS},
  mendeley-tags = {AUTOMOTIVE,AVIONICS,MULTI-CORE,PREDICTABILIY,REAL-TIME-SYSTEMS,RECOMMENDATIONS,STATIC TIMING ANALYSIS},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.28},
}

@Misc{Wilkinson1998,
  author    = {Wilkinson, P.J. and Kelly, T.P.},
  title     = {{F}unctional hazard analysis for highly integrated aerospace systems},
  year      = {1998},
  doi       = {10.1049/ic:19980312},
  url       = {http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=678204},
  booktitle = {Certification of Ground/Air Systems Seminar (Ref. No. 1998/255), IEE},
  file      = {Wilkinson1998.pdf:files\\Wilkinson1998.pdf:PDF},
  groups    = {Domänen-spezifisch, Safety-Critical Systems},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2013.03.13},
}

@Book{Williamson2011,
  author    = {Williamson, D.P. and Shmoys, D.B.},
  title     = {{T}he {D}esign of {A}pproximation {A}lgorithms},
  year      = {2011},
  publisher = {Cambridge University Press},
  isbn      = {9780521195270},
  url       = {http://www.designofapproxalgs.com/index.php},
  abstract  = {Interesting discrete optimization problems are everywhere, from traditional
	operations research planning problems, such as scheduling, facility
	location, and network design, to computer science problems in databases,
	to advertising issues in viral marketing. Yet most interesting discrete
	optimization problems are NP-hard. Thus unless P = NP, there are
	no efficient algorithms to find optimal solutions to such problems.
	This book shows how to design approximation algorithms: efficient
	algorithms that find provably near-optimal solutions.
	
	
	The book is organized around several central algorithmic techniques
	for designing approximation algorithms, including greedy and local
	search algorithms, dynamic programming, linear and semidefinite programming,
	and randomization. Each chapter in the first part of the book is
	devoted to a single algorithmic technique, which is then applied
	to several different problems. The second part revisits the techniques,
	but offers more sophisticated treatments of them. The book also covers
	methods for proving that optimization problems are hard to approximate.
	
	
	Designed as a textbook for graduate-level algorithms courses, the
	book will also serve as a reference for researchers who are interested
	in the heuristic solution of discrete optimization problems.},
  file      = {Williamson2011.pdf:files\\Williamson2011.pdf:PDF},
  groups    = {Books, Methodik},
  lccn      = {2011001945},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2012.05.04},
}

@InProceedings{Windsor2009,
  author    = {Windsor, James and Hjortnaes, K.},
  title     = {{T}ime and {S}pace {P}artitioning in {S}pacecraft {A}vionics},
  booktitle = {Space Mission Challenges for Information Technology, 2009. SMC-IT 2009. Third IEEE International Conference on},
  year      = {2009},
  pages     = {13--20},
  doi       = {10.1109/SMC-IT.2009.11},
  abstract  = {This paper will describe the benefits of incorporating software time
	and space partitioning (TSP), based upon the aeronautic IMA concept,
	into the spacecraft avionics architecture to manage the growth of
	mission functions implemented in the on-board software. The paper
	addresses how TSP can be used to safely integrate applications of
	different criticality and security classifications, and how incremental
	validation is supported to control the impact of software modifications
	to the system.},
  file      = {Windsor2009.pdf:files\\Windsor2009.pdf:PDF},
  groups    = {Domänen-spezifisch, (RT-) Embedded Systems, Konsolidierung & Integration, (RT-) Scheduling, Virtualisierung & Partitionierung},
  keywords  = {avionics;space vehicles;on-board software;security classification;software modification;software time and space partitioning;spacecraft avionics architecture;Aerospace electronics;Aerospace industry;Application software;Computer architecture;Hardware;Robustness;Software systems;Space missions;Space technology;Space vehicles;avionics;incremental validation;secure embedded software;time and space partitioning},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2013.04.18},
}

@InProceedings{Wolf2006,
  author    = {Armin Wolf},
  title     = {{O}bject-{O}riented {C}onstraint {P}rogramming in {J}ava {U}sing the {L}ibrary firstcs},
  booktitle = {WLP},
  year      = {2006},
  pages     = {21--32},
  abstract  = {This tutorial shows how to use the object-oriented Java constraint
	programming library firstcs to solve constraint problems. Beyond
	the architecture of the system and the supported constraints, this
	presentation focuses on the implementation of new constraints, the
	modeling of problems and their solutions using constraint propagation
	and search. The presentation is completed a practical application
	realized with this constraint library.},
  ee        = {http://www.kr.tuwien.ac.at/wlp06/T01-final.ps.gz},
  file      = {Wolf2006.pdf:files\\Wolf2006.pdf:PDF},
  groups    = {Tools},
  keywords  = {firstCS;Constraint Programming;},
  owner     = {hilrob},
  timestamp = {2013.09.02},
}

@Book{Wolf2005,
  author        = {Wolf, Wayne and Jerraya, Ahmed Amine},
  title         = {{M}ultiprocessor {S}ystems-on-{C}hips},
  year          = {2005},
  series        = {Systems on Silicon},
  publisher     = {Elsevier},
  isbn          = {012385251X},
  pages         = {581},
  url           = {http://books.google.de/books?id=7i9Z69lrYBoC\&pg=PP1\&dq=Multiprocessor+Systems-on-Chips+Jerraya\&cd=1\#v=onepage\&q\&f=false},
  abstract      = {{M}odern system-on-chip ({S}o{C}) design shows a clear trend toward
	integration of multiple processor cores on a single chip. {D}esigning
	a multiprocessor system-on-chip ({MPSOC}) requires an understanding
	of the various design styles and techniques used in the multiprocessor.
	{U}nderstanding the application area of the {MPSOC} is also critical
	to making proper tradeoffs and design decisions. {M}ultiprocessor
	{S}ystems-on-{C}hips covers both design techniques and applications
	for {MPSOC}s. {D}esign topics include multiprocessor architectures,
	processors, operating systems, compilers, methodologies, and synthesis
	algorithms, and application areas covered include telecommunications
	and multimedia. {T}he majority of the chapters were collected from
	presentations made at the {I}nternational {W}orkshop on {A}pplication-{S}pecific
	{M}ulti-{P}rocessor {S}o{C} held over the past two years. {T}he workshop
	assembled internationally recognized speakers on the range of topics
	relevant to {MPSOC}s. {A}fter having refined their material at the
	workshop, the speakers are now writing chapters and the editors are
	fashioning them into a unified book by making connections between
	chapters and developing common terminology. *{E}xamines several different
	architectures and the constraints imposed on them *{D}iscusses scheduling,
	real-time operating systems, and compilers *{A}nalyzes design trade-off
	and decisions in telecommunications and multimedia applications},
  file          = {Wolf2005.pdf:files\\Wolf2005.pdf:PDF},
  groups        = {Books},
  keywords      = {BASICS,INTRODUCTION,MPSOC,MULTI-CORE,OPERATING SYSTEMS,OVERVIEW,PROCESSOR ARCHITECTURES,REAL-TIME-SYSTEMS,SCHEDULING,SOC},
  mendeley-tags = {BASICS,INTRODUCTION,MPSOC,MULTI-CORE,OPERATING SYSTEMS,OVERVIEW,PROCESSOR ARCHITECTURES,REAL-TIME-SYSTEMS,SCHEDULING,SOC},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.27},
}

@Article{Wolf2008,
  author        = {Wolf, W. and Jerraya, A. and Martin, G.},
  title         = {{M}ultiprocessor {S}ystem-on-{C}hip ({MPS}o{C}) {T}echnology},
  journal       = {IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
  year          = {2008},
  volume        = {27},
  number        = {10},
  month         = oct,
  pages         = {1701--1713},
  issn          = {0278-0070},
  doi           = {10.1109/TCAD.2008.923415},
  url           = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4627532},
  abstract      = {{T}he multiprocessor system-on-chip ({MPS}o{C}) uses multiple {CPU}s
	along with other hardware subsystems to implement a system. {A} wide
	range of {MPS}o{C} architectures have been developed over the past
	decade. {T}his paper surveys the history of {MPS}o{C}s to argue that
	they represent an important and distinct category of computer architecture.
	{W}e consider some of the technological trends that have driven the
	design of {MPS}o{C}s. {W}e also survey computer-aided design problems
	relevant to the design of {MPS}o{C}s.},
  annote        = {Page 1: - An MPSoC is a system-on-chip that uses multiple programmable processors as system components. - "We hope to show more decisively that MPSoCs form a unique area of multiprocessor design that is distinct from multicore processors for some very sound technical reasons." - MPSoC have been designed to fulfill the needs and requirements of embedded applications - MPSoC have been in production much longer than Multi-Core processors - MPSoC form two branches: heterogeneous and homogeneous MPSoC Page 2: - Important application domains for multi-core processors are: \# - parallel signal processing [daytona chip], - network paket processing [C5 processor], - multimedia processing [nexperia] - cell phone processor [TI OMAP architecture] Page 4: - the first general-purpose multi-core processors were introduces in 2005 (Intel Core Duo processor) - Compared to MPSoC, their history is shorter - They argue that heterogeneous and homogeneous MPSoC are distinct from multi-core systems designed for general purpose computing, because: - they feature fairly independent hardware units and - provide fairly independent programming models Page 5: - "Nature of computations in an MPSoC" may encompass: - type of operations - memory bandwidth - access patterns - activity profiles - Standards are often a reason for an MPSoC, because a standard provides large markets which in turn justifies the costs for the MPSoC production Page 7: - The "homogeneous architectural style" is mostly used for data-parallel applications - "heterogeneous architectures" are used for heterogeneous applications with complex block diagrams, often using a producer-consumer pattern Page 9: - High-Level view on NoC - "using the globally asynchronous locally synchronous paradigm" - mentions "scratch-pad" memory as an alternative to address-mapped caches - Quelle: R. P. Dick and N. K. Jha, "MOGAC: A multiobjective genetic algorithm for hardware - software cosynthesis of distributed embedded systems," IEEE Trans. Comput. - Aided Design Integr. Circuits Syst., vol. 17, no. 10, pp. 920-935, Oct. 1998.},
  file          = {Wolf2008.pdf:files\\Wolf2008.pdf:PDF},
  keywords      = {MPSOC,MULTI-CORE,SOC,SURVEY},
  mendeley-tags = {MPSOC,MULTI-CORE,SOC,SURVEY},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Book{Worn2005,
  author        = {Wörn, Heinz and Brinkschulte, Uwe},
  title         = {{E}chtzeitsysteme},
  year          = {2005},
  series        = {eXamen.press Series},
  publisher     = {Springer},
  isbn          = {3540205888},
  pages         = {556},
  url           = {http://scholar.google.com/scholar?hl=en\&btnG=Search\&q=intitle:Echtzeitsysteme\#3},
  abstract      = {{D}as vorliegende {W}erk vermittelt ein solides {F}undament zum {V}erst\"{a}ndnis
	der wesentlichen {P}rinzipien, {F}unktionsweisen und {A}rchitekturen
	von {E}chtzeitsystemen. {D}abei werden zun\"{a}chst die {G}rundlagen
	der {A}utomation von technischen {P}rozessen mithilfe der {S}teuerungs-
	und {R}egelungstechnik behandelt. {A}nschlie\ss end werden elementare
	{H}ardware- und {S}oftware-{A}rchitekturen sowie {K}ommunikationsmechanismen
	f\"{u}r {E}chtzeitsysteme beschrieben und {M}ethoden der {E}chtzeitprogrammierung,
	der {E}chtzeitbetriebssysteme sowie der {E}chtzeit-{M}iddleware fundiert
	dargestellt. {A}bgeschlossen wird das {B}uch durch {A}nwendungsbeispiele
	von {E}chtzeitsystemen aus der {F}abrikautomation, wie z. {B}. speicherprogrammierbare
	{S}teuerungen oder {R}oboter- und {W}erkzeugmaschinensteuerungen.
	{D}ieses {L}ehrbuch richtet sich an {S}tudierende der {I}nformatik,
	{E}lektrotechnik, {R}egelungstechnik und des {M}aschinenbaus im fortgeschrittenen
	{G}rundstudium und ist in gleicher {W}eise f\"{u}r in der {P}raxis
	stehende {E}ntwickler in diesen {F}achgebieten geeignet. {TOC}:{G}rundlagen.-
	{R}echner-{A}rchitekturen f\"{u}r {E}chtzeitsysteme.- {M}ikrocontroller.-
	{S}ignalprozessoren.- {P}arallelbusse.- {PCI}-{B}us.- {VME}-{B}us.-
	{S}chnittstellen.- {R}echner f\"{u}r die {P}rozessautomation.- {A}nalogtechnik
	und {W}andlung.- {O}perationsverst\"{a}rker.- {D}atenwandler.- {P}egelwandler.-
	{K}ommunikatin in {E}chtzeitsystemen.- {T}opologien.- {Z}ugriffsverfahren.-
	{K}odierungen.- {F}eldbusse.- {P}rofi{B}us.- {CANB}us.- {I}nter{B}us-{S}.-
	{ASI}.- {E}thernet und {E}chtzeit.- {E}chtzeitprogrammierung.- {A}blaufsteuerung.-
	{E}chtzeitbetriebssysteme.- {S}chichtenmodelle.- {T}askverwaltung.-
	{S}peicherverwaltung.- {E}in-/{A}usgabeverwaltung.- {QNX}.- {P}osix.4.-
	{RTL}inux.- {V}x{W}orks.- {E}chtzeit-{M}iddleware.- {RT}-{CORBA}.-
	{OSA}+.- {S}peicher-programmierbare {S}teuerungen.- {E}chtzeitsysteme
	in der {W}erkzeugmaschinensteuerung.- {E}chtzeitsysteme in der {R}obotersteuerung.},
  file          = {Worn2005.pdf:files\\Worn2005.pdf:PDF},
  groups        = {Books},
  keywords      = {INTRODUCTION,OVERVIEW,REAL-TIME-SYSTEMS},
  mendeley-tags = {INTRODUCTION,OVERVIEW,REAL-TIME-SYSTEMS},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@InProceedings{Wronski2006,
  author    = {Fabio Wronski and Eduardo Wenzel Brião and Flávio Rech Wagner},
  title     = {{E}valuating {E}nergy-{A}ware {T}ask {A}llocation {S}trategies for {MPSOCS}},
  booktitle = {DIPES},
  year      = {2006},
  editor    = {Bernd Kleinjohann and Lisa Kleinjohann and Ricardo Jorge Machado and Carlos Eduardo Pereira and P. S. Thiagarajan},
  volume    = {225},
  series    = {IFIP},
  publisher = {Springer},
  isbn      = {978-0-387-39361-2},
  pages     = {215--224},
  doi       = {10.1007/978-0-387-39362-9},
  url       = {http://www.springerlink.com/content/u51677pvh20677qm/},
  ee        = {http://dx.doi.org/10.1007/978-0-387-39362-9_23},
  file      = {Wronski2006.pdf:files\\Wronski2006.pdf:PDF},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.06.09},
}

@Book{Yaghmour2008,
  author        = {Yaghmour, Karim and Masters, Jonathan and Ben, Gilad},
  title         = {{B}uilding {E}mbedded {L}inux {S}ystems},
  year          = {2008},
  edition       = {2},
  series        = {O'Reilly Series},
  publisher     = {O'Reilly Media, Inc.},
  isbn          = {0596529686},
  pages         = {439},
  url           = {http://books.google.de/books?id=I-hVqkX6A9cC\&dq=Yaghmour+Embedded+Linux\&source=gbs\_navlinks\_s},
  abstract      = {{T}here's a great deal of excitement surrounding the use of {L}inux
	in embedded systems -- for everything from cell phones to car {ABS}
	systems and water-filtration plants -- but not a lot of practical
	information. "{B}uilding {E}mbedded {L}inux {S}ystems" offers an
	in-depth, hard-core guide to putting together embedded systems based
	on {L}inux. {U}pdated for the latest version of the {L}inux kernel,
	this new edition gives you the basics of building embedded {L}inux
	systems, along with the configuration, setup, and use of more than
	40 different open source and free software packages in common use.
	{T}he book also looks at the strengths and weaknesses of using {L}inux
	in an embedded system, plus a discussion of licensing issues, and
	an introduction to real-time, with a discussion of real-time options
	for {L}inux. {T}his indispensable book features arcane and previously
	undocumented procedures for: {B}uilding your own {GNU} development
	toolchain {U}sing an efficient embedded development framework {S}electing,
	configuring, building, and installing a target-specific kernel {C}reating
	a complete target root filesystem {S}etting up, manipulating, and
	using solid-state storage devices {I}nstalling and configuring a
	bootloader for the target {C}ross-compiling a slew of utilities and
	packages {D}ebugging your embedded system using a plethora of tools
	and techniques {U}sing the u{C}libc, {B}usy{B}ox, {U}-{B}oot, {O}pen{SSH},
	thttpd, tftp, strace, and gdb packages {B}y presenting how to build
	the operating system components from pristine sources and how to
	find more documentation or help, "{B}uilding {E}mbedded {L}inux {S}ystems"
	greatly simplifies the task of keeping complete control over your
	embedded operating system. },
  file          = {Yaghmour2008.pdf:files\\Yaghmour2008.pdf:PDF},
  groups        = {Books},
  keywords      = {BASICS,BUSYBOX,EMBEDDED SYSTEMS,GDB,GNU,INTRODUCTION,KERNEL,LINUX,OPENSSH,OPERATING SYSTEMS,U-BOOT,UCLIBC},
  mendeley-tags = {BASICS,BUSYBOX,EMBEDDED SYSTEMS,GDB,GNU,INTRODUCTION,KERNEL,LINUX,OPENSSH,OPERATING SYSTEMS,U-BOOT,UCLIBC},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.27},
}

@InCollection{Yeh2004,
  author    = {Yeh, YingC.(Bob)},
  title     = {{U}nique {D}ependability {I}ssues for {C}ommercial {A}irplane {F}ly by {W}ire {S}ystems},
  booktitle = {Building the Information Society},
  year      = {2004},
  editor    = {Jacquart, Renè},
  language  = {English},
  volume    = {156},
  series    = {IFIP International Federation for Information Processing},
  publisher = {Springer US},
  isbn      = {978-1-4020-8156-9},
  pages     = {213--220},
  url       = {http://dx.doi.org/10.1007/978-1-4020-8157-6_19},
  keywords  = {Dependability; Fly-By-Wire (FBW)},
  owner     = {hilrob},
  timestamp = {2014.09.23},
}

@InProceedings{Yi1994,
  author    = {Wang Yi and Paul Pettersson and Mats Daniels},
  title     = {{Automatic Verification of Real-Time Communicating Systems By Constraint-Solving}},
  booktitle = {Proc.\ of the 7{\em th} Int.\ Conf.\ on Formal Description Techniques},
  year      = {1994},
  editor    = {Dieter Hogrefe and Stefan Leue},
  publisher = {North--Holland},
  pages     = {223--238},
  file      = {Yi1994.pdf:files\\Yi1994.pdf:PDF},
  groups    = {Tools},
  key       = {forte94},
  owner     = {hilrob},
  timestamp = {2013.06.20},
}

@InProceedings{Zhang2000,
  author    = {Xiaodong Zhang and Yanxia Qu and Li Xiao},
  title     = {{I}mproving distributed workload performance by sharing both {CPU} and memory resources},
  booktitle = {Distributed Computing Systems, 2000. Proceedings. 20th International Conference on},
  year      = {2000},
  pages     = {233--241},
  doi       = {10.1109/ICDCS.2000.840934},
  abstract  = {We develop and examine job migration policies by considering effective
	usage of global memory in addition to CPU load sharing in distributed
	systems. When a node is identified for lacking sufficient memory
	space to serve jobs, one or more jobs of the node will be migrated
	to remote nodes with low memory allocations. If the memory space
	is sufficiently large the jobs will be scheduled by a CPU-based load
	sharing policy. Following the principle of sharing both CPU and memory
	resources, we present several load sharing alternatives. Out objective
	is to reduce the number of page faults caused by unbalanced memory
	allocations for jobs among distributed nodes, so that overall performance
	of a distributed system can be significantly improved. We have conducted
	trace-driven simulations to compare CPU-based load sharing policies
	with our policies. We show that our load sharing policies not only
	improve performance of memory bound jobs, but also maintain the same
	load sharing quality as the CPU-based policies for CPU-bound jobs.
	Regarding remote execution and preemptive migration strategies, our
	experiments indicate that a strategy selection in load sharing is
	dependent on the amount of memory demand of jobs-remote execution
	is more effective for memory-bound jobs, and preemptive migration
	is more effective for CPU-bound jobs. Our CPU memory-based policy
	using either high performance or high throughput approach and using
	the remote execution strategy performs the best for both CPU-bound
	and memory-bound jobs},
  file      = {Zhang2000.pdf:files\\Zhang2000.pdf:PDF},
  groups    = {Load Balancing / Clusters},
  issn      = {1063-6927},
  keywords  = {resource allocation;scheduling;software performance evaluation;storage allocation;virtual machines;CPU resources;distributed systems;distributed workload performance;high throughput;job migration policies;load sharing;memory allocations;memory bound jobs;memory resources;page faults;performance evaluation;preemptive migration;remote execution;trace-driven simulations;Application software;Computer science;Degradation;Educational institutions;Load management;Nominations and elections;Operating systems;Space technology;Sun;Throughput},
  owner     = {hilrob},
  timestamp = {2014.05.19},
}

@InProceedings{Zhuo2005,
  author    = {Jianli Zhuo and Chakrabarti, C.},
  title     = {{A}n efficient dynamic task scheduling algorithm for battery powered {DVS} systems},
  booktitle = {Proc. Asia and South Pacific Design Automation Conf the ASP-DAC 2005},
  year      = {2005},
  volume    = {2},
  pages     = {846--849},
  doi       = {10.1109/ASPDAC.2005.1466474},
  file      = {Zhuo2005.pdf:files\\Zhuo2005.pdf:PDF},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.06.09},
}

@Book{Zobel2008,
  author        = {Zöbel, Dieter},
  title         = {{E}chtzeitsysteme - {G}rundlagen der {P}lanung},
  year          = {2008},
  series        = {eXamen.press},
  publisher     = {Springer},
  isbn          = {3540763953},
  pages         = {323},
  abstract      = {{E}chtzeitsysteme sind heute \"{u}berall vorhanden, aber dennoch meist
	verborgen. {O}hne unmittelbar in {E}rscheinung zu treten, steuern
	sie {P}roduktionsanlagen, assistieren beim {A}utofahren oder sichern
	die {Q}ualit\"{a}t der {S}prach\"{u}bertragung in weltweiten {N}etzen.
	{T}rotz der ungeheueren {B}andbreite dieser {A}nwendungen stellen
	{R}echtzeitigkeit, {V}orhersagbarkeit und {Z}uverl\"{a}ssigkeit verbindende
	{E}igenschaften dar. {E}chtzeitsysteme greifen in technische {P}rozesse
	ein, um sie zum richtigen {Z}eitpunkt zu den richtigen {A}ktionen
	zu bewegen. {V}or diesem {H}intergrund ist eingehend zu planen, wann
	welche {A}ktionen durchgef\"{u}hrt werden sollen. {F}\"{u}r die {E}ntwickler
	von {E}chtzeitanwendungen ist es deshalb unerl\"{a}\ss lich, die
	grundlegenden {P}lanungsverfahren zu kennen, sowie deren {E}insatzf\"{a}higkeit
	und deren {A}nforderungen an die {I}nfrastruktur absch\"{a}tzen zu
	k\"{o}nnen. {Z}u den relevanten {I}nfrastrukturen geh\"{o}ren einfache
	{R}echensysteme, {M}ehrprozessorsysteme und verteilte {S}ysteme.
	{Z}ahlreiche {A}ufgaben mit {L}\"{o}sungen sollen zu einem vertieften
	{V}erst\"{a}ndnis beitragen.},
  file          = {Zobel2008.pdf:files\\Zobel2008.pdf:PDF},
  groups        = {Books, Betriebssysteme, (RT-) Embedded Systems, Optimierung, (RT-) Scheduling, Software Modellierung, WCET},
  keywords      = {INTRODUCTION,OVERVIEW,REAL-TIME-SYSTEMS,RESOURCE PLANNING},
  mendeley-tags = {INTRODUCTION,OVERVIEW,REAL-TIME-SYSTEMS,RESOURCE PLANNING},
  owner         = {hilrob},
  read          = {unread},
  timestamp     = {2010.05.27},
}

@Book{Hochbaum1997,
  title     = {{A}pproximation algorithms for {NP}-hard problems},
  year      = {1997},
  editor    = {Hochbaum, Dorit S.},
  note      = {Ursprünglich bestellt nach dem Lesen der Quelle [AlEnawy2005] - interessant ist hier die eine Survey über Bin-Packing Algorithmen: "Approximation Algorithms for Bin Packing: A Survey."},
  publisher = {PWS Publishing Co.},
  isbn      = {0-534-94968-1},
  abstract  = {{T}his is the first book to fully address the study of approximation
	algorithms as a tool for coping with intractable problems. {W}ith
	chapters contributed by leading researchers in the field, this book
	introduces unifying techniques in the analysis of approximation algorithms.
	{APPROXIMATION} {ALGORITHMS} {FOR} {NP}-{HARD} {PROBLEMS} is intended
	for computer scientists and operations researchers interested in
	specific algorithm implementations, as well as design tools for algorithms.
	{A}mong the techniques discussed: the use of linear programming,
	primal-dual techniques in worst-case analysis, semidefinite programming,
	computational geometry techniques, randomized algorithms, average-case
	analysis, probabilistically checkable proofs and inapproximability,
	and the {M}arkov {C}hain {M}onte {C}arlo method. {T}he text includes
	a variety of pedagogical features: definitions, exercises, open problems,
	glossary of problems, index, and notes on how best to use the book.},
  address   = {Boston, MA, USA},
  groups    = {Books, Optimierung, (RT-) Scheduling},
  owner     = {hilrob},
  read      = {next},
  timestamp = {2010.08.26},
}

@Book{Kornaros2010,
  title         = {{M}ulti-{C}ore {E}mbedded {S}ystems},
  year          = {2010},
  editor        = {Kornaros, Georgios},
  series        = {Embedded Multi-Core Systems},
  publisher     = {CRC Press},
  isbn          = {978-1-4398-1161-0},
  pages         = {501},
  abstract      = {{A}n introduction to the fundamental aspects of developing modem embedded
	systems utilizing many cores, this book provides insight into the
	main problems, limitations, possibilities and future growth. {T}he
	author begins with coverage of multi-core architecture, application
	of specific customizable embedded systems, and heterogenous multi-core
	embedded systems. {H}e then explores multi-core interconnects and
	{N}o{C}, power optimization and reliability issues, and performance
	tools and benchmarks. {T}he book also covers hardware and software
	resource management, multithreading, and multi-core programming challenges
	and includes numerous case studies. },
  groups        = {Books},
  keywords      = {EMBEDDED SYSTEMS,MULTI-CORE,PARALLELIZATION},
  mendeley-tags = {EMBEDDED SYSTEMS,MULTI-CORE,PARALLELIZATION},
  owner         = {hilrob},
  read          = {done},
  timestamp     = {2010.05.27},
}

@Book{Nurmi2004,
  title     = {{I}nterconnect-{C}entric {D}esign for {A}dvanced {SOC} and {NOC}},
  year      = {2004},
  editor    = {Nurmi, J. and Tenhunen, H. and Isoaho, J. and Jantsch, A.},
  note      = {Wegen [Kornaros2010] Kapitel 6 bestellt; interessant soll "Chapter 12: Modellierung der Kommunikation von Komponenten" sein},
  publisher = {Kluwer Academic Publishers},
  abstract  = {{I}n {I}nterconnect-centric {D}esign for {A}dvanced {S}o{C} and {N}o{C},
	we have tried to create a comprehensive understanding about on-chip
	interconnect characteristics, design methodologies, layered views
	on different abstraction levels and finally about applying the interconnect-centric
	design in system-on-chip design. {T}raditionally, on-chip communication
	design has been done using rather ad-hoc and informal approaches
	that fail to meet some of the challenges posed by next-generation
	{SOC} designs, such as performance and throughput, power and energy,
	reliability, predictability, synchronization, and management of concurrency.
	{T}o address these challenges, it is critical to take a global view
	of the communication problem, and decompose it along lines that make
	it more tractable. {W}e believe that a layered approach similar to
	that defined by the communication networks community should also
	be used for on-chip communication design. {T}he design issues are
	handled on physical and circuit layer, logic and architecture layer,
	and from system design methodology and tools point of view. {F}ormal
	communication modeling and refinement is used to bridge the communication
	layers, and network-centric modeling of multiprocessor on-chip networks
	and socket-based design will serve the development of platforms for
	{S}o{C} and {N}o{C} integration. {I}nterconnect-centric {D}esign
	for {A}dvanced {S}o{C} and {N}o{C} is concluded by two application
	examples: interconnect and memory organization in {S}o{C}s for advanced
	set-top boxes and {TV}, and a case study in {N}o{C} platform design
	for more generic applications.},
  groups    = {Books},
  owner     = {hilrob},
  read      = {unread},
  timestamp = {2010.08.23},
}

@Book{Pohl2012,
  title     = {{M}odel-{B}ased {E}ngineering of {E}mbedded {S}ystems: {T}he {SPES} 2020 {M}ethodology},
  year      = {2012},
  editor    = {Pohl, K. and Hönninger, H. and Achatz, R. and Broy, M.},
  publisher = {Springer},
  isbn      = {3642346138},
  groups    = {Books, Methodik, Formale Methoden, (RT-) Scheduling, Software Modellierung, Systems Engineering, Safety-Critical Systems, (Embedded) Model-driven Architecture},
  owner     = {hilrob},
  read      = {done},
  timestamp = {2013.01.16},
}

@BOOK{Spitzer2006,
  title = {{A}vionics: {D}evelopment and {I}mplementation ({T}he {A}vionics
	{H}andbook, {S}econd {E}dition)},
  publisher = {CRC Press},
  year = {2006},
  editor = {Cary R. Spitzer},
  series = {The Electrical Engineering Handbook Series},
  abstract = {{R}enamed to reflect the increased role of digital electronics in
	modern flight control systems, {C}ary {S}pitzer's industry-standard
	{D}igital {A}vionics {H}andbook, {S}econd {E}dition is available
	in two comprehensive volumes designed to provide focused coverage
	for specialists working in different areas of avionics development.
	{T}he second installment, {A}vionics: {D}evelopment and {I}mplementation
	explores the practical side of avionics. {T}he book examines such
	topics as modeling and simulation, electronic hardware reliability,
	certification, fault tolerance, and several examples of real-world
	applications. {N}ew chapters discuss {RTCA} {DO}-297/{EUROCAE} {ED}-124
	integrated modular avionics development and the {G}enesis platform.},
  isbn = {978-0849384417},
  keywords = {AVIONICS, IMA, DO-178B,},
  owner = {hilrob},
  read = {unread},
  timestamp = {2011.01.04}
}

@Misc{Economist2011,
  title        = {{I}nside story: {P}arallel bars},
  year         = {2011},
  howpublished = {{The Economist - print edition}},
  month        = jun,
  url          = {http://www.economist.com/node/18750706},
  abstract     = {{C}omputing: {P}arallel programming, once an obscure niche, is the
	focus of increasing interest as "multicore" chips proliferate in
	ordinary {PC}s.},
  file         = {Economist2011.pdf:files\\Economist2011.pdf:PDF},
  groups       = {Multi-Core Allgemein, Parallel Programming Models},
  keywords     = {MULTI-CORE;},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2011.06.14},
}

@Misc{HighRely2009,
  title        = {{DO}-178{B} {O}verview \& {P}rocess {F}low},
  year         = {2009},
  howpublished = {http://highrely.com/whitepapers.php},
  month        = apr,
  url          = {http://highrely.com/whitepapers.php},
  file         = {HighRely2009.pdf:files\\HighRely2009.pdf:PDF},
  groups       = {Domänen-spezifisch, (RT-) Embedded Systems, Reliability & Dependability},
  keywords     = {DO-178B; AVIONICS; CERTIFICATION; RELIABILITY},
  owner        = {hilrob},
  read         = {done},
  timestamp    = {2010.08.27},
}

@Booklet{WBSysEng2009,
  title        = {{G}rundlagen {M}ethoden {S}ystems {E}ngineering},
  year         = {2009},
  howpublished = {Online},
  url          = {http://www.ksaare.ch/LehrgKursl/infa014/Unterlagen/Kompetenzfeld%20PM/IT%20Projektmanagement/im_Ordner/04_Ergaenzungen/01_Systems%20Engineering%20Workbook%20V4.0.pdf},
  file         = {WBSysEng2009.pdf:files\\WBSysEng2009.pdf:PDF},
  groups       = {Systems Engineering},
  owner        = {hilrob},
  read         = {Done},
  timestamp    = {2012.11.09},
}

@Article{Lauriere1978,
  author        = {Lauriere, J.-L.},
  title         = {A language and a program for stating and solving combinatorial problems},
  journal       = {Artificial Intelligence},
  year          = {1978},
  volume        = {10},
  number        = {1},
  pages         = {29--127},
  note          = {cited By 124},
  doi           = {10.1016/0004-3702(78)90029-2},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-0002931606&doi=10.1016%2f0004-3702%2878%2990029-2&partnerID=40&md5=107f5b639c293243c04e786c3ca3917e},
  affiliation   = {Institut de Programmation, GR 22-CNRS, Tour 55-65, 11 Quai St-Bernard, 75005 Paris, France},
  document_type = {Article},
  source        = {Scopus},
}

@Book{Paparrizou2015,
  author    = {Paparrizou, A.},
  title     = {Efficient Algorithms for Strong Local Consistencies and Adaptive Techniques in Constraint Satisfaction Problems},
  year      = {2015},
  date      = {2015-03-24},
  publisher = {LULU Press},
  isbn      = {9781329010093},
  pagetotal = {166},
  ean       = {9781329010093},
  file      = {:files\\Paparrizou2015:PDF},
}

@Manual{Prudhomme2016,
  author       = {Charles Prud'homme and Jean-Guillaume Fages and Xavier Lorca},
  title        = {Choco Documentation},
  year         = {2016},
  organization = {TASC, INRIA Rennes, LINA CNRS UMR 6241, COSLING S.A.S.},
  url          = {http://www.choco-solver.org },
  timestamp    = {Thu, 13 June 2016},
}

@Misc{JGraphT,
  title = {Welcome to {JGraphT} - a free Java Graph Library},
  url   = {http://jgrapht.sourceforge.net/},
}

@InProceedings{Michel2012,
  author    = {Michel, Laurent and Van Hentenryck, Pascal},
  title     = {Activity-Based Search for Black-box Constraint Programming Solvers},
  booktitle = {Proceedings of the 9th International Conference on Integration of AI and OR Techniques in Constraint Programming for Combinatorial Optimization Problems},
  year      = {2012},
  series    = {CPAIOR'12},
  publisher = {Springer-Verlag},
  location  = {Nantes, France},
  isbn      = {978-3-642-29827-1},
  pages     = {228--243},
  doi       = {10.1007/978-3-642-29828-8_15},
  url       = {http://dx.doi.org/10.1007/978-3-642-29828-8_15},
  acmid     = {2342581},
  address   = {Berlin, Heidelberg},
  file      = {:files\\Michel2012.pdf:PDF},
  numpages  = {16},
}

@InBook{Refalo2004,
  author    = {Refalo, Philippe},
  title     = {Impact-Based Search Strategies for Constraint Programming},
  booktitle = {Principles and Practice of Constraint Programming -- CP 2004: 10th International Conference, CP 2004, Toronto, Canada, September 27 -October 1, 2004. Proceedings},
  year      = {2004},
  editor    = {Wallace, Mark},
  publisher = {Springer Berlin Heidelberg},
  isbn      = {978-3-540-30201-8},
  pages     = {557--571},
  doi       = {10.1007/978-3-540-30201-8_41},
  url       = {http://dx.doi.org/10.1007/978-3-540-30201-8_41},
  address   = {Berlin, Heidelberg},
  file      = {Refalo2004.pdf:files\\Refalo2004.pdf:PDF},
}

@Book{Rossi2006,
  title     = {Handbook of Constraint Programming},
  year      = {2006},
  date      = {2006-10-11},
  editor    = {Francesca Rossi and Peter van Beek and Toby Walsh},
  publisher = {ELSEVIER SCIENCE \& TECHNOLOGY},
  isbn      = {0444527265},
  pagetotal = {955},
  url       = {http://www.ebook.de/de/product/5834373/handbook_of_constraint_programming.html},
  ean       = {9780444527264},
}

@Book{Dechter2003,
  author    = {Dechter, Rina},
  title     = {Constraint Processing},
  year      = {2003},
  date      = {2003-05-22},
  publisher = {Elsevier Science \& Technology},
  isbn      = {1558608907},
  pagetotal = {480},
  url       = {http://www.ebook.de/de/product/3261979/rina_dechter_constraint_processing.html},
  ean       = {9781558608900},
}

@InProceedings{Regin1994,
  author    = {R{\'e}gin, Jean-Charles},
  title     = {A Filtering Algorithm for Constraints of Difference in CSPs},
  booktitle = {Proceedings of the Twelfth National Conference on Artificial Intelligence (Vol. 1)},
  year      = {1994},
  series    = {AAAI '94},
  publisher = {American Association for Artificial Intelligence},
  location  = {Seattle, Washington, USA},
  isbn      = {0-262-61102-3},
  pages     = {362--367},
  url       = {http://dl.acm.org/citation.cfm?id=199288.178024},
  acmid     = {178024},
  address   = {Menlo Park, CA, USA},
  file      = {Regin1994.pdf:files\\Regin1994.pdf:PDF},
  numpages  = {6},
}

@Comment{jabref-meta: databaseType:biblatex;}

@Comment{jabref-meta: groupstree:
0 AllEntriesGroup:;
1 ExplicitGroup:Books\;2\;;
1 ExplicitGroup:Papers\;2\;;
2 KeywordGroup:Done\;0\;read\;done\;0\;0\;;
2 KeywordGroup:Reading\;0\;read\;reading\;0\;0\;;
2 KeywordGroup:Next\;0\;read\;next\;0\;0\;;
2 SearchGroup:Unread\;0\;(read=unread)\;0\;0\;;
1 ExplicitGroup:Misc\;2\;;
1 ExplicitGroup:My Publications\;2\;;
1 ExplicitGroup:Themen\;2\;;
2 ExplicitGroup:Betriebssysteme\;2\;;
3 ExplicitGroup:Mikrokernel\;2\;;
2 ExplicitGroup:Cyber-Physical Systems\;2\;;
2 ExplicitGroup:Domänen-spezifisch\;2\;;
2 ExplicitGroup:(RT-) Embedded Systems\;2\;;
2 ExplicitGroup:Energy & Power\;2\;;
2 ExplicitGroup:Konsolidierung & Integration\;2\;;
2 ExplicitGroup:Many-Core\;2\;;
2 ExplicitGroup:Methodik\;2\;;
3 ExplicitGroup:Correctness by Construction\;2\;;
3 ExplicitGroup:Konstruktive Synthese\;2\;;
2 ExplicitGroup:Multi-Core Allgemein\;2\;;
3 ExplicitGroup:Embedded Multi-Core\;2\;;
2 ExplicitGroup:Formale Methoden\;2\;;
2 ExplicitGroup:On-Chip Interconnect / NoC\;2\;;
2 ExplicitGroup:Optimierung\;2\;;
2 ExplicitGroup:Parallel Programming Models\;2\;;
2 ExplicitGroup:Reliability & Dependability\;2\;;
2 ExplicitGroup:(RT-) Scheduling\;2\;;
2 ExplicitGroup:(Embedded) Security\;2\;;
2 ExplicitGroup:Software Modellierung\;2\;;
2 ExplicitGroup:Systems Engineering\;2\;;
2 ExplicitGroup:Task Migration\;2\;;
2 ExplicitGroup:Virtualisierung & Partitionierung\;2\;;
2 ExplicitGroup:WCET\;2\;;
2 ExplicitGroup:Software Deployment\;2\;;
2 ExplicitGroup:Safety-Critical Systems\;2\;;
2 ExplicitGroup:(Embedded) Model-driven Architecture\;2\;;
2 ExplicitGroup:Zuverlässigkeit\;2\;;
2 ExplicitGroup:Requirements\;2\;;
2 ExplicitGroup:Produktlinien / Softwarefamilien\;2\;;
2 ExplicitGroup:Load Balancing / Clusters\;2\;;
2 ExplicitGroup:MPSoC Synthese\;2\;;
1 ExplicitGroup:Tools\;2\;;
1 ExplicitGroup:Standards & Normen\;2\;;
}

@Comment{jabref-meta: saveActions:enabled;
date[normalize_date]
pages[normalize_page_numbers]
month[normalize_month]
;}

@Comment{jabref-meta: selector_read:done;next;reading;unread;}
